<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpsl_1_1async_1_1details_1_1task" kind="class" language="C++" prot="public" final="yes">
    <compoundname>psl::async::details::task</compoundname>
    <basecompoundref prot="public" virt="non-virtual">psl::async::details::task_base</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename R</type>
      </param>
      <param>
        <type>typename Storage</type>
        <defval>std::function&lt;void()&gt;</defval>
      </param>
      <param>
        <type>typename Future</type>
        <defval>std::future&lt;R&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classpsl_1_1async_1_1details_1_1task_1acbf93bc5371cc0edb24b0c62495fae6a" prot="private" static="no">
        <type>typename std::remove_reference&lt; Storage &gt;::type</type>
        <definition>using psl::async::details::task&lt; R, Storage, Future &gt;::Actual_Storage =  typename std::remove_reference&lt;Storage&gt;::type</definition>
        <argsstring></argsstring>
        <name>Actual_Storage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/details/task.hpp" line="18" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/details/task.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpsl_1_1async_1_1details_1_1task_1ab65d241ccf56b5d1994ced7c7a28a891" prot="private" static="no" mutable="no">
        <type>Actual_Storage</type>
        <definition>Actual_Storage psl::async::details::task&lt; R, Storage, Future &gt;::m_Invocable</definition>
        <argsstring></argsstring>
        <name>m_Invocable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/details/task.hpp" line="28" column="16" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/details/task.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1async_1_1details_1_1task_1a74b4c3f46342c1221cd1a90526d5db9e" prot="private" static="no" mutable="no">
        <type>std::promise&lt; R &gt;</type>
        <definition>std::promise&lt;R&gt; psl::async::details::task&lt; R, Storage, Future &gt;::m_Promise</definition>
        <argsstring></argsstring>
        <name>m_Promise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/details/task.hpp" line="29" column="14" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/details/task.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpsl_1_1async_1_1details_1_1task_1a70b75458a42290375ec72a0616bcf146" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>psl::async::details::task&lt; R, Storage, Future &gt;::task</definition>
        <argsstring>(Storage &amp;&amp;invocable)</argsstring>
        <name>task</name>
        <param>
          <type>Storage &amp;&amp;</type>
          <declname>invocable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/details/task.hpp" line="21" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/details/task.hpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1details_1_1task_1aeb22a290b00471f66c33f9dc1f34c5df" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual psl::async::details::task&lt; R, Storage, Future &gt;::~task</definition>
        <argsstring>()=default</argsstring>
        <name>~task</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/details/task.hpp" line="22" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1details_1_1task_1a640dee5a6cd674ddf80c4ba254304105" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>Future</type>
        <definition>Future psl::async::details::task&lt; R, Storage, Future &gt;::future</definition>
        <argsstring>() noexcept</argsstring>
        <name>future</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/details/task.hpp" line="23" column="8" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/details/task.hpp" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1details_1_1task_1a446563ef15a07f420e1f736abb2efd17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::async::details::task&lt; R, Storage, Future &gt;::operator()</definition>
        <argsstring>() override</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/details/task.hpp" line="25" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/details/task.hpp" bodystart="25" bodyend="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/details/task.hpp" line="17" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/details/task.hpp" bodystart="16" bodyend="30"/>
    <listofallmembers>
      <member refid="classpsl_1_1async_1_1details_1_1task_1acbf93bc5371cc0edb24b0c62495fae6a" prot="private" virt="non-virtual"><scope>psl::async::details::task</scope><name>Actual_Storage</name></member>
      <member refid="classpsl_1_1async_1_1details_1_1task_1a640dee5a6cd674ddf80c4ba254304105" prot="public" virt="non-virtual"><scope>psl::async::details::task</scope><name>future</name></member>
      <member refid="classpsl_1_1async_1_1details_1_1task_1ab65d241ccf56b5d1994ced7c7a28a891" prot="private" virt="non-virtual"><scope>psl::async::details::task</scope><name>m_Invocable</name></member>
      <member refid="classpsl_1_1async_1_1details_1_1task_1a74b4c3f46342c1221cd1a90526d5db9e" prot="private" virt="non-virtual"><scope>psl::async::details::task</scope><name>m_Promise</name></member>
      <member refid="classpsl_1_1async_1_1details_1_1task_1a446563ef15a07f420e1f736abb2efd17" prot="public" virt="non-virtual"><scope>psl::async::details::task</scope><name>operator()</name></member>
      <member refid="classpsl_1_1async_1_1details_1_1task_1a70b75458a42290375ec72a0616bcf146" prot="public" virt="non-virtual"><scope>psl::async::details::task</scope><name>task</name></member>
      <member refid="classpsl_1_1async_1_1details_1_1task_1aeb22a290b00471f66c33f9dc1f34c5df" prot="public" virt="virtual"><scope>psl::async::details::task</scope><name>~task</name></member>
      <member refid="classpsl_1_1async_1_1details_1_1task__base_1aa5f2554c10b49712915a67ecb49fb312" prot="public" virt="virtual"><scope>psl::async::details::task</scope><name>~task_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
