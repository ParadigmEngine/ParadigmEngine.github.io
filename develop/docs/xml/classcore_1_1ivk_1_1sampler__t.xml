<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcore_1_1ivk_1_1sampler__t" kind="class" language="C++" prot="public" final="yes">
    <compoundname>core::ivk::sampler_t</compoundname>
    <includes refid="vk_2sampler_8hpp" local="no">sampler.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcore_1_1ivk_1_1sampler__t_1a8cdfb59ef935348db87403cd9d4b2597" prot="private" static="no" mutable="no">
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1data_1_1sampler__t" kindref="compound">core::data::sampler_t</ref> &gt;</type>
        <definition>core::resource::handle&lt;core::data::sampler_t&gt; core::ivk::sampler_t::m_Data</definition>
        <argsstring></argsstring>
        <name>m_Data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/sampler.hpp" line="43" column="24" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/sampler.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1sampler__t_1abc353063664aabed33cfd2848dccd154" prot="private" static="no" mutable="no">
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1ivk_1_1context" kindref="compound">core::ivk::context</ref> &gt;</type>
        <definition>core::resource::handle&lt;core::ivk::context&gt; core::ivk::sampler_t::m_Context</definition>
        <argsstring></argsstring>
        <name>m_Context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/sampler.hpp" line="44" column="24" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/sampler.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1sampler__t_1a87944fae46c880b6217564f55ffa1671" prot="private" static="no" mutable="no">
        <type>std::vector&lt; vk::Sampler &gt;</type>
        <definition>std::vector&lt;vk::Sampler&gt; core::ivk::sampler_t::m_Samplers</definition>
        <argsstring></argsstring>
        <name>m_Samplers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/sampler.hpp" line="46" column="13" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/sampler.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcore_1_1ivk_1_1sampler__t_1a154b8edf2a4c9404d44c21204df99305" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sampler_t::sampler_t</definition>
        <argsstring>(core::resource::cache_t &amp;cache, const core::resource::metadata &amp;metaData, psl::meta::file *metaFile, core::resource::handle&lt; core::ivk::context &gt; context, core::resource::handle&lt; core::data::sampler_t &gt; sampler_data)</argsstring>
        <name>sampler_t</name>
        <param>
          <type>core::resource::cache_t &amp;</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const <ref refid="structcore_1_1resource_1_1metadata" kindref="compound">core::resource::metadata</ref> &amp;</type>
          <declname>metaData</declname>
        </param>
        <param>
          <type><ref refid="classpsl_1_1meta_1_1file" kindref="compound">psl::meta::file</ref> *</type>
          <declname>metaFile</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1ivk_1_1context" kindref="compound">core::ivk::context</ref> &gt;</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1data_1_1sampler__t" kindref="compound">core::data::sampler_t</ref> &gt;</type>
          <declname>sampler_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/sampler.hpp" line="26" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/sampler.cpp" bodystart="13" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1sampler__t_1acb7f1dd856a4dc08c1ffcf704b1a01a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sampler_t::~sampler_t</definition>
        <argsstring>()</argsstring>
        <name>~sampler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/sampler.hpp" line="31" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/sampler.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1sampler__t_1a49d9796b9bda2d43fa14da1356b06756" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const vk::Sampler &amp;</type>
        <definition>const vk::Sampler &amp; sampler_t::get</definition>
        <argsstring>(size_t mip=0u) const noexcept</argsstring>
        <name>get</name>
        <param>
          <type>size_t</type>
          <declname>mip</declname>
          <defval>0u</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a vulkan sampler object for the given mip chain size. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mip</parametername>
</parameternamelist>
<parameterdescription>
<para>the mip chain size to request. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>it will return mip_max for mip sizes larger than mip_max. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/sampler.hpp" line="36" column="19" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/sampler.cpp" bodystart="50" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1sampler__t_1aa3eb98bf25a034acc5dba14f195def8a" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classcore_1_1data_1_1sampler__t" kindref="compound">core::data::sampler_t</ref> &amp;</type>
        <definition>const core::data::sampler_t &amp; sampler_t::data</definition>
        <argsstring>() const noexcept</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the data used by this sampler. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/sampler.hpp" line="39" column="29" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/sampler.cpp" bodystart="60" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>sampler object for texture filtering and lookups </para>
    </briefdescription>
    <detaileddescription>
<para>In Vulkan textures are accessed by samplers, this separates all the sampling information from the texture data. this means you could have multiple sampler objects for the same texture with different settings similar to the samplers available with OpenGL 3.3 </para>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/sampler.hpp" line="24" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/sampler.hpp" bodystart="23" bodyend="47"/>
    <listofallmembers>
      <member refid="classcore_1_1ivk_1_1sampler__t_1aa3eb98bf25a034acc5dba14f195def8a" prot="public" virt="non-virtual"><scope>core::ivk::sampler_t</scope><name>data</name></member>
      <member refid="classcore_1_1ivk_1_1sampler__t_1a49d9796b9bda2d43fa14da1356b06756" prot="public" virt="non-virtual"><scope>core::ivk::sampler_t</scope><name>get</name></member>
      <member refid="classcore_1_1ivk_1_1sampler__t_1abc353063664aabed33cfd2848dccd154" prot="private" virt="non-virtual"><scope>core::ivk::sampler_t</scope><name>m_Context</name></member>
      <member refid="classcore_1_1ivk_1_1sampler__t_1a8cdfb59ef935348db87403cd9d4b2597" prot="private" virt="non-virtual"><scope>core::ivk::sampler_t</scope><name>m_Data</name></member>
      <member refid="classcore_1_1ivk_1_1sampler__t_1a87944fae46c880b6217564f55ffa1671" prot="private" virt="non-virtual"><scope>core::ivk::sampler_t</scope><name>m_Samplers</name></member>
      <member refid="classcore_1_1ivk_1_1sampler__t_1a154b8edf2a4c9404d44c21204df99305" prot="public" virt="non-virtual"><scope>core::ivk::sampler_t</scope><name>sampler_t</name></member>
      <member refid="classcore_1_1ivk_1_1sampler__t_1acb7f1dd856a4dc08c1ffcf704b1a01a1" prot="public" virt="non-virtual"><scope>core::ivk::sampler_t</scope><name>~sampler_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
