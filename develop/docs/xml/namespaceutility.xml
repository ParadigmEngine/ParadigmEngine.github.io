<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespaceutility" kind="namespace" language="C++">
    <compoundname>utility</compoundname>
    <innerclass refid="structutility_1_1converter" prot="public">utility::converter</innerclass>
    <innerclass refid="structutility_1_1converter_3_01bool_01_4" prot="public">utility::converter&lt; bool &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01char_0f_n_0e_4" prot="public">utility::converter&lt; char[N]&gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01double_01_4" prot="public">utility::converter&lt; double &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01float_01_4" prot="public">utility::converter&lt; float &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01int16__t_01_4" prot="public">utility::converter&lt; int16_t &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01int32__t_01_4" prot="public">utility::converter&lt; int32_t &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01int64__t_01_4" prot="public">utility::converter&lt; int64_t &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01int8__t_01_4" prot="public">utility::converter&lt; int8_t &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01psl_1_1string16__t_01_4" prot="public">utility::converter&lt; psl::string16_t &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01psl_1_1string8__t_01_4" prot="public">utility::converter&lt; psl::string8_t &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01psl_1_1tmat_3_01precision__t_00_01n_x_00_01n_y_01_4_01_4" prot="public">utility::converter&lt; psl::tmat&lt; precision_t, nX, nY &gt; &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01psl_1_1tquat_3_01precision__t_01_4_01_4" prot="public">utility::converter&lt; psl::tquat&lt; precision_t &gt; &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01psl_1_1tvec_3_01precision__t_00_01size_01_4_01_4" prot="public">utility::converter&lt; psl::tvec&lt; precision_t, size &gt; &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01psl_1_1_u_i_d_01_4" prot="public">utility::converter&lt; psl::UID &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01std_1_1bitset_3_01_n_01_4_01_4" prot="public">utility::converter&lt; std::bitset&lt; N &gt; &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01uint16__t_01_4" prot="public">utility::converter&lt; uint16_t &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01uint32__t_01_4" prot="public">utility::converter&lt; uint32_t &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01uint64__t_01_4" prot="public">utility::converter&lt; uint64_t &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01uint8__t_01_4" prot="public">utility::converter&lt; uint8_t &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01vk_1_1_clear_value_01_4" prot="public">utility::converter&lt; vk::ClearValue &gt;</innerclass>
    <innerclass refid="structutility_1_1converter_3_01vk_1_1_flags_3_01_bit_type_01_4_01_4" prot="public">utility::converter&lt; vk::Flags&lt; BitType &gt; &gt;</innerclass>
    <innerclass refid="classutility_1_1debug" prot="public">utility::debug</innerclass>
    <innerclass refid="classutility_1_1string__constructor__t" prot="public">utility::string_constructor_t</innerclass>
    <innerclass refid="classutility_1_1terminal" prot="public">utility::terminal</innerclass>
    <innernamespace refid="namespaceutility_1_1application">utility::application</innernamespace>
    <innernamespace refid="namespaceutility_1_1binary">utility::binary</innernamespace>
    <innernamespace refid="namespaceutility_1_1details">utility::details</innernamespace>
    <innernamespace refid="namespaceutility_1_1geometry">utility::geometry</innernamespace>
    <innernamespace refid="namespaceutility_1_1os">utility::os</innernamespace>
    <innernamespace refid="namespaceutility_1_1platform">utility::platform</innernamespace>
    <innernamespace refid="namespaceutility_1_1string">utility::string</innernamespace>
    <innernamespace refid="namespaceutility_1_1templates">utility::templates</innernamespace>
    <innernamespace refid="namespaceutility_1_1vulkan">utility::vulkan</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceutility_1a64f363a6076f3b670262e0acd9e87fdb" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t utility::crc32_table[256]</definition>
        <argsstring>[256]</argsstring>
        <name>crc32_table</name>
        <initializer>{
	  0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3, 0x0edb8832,
	  0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2,
	  0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856, 0x646ba8c0, 0xfd62f97a,
	  0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,
	  0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3,
	  0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423,
	  0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab,
	  0xb6662d3d, 0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,
	  0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01, 0x6b6b51f4,
	  0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,
	  0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074,
	  0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,
	  0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525,
	  0x206f85b3, 0xb966d409, 0xce61e49f, 0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81,
	  0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615,
	  0x73dc1683, 0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,
	  0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7, 0xfed41b76,
	  0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e,
	  0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c, 0x36034af6,
	  0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,
	  0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7,
	  0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f,
	  0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7,
	  0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,
	  0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278,
	  0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc,
	  0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9, 0xbdbdf21c, 0xcabac28a, 0x53b39330,
	  0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,
	  0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d}</initializer>
        <briefdescription>
<para>32 bit crc checksum table. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" line="12" column="27" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceutility_1a36bf2094b48887c13f9c283540e96f04" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint64_t</type>
        <definition>constexpr uint64_t utility::crc64_table[256]</definition>
        <argsstring>[256]</argsstring>
        <name>crc64_table</name>
        <briefdescription>
<para>64 bit crc checksum table. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" line="44" column="27" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceutility_1a3fbca2e587f3bd4d5ce6030f29c66a63" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>length</declname>
            <defname>length</defname>
          </param>
        </templateparamlist>
        <type>constexpr uint32_t</type>
        <definition>static constexpr uint32_t utility::crc32</definition>
        <argsstring>(char const (&amp;str)[length])</argsstring>
        <name>crc32</name>
        <param>
          <type>char const (&amp;)</type>
          <declname>str</declname>
          <array>[length]</array>
        </param>
        <briefdescription>
<para>compile-time crc32 checksum calculator for the input characters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the characters to calculate the crc32 for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the character array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>32 bit unsigned integer containing the crc32 value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" line="147" column="27" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1a3a672c8f107c89c4059ef06455212726" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>length</declname>
            <defname>length</defname>
          </param>
        </templateparamlist>
        <type>constexpr uint32_t</type>
        <definition>static constexpr uint32_t utility::crc32</definition>
        <argsstring>(char const *str)</argsstring>
        <name>crc32</name>
        <param>
          <type>char const *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>crc32 checksum calculator for the input characters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the characters to calculate the crc32 for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the character array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>32 bit unsigned integer containing the crc32 value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" line="157" column="27" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1aa6e20794c29dab1686c3d1525a3b29ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>psl::details::fixed_astring</type>
            <declname>Text</declname>
            <defname>Text</defname>
          </param>
        </templateparamlist>
        <type>consteval uint32_t</type>
        <definition>consteval uint32_t utility::crc32</definition>
        <argsstring>()</argsstring>
        <name>crc32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" line="163" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1a857e522bee9af5904b82b11b5ccc8947" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>length</declname>
            <defname>length</defname>
          </param>
        </templateparamlist>
        <type>constexpr uint64_t</type>
        <definition>static constexpr uint64_t utility::crc64</definition>
        <argsstring>(char const (&amp;str)[length])</argsstring>
        <name>crc64</name>
        <param>
          <type>char const (&amp;)</type>
          <declname>str</declname>
          <array>[length]</array>
        </param>
        <briefdescription>
<para>compile-time crc64 checksum calculator for the input characters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the characters to calculate the crc64 for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the character array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>64 bit unsigned integer containing the crc64 value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" line="173" column="27" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1a4280a768367b590947c16f0002654c27" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>length</declname>
            <defname>length</defname>
          </param>
        </templateparamlist>
        <type>constexpr uint64_t</type>
        <definition>static constexpr uint64_t utility::crc64</definition>
        <argsstring>(char const *str)</argsstring>
        <name>crc64</name>
        <param>
          <type>char const *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>crc64 checksum calculator for the input characters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the characters to calculate the crc64 for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of the character array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>64 bit unsigned integer containing the crc64 value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" line="183" column="27" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" bodystart="183" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1ac4b690fdda78fca241c8b5ef730b970f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>psl::details::fixed_astring</type>
            <declname>Text</declname>
            <defname>Text</defname>
          </param>
        </templateparamlist>
        <type>consteval uint32_t</type>
        <definition>consteval uint32_t utility::crc64</definition>
        <argsstring>()</argsstring>
        <name>crc64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" line="189" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1a24d1365800825bb0d11da6dc29d8902f" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr static uint64_t</type>
        <definition>constexpr static uint64_t utility::crc64</definition>
        <argsstring>(psl::string8::view str)</argsstring>
        <name>crc64</name>
        <param>
          <type>psl::string8::view</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>crc64 checksum calculator for the input characters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the characters to calculate the crc64 for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>64 bit unsigned integer containing the crc64 value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" line="197" column="27" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" bodystart="197" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1a161c0e278c011ebd750433c2fcbc8531" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr static uint32_t</type>
        <definition>constexpr static uint32_t utility::crc32</definition>
        <argsstring>(psl::string8::view str)</argsstring>
        <name>crc32</name>
        <param>
          <type>psl::string8::view</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>crc32 checksum calculator for the input characters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the characters to calculate the crc32 for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>32 bit unsigned integer containing the crc32 value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" line="211" column="27" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/crc32.hpp" bodystart="211" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1aabccd276aa311424c97be10ed795329c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>static T utility::from_string</definition>
        <argsstring>(psl::string8::view str)</argsstring>
        <name>from_string</name>
        <param>
          <type>psl::string8::view</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="1011" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="1011" bodyend="1025"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1a54eb86732c81acb6578483d43a73fd1f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool utility::from_string</definition>
        <argsstring>(psl::string8::view str, T &amp;out)</argsstring>
        <name>from_string</name>
        <param>
          <type>psl::string8::view</type>
          <declname>str</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="1029" column="13" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="1029" bodyend="1044"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1af0d7d6f4aa4458ffab03b3b0755eadfe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>psl::string8_t</type>
        <definition>static psl::string8_t utility::to_string</definition>
        <argsstring>(const T &amp;target)</argsstring>
        <name>to_string</name>
        <param>
          <type>const T &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="1047" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="1047" bodyend="1061"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>this namespace contains various helper utilities to aid you. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/core/inc/conversion_utils.hpp" line="118" column="1"/>
  </compounddef>
</doxygen>
