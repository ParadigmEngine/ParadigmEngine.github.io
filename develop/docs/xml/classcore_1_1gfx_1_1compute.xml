<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcore_1_1gfx_1_1compute" kind="class" language="C++" prot="public">
    <compoundname>core::gfx::compute</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classcore_1_1gfx_1_1compute_1a1a9f611a3328f9adcb095bdaab23628a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class core::resource::cache_t</definition>
        <argsstring></argsstring>
        <name>core::resource::cache_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/compute.hpp" line="34" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/compute.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcore_1_1gfx_1_1compute_1a9157b7a061758603de1fd8c7aca45e33" prot="private" static="no" mutable="no">
        <type>core::gfx::graphics_backend</type>
        <definition>core::gfx::graphics_backend core::gfx::compute::m_Backend</definition>
        <argsstring></argsstring>
        <name>m_Backend</name>
        <initializer>{graphics_backend::undefined}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/compute.hpp" line="74" column="29" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/compute.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcore_1_1gfx_1_1compute_1ac78d4b1cb1c9d44efb97a800958c51bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>compute::compute</definition>
        <argsstring>(core::resource::cache_t &amp;cache, const core::resource::metadata &amp;metaData, core::meta::shader *metaFile, core::resource::handle&lt; context &gt; context_handle, core::resource::handle&lt; core::data::material_t &gt; data, core::resource::handle&lt; pipeline_cache &gt; pipeline_cache)</argsstring>
        <name>compute</name>
        <param>
          <type>core::resource::cache_t &amp;</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const <ref refid="structcore_1_1resource_1_1metadata" kindref="compound">core::resource::metadata</ref> &amp;</type>
          <declname>metaData</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1meta_1_1shader" kindref="compound">core::meta::shader</ref> *</type>
          <declname>metaFile</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; context &gt;</type>
          <declname>context_handle</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1data_1_1material__t" kindref="compound">core::data::material_t</ref> &gt;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; pipeline_cache &gt;</type>
          <declname>pipeline_cache</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/compute.hpp" line="44" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/compute.cpp" bodystart="26" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1compute_1a7c9f2c26810fcd94852698d6422a09c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::gfx::compute::~compute</definition>
        <argsstring>()=default</argsstring>
        <name>~compute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/compute.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1compute_1abcccb9588b4facb4a5d9d36463ae90b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::gfx::compute::compute</definition>
        <argsstring>(const compute &amp;other)=default</argsstring>
        <name>compute</name>
        <param>
          <type>const compute &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/compute.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1compute_1af6cf8e989db0efa3f0ac6b7160066e1f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>core::gfx::compute::compute</definition>
        <argsstring>(compute &amp;&amp;other) noexcept=default</argsstring>
        <name>compute</name>
        <param>
          <type>compute &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/compute.hpp" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1compute_1a7032bbe6d86eb965b2adf7c9a180f343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>compute &amp;</type>
        <definition>compute&amp; core::gfx::compute::operator=</definition>
        <argsstring>(const compute &amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const compute &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/compute.hpp" line="54" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1compute_1ac86b895b1ee2ca4d6e182da75623ffa3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>compute &amp;</type>
        <definition>compute&amp; core::gfx::compute::operator=</definition>
        <argsstring>(compute &amp;&amp;other) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>compute &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/compute.hpp" line="55" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1compute_1ab7a460eee152b7a5964d91751eed28b7" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classcore_1_1meta_1_1shader" kindref="compound">core::meta::shader</ref> *</type>
        <definition>core::meta::shader* core::gfx::compute::meta</definition>
        <argsstring>() const noexcept</argsstring>
        <name>meta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/compute.hpp" line="58" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1compute_1a43e0fabd8dbc6167c4869c6f37b16ef1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void compute::dispatch</definition>
        <argsstring>(const psl::static_array&lt; uint32_t, 3 &gt; &amp;size)</argsstring>
        <name>dispatch</name>
        <param>
          <type>const psl::static_array&lt; uint32_t, 3 &gt; &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/compute.hpp" line="60" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/compute.cpp" bodystart="53" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1compute_1a038873ef30e4e8678ae54ae6e20016d3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>core::gfx::graphics_backend</type>
            <declname>backend</declname>
            <defname>backend</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; backend_type_t&lt; compute, backend &gt; &gt;</type>
        <definition>core::resource::handle&lt;backend_type_t&lt;compute, backend&gt; &gt; core::gfx::compute::resource</definition>
        <argsstring>() const noexcept</argsstring>
        <name>resource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/compute.hpp" line="63" column="24" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/compute.hpp" bodystart="63" bodyend="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/compute.hpp" line="33" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/compute.hpp" bodystart="32" bodyend="81"/>
    <listofallmembers>
      <member refid="classcore_1_1gfx_1_1compute_1ac78d4b1cb1c9d44efb97a800958c51bb" prot="public" virt="non-virtual"><scope>core::gfx::compute</scope><name>compute</name></member>
      <member refid="classcore_1_1gfx_1_1compute_1abcccb9588b4facb4a5d9d36463ae90b3" prot="public" virt="non-virtual"><scope>core::gfx::compute</scope><name>compute</name></member>
      <member refid="classcore_1_1gfx_1_1compute_1af6cf8e989db0efa3f0ac6b7160066e1f" prot="public" virt="non-virtual"><scope>core::gfx::compute</scope><name>compute</name></member>
      <member refid="classcore_1_1gfx_1_1compute_1a1a9f611a3328f9adcb095bdaab23628a" prot="public" virt="non-virtual"><scope>core::gfx::compute</scope><name>core::resource::cache_t</name></member>
      <member refid="classcore_1_1gfx_1_1compute_1a43e0fabd8dbc6167c4869c6f37b16ef1" prot="public" virt="non-virtual"><scope>core::gfx::compute</scope><name>dispatch</name></member>
      <member refid="classcore_1_1gfx_1_1compute_1a9157b7a061758603de1fd8c7aca45e33" prot="private" virt="non-virtual"><scope>core::gfx::compute</scope><name>m_Backend</name></member>
      <member refid="classcore_1_1gfx_1_1compute_1ab7a460eee152b7a5964d91751eed28b7" prot="public" virt="non-virtual"><scope>core::gfx::compute</scope><name>meta</name></member>
      <member refid="classcore_1_1gfx_1_1compute_1a7032bbe6d86eb965b2adf7c9a180f343" prot="public" virt="non-virtual"><scope>core::gfx::compute</scope><name>operator=</name></member>
      <member refid="classcore_1_1gfx_1_1compute_1ac86b895b1ee2ca4d6e182da75623ffa3" prot="public" virt="non-virtual"><scope>core::gfx::compute</scope><name>operator=</name></member>
      <member refid="classcore_1_1gfx_1_1compute_1a038873ef30e4e8678ae54ae6e20016d3" prot="public" virt="non-virtual"><scope>core::gfx::compute</scope><name>resource</name></member>
      <member refid="classcore_1_1gfx_1_1compute_1a7c9f2c26810fcd94852698d6422a09c4" prot="public" virt="non-virtual"><scope>core::gfx::compute</scope><name>~compute</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
