<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpsl_1_1format_1_1validator" kind="class" language="C++" prot="public">
    <compoundname>psl::format::validator</compoundname>
    <includes refid="format2_8hpp" local="no">format2.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpsl_1_1format_1_1validator_1a30cc10d4e29e57f6ae185973eb02eb4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>psl::format::validator::validator</definition>
        <argsstring>()=default</argsstring>
        <name>validator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/format2.hpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1format_1_1validator_1a813539ac9a2d49459984f89c77b7264c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>psl::format::validator::~validator</definition>
        <argsstring>()=default</argsstring>
        <name>~validator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/format2.hpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1format_1_1validator_1a58e791bfbcbc8e239a2a68a2acd2b1d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>psl::format::validator::validator</definition>
        <argsstring>(const validator &amp;other)=default</argsstring>
        <name>validator</name>
        <param>
          <type>const <ref refid="classpsl_1_1format_1_1validator" kindref="compound">validator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/format2.hpp" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1format_1_1validator_1ad60e776fbe6c617339641ee62d1eda6c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::format::validator::validator</definition>
        <argsstring>(validator &amp;&amp;other) noexcept=default</argsstring>
        <name>validator</name>
        <param>
          <type><ref refid="classpsl_1_1format_1_1validator" kindref="compound">validator</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/format2.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1format_1_1validator_1add993726782cfe01d1c92a2a40003878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpsl_1_1format_1_1validator" kindref="compound">validator</ref> &amp;</type>
        <definition>validator&amp; psl::format::validator::operator=</definition>
        <argsstring>(const validator &amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classpsl_1_1format_1_1validator" kindref="compound">validator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/format2.hpp" line="51" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1format_1_1validator_1aa3fbb145401a256fc85343afaf86e6c3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classpsl_1_1format_1_1validator" kindref="compound">validator</ref> &amp;</type>
        <definition>validator&amp; psl::format::validator::operator=</definition>
        <argsstring>(validator &amp;&amp;other) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classpsl_1_1format_1_1validator" kindref="compound">validator</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/format2.hpp" line="52" column="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>checks for validity of the format file </para>
    </briefdescription>
    <detaileddescription>
<para>Running this on a target will verify if it is following the rules correctly and if not, which rules it breaks </para>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/format2.hpp" line="44" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/format2.hpp" bodystart="43" bodyend="55"/>
    <listofallmembers>
      <member refid="classpsl_1_1format_1_1validator_1add993726782cfe01d1c92a2a40003878" prot="public" virt="non-virtual"><scope>psl::format::validator</scope><name>operator=</name></member>
      <member refid="classpsl_1_1format_1_1validator_1aa3fbb145401a256fc85343afaf86e6c3" prot="public" virt="non-virtual"><scope>psl::format::validator</scope><name>operator=</name></member>
      <member refid="classpsl_1_1format_1_1validator_1a30cc10d4e29e57f6ae185973eb02eb4a" prot="public" virt="non-virtual"><scope>psl::format::validator</scope><name>validator</name></member>
      <member refid="classpsl_1_1format_1_1validator_1a58e791bfbcbc8e239a2a68a2acd2b1d3" prot="public" virt="non-virtual"><scope>psl::format::validator</scope><name>validator</name></member>
      <member refid="classpsl_1_1format_1_1validator_1ad60e776fbe6c617339641ee62d1eda6c" prot="public" virt="non-virtual"><scope>psl::format::validator</scope><name>validator</name></member>
      <member refid="classpsl_1_1format_1_1validator_1a813539ac9a2d49459984f89c77b7264c" prot="public" virt="non-virtual"><scope>psl::format::validator</scope><name>~validator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
