<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structpsl_1_1buffer__t" kind="struct" language="C++" prot="public">
    <compoundname>psl::buffer_t</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename Storage</type>
        <defval>local_storage&lt;8&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="structpsl_1_1buffer__t_1ae744f48eb0463f148ee4c3e5693c3420" prot="private" static="no">
        <type>T *</type>
        <definition>using psl::buffer_t&lt; T, Storage &gt;::iterator =  T*</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="31" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structpsl_1_1buffer__t_1a0b77066d4dbb9a06504c15df4b6f5a23" prot="private" static="no">
        <type>const T *</type>
        <definition>using psl::buffer_t&lt; T, Storage &gt;::const_iterator =  const T*</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="32" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="structpsl_1_1buffer__t_1a9f56fc75d655ddef2744774fd4e66b0a" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t psl::buffer_t&lt; T, Storage &gt;::SBO_Size</definition>
        <argsstring></argsstring>
        <name>SBO_Size</name>
        <initializer>= Storage::size * sizeof(char)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="33" column="25" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structpsl_1_1buffer__t_1a2427118b1a4a50a8ee2c5efea7c40318" prot="private" static="no" mutable="no">
        <type><ref refid="classmemory_1_1allocator__base" kindref="compound">memory::allocator_base</ref> *</type>
        <definition>memory::allocator_base* psl::buffer_t&lt; T, Storage &gt;::m_Allocator</definition>
        <argsstring></argsstring>
        <name>m_Allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="35" column="24" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpsl_1_1buffer__t_1aec467c84b21b8610d12f19e1676c10fd" prot="private" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="classmemory_1_1segment" kindref="compound">memory::segment</ref> &gt;</type>
        <definition>std::optional&lt;memory::segment&gt; psl::buffer_t&lt; T, Storage &gt;::m_Segment</definition>
        <argsstring></argsstring>
        <name>m_Segment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="36" column="15" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpsl_1_1buffer__t_1a70615b86eb9fd82fe0f6867627f7eefe" prot="private" static="no" mutable="no">
        <type>Storage</type>
        <definition>Storage psl::buffer_t&lt; T, Storage &gt;::m_Storage</definition>
        <argsstring></argsstring>
        <name>m_Storage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="37" column="9" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpsl_1_1buffer__t_1ae093d6c84d9a9146d43c1527d7ced98b" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* psl::buffer_t&lt; T, Storage &gt;::first</definition>
        <argsstring></argsstring>
        <name>first</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="38" column="3" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpsl_1_1buffer__t_1a22c2b85fae85bd4cf53a8c0772c53f4f" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* psl::buffer_t&lt; T, Storage &gt;::last</definition>
        <argsstring></argsstring>
        <name>last</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="39" column="3" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpsl_1_1buffer__t_1a6c92b6c72c7623f4ccf752032c30da8c" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* psl::buffer_t&lt; T, Storage &gt;::m_Capacity</definition>
        <argsstring></argsstring>
        <name>m_Capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="40" column="3" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a902d4627f4e9e681901bb1b888bec140" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t psl::buffer_t&lt; T, Storage &gt;::grow</definition>
        <argsstring>(size_t size)</argsstring>
        <name>grow</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="42" column="15" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="42" bodyend="55"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a2b8836a00210b847a3a3f5be3ed9426b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::fill</definition>
        <argsstring>(T *begin, T *end)</argsstring>
        <name>fill</name>
        <param>
          <type>T *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="57" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="57" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a1c712b6430baa743540d63c2e8c826f7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::fill</definition>
        <argsstring>(T *begin, T *end, const T &amp;value)</argsstring>
        <name>fill</name>
        <param>
          <type>T *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="70" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="70" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a4d0ae76a064c73b2b0e8e5256fe3034b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::move_range</definition>
        <argsstring>(T *destination, T *begin, T *end)</argsstring>
        <name>move_range</name>
        <param>
          <type>T *</type>
          <declname>destination</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="84" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="84" bodyend="97"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a78f7a58ce6e1a2b63191cbd5afee5094" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>psl::buffer_t&lt; T, Storage &gt;::buffer_t</definition>
        <argsstring>()</argsstring>
        <name>buffer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="101" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a39e47416fea2aa7278e084e0530f3a53" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::buffer_t&lt; T, Storage &gt;::buffer_t</definition>
        <argsstring>(size_t reserve, memory::region *region) noexcept</argsstring>
        <name>buffer_t</name>
        <param>
          <type>size_t</type>
          <declname>reserve</declname>
        </param>
        <param>
          <type><ref refid="classmemory_1_1region" kindref="compound">memory::region</ref> *</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="102" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="102" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a6ad6120e987d857110b0a94da8b45ce2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>psl::buffer_t&lt; T, Storage &gt;::buffer_t</definition>
        <argsstring>(std::initializer_list&lt; T &gt; values, memory::region *region)</argsstring>
        <name>buffer_t</name>
        <param>
          <type>std::initializer_list&lt; T &gt;</type>
          <declname>values</declname>
        </param>
        <param>
          <type><ref refid="classmemory_1_1region" kindref="compound">memory::region</ref> *</type>
          <declname>region</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="111" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="111" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1abd537b30708001fcfafa4e48d8d1c08c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::buffer_t&lt; T, Storage &gt;::buffer_t</definition>
        <argsstring>(const buffer_t &amp;other) noexcept</argsstring>
        <name>buffer_t</name>
        <param>
          <type>const buffer_t &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="121" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="121" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a6f3ca8f78b59302befce53bcdad594e7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::buffer_t&lt; T, Storage &gt;::buffer_t</definition>
        <argsstring>(buffer_t &amp;&amp;other) noexcept</argsstring>
        <name>buffer_t</name>
        <param>
          <type>buffer_t &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="131" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="131" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a781cb4b07a9775d2fb29970d9d451f80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>psl::buffer_t&lt; T, Storage &gt;::~buffer_t</definition>
        <argsstring>()</argsstring>
        <name>~buffer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="148" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="148" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a9d46e321d145c30da867579c7dab6c2d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; psl::buffer_t&lt; T, Storage &gt;::operator[]</definition>
        <argsstring>(size_t index) const noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="163" column="3" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a48b4a2db4b06318449a4166aa9c5dea8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator psl::buffer_t&lt; T, Storage &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="165" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a775271c5043c9f29e97123baed7e1629" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator psl::buffer_t&lt; T, Storage &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="166" column="16" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a1864312d254aff49503edb8638f50772" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator psl::buffer_t&lt; T, Storage &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="167" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a9cb54fb5adcf26af31382505a911f6f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator psl::buffer_t&lt; T, Storage &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="168" column="16" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1ab62d6dedc8441091fda17697e6e7e5c8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::reserve</definition>
        <argsstring>(size_t capacity) noexcept</argsstring>
        <name>reserve</name>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="170" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="170" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a10606bfd7de23cff3cd42ed2a76fef18" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::force_reserve</definition>
        <argsstring>(size_t capacity) noexcept</argsstring>
        <name>force_reserve</name>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="176" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="176" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a0870fcd94af6aa05ddf4e5571c3d78a4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t psl::buffer_t&lt; T, Storage &gt;::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="201" column="8" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="201" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a0fff6afeac0e0639e4458b2a7ae08465" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t psl::buffer_t&lt; T, Storage &gt;::capacity</definition>
        <argsstring>() const noexcept</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="202" column="8" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="202" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a2f13cca210cdf42e83ed02fda1f629b7" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool psl::buffer_t&lt; T, Storage &gt;::using_sbo</definition>
        <argsstring>() const noexcept</argsstring>
        <name>using_sbo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="203" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="203" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a466a0f8335dffc68d8216d227058de1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="205" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="205" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a91e7b94a1ca27c985e63043872e45c0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::fill</definition>
        <argsstring>()</argsstring>
        <name>fill</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="214" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="214" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a7797cb119ab644a5a41e45796fa2cf01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::fill</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>fill</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="227" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="227" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1af551223380f3cede26c1344947f2d478" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::fill</definition>
        <argsstring>(std::initializer_list&lt; T &gt; values)</argsstring>
        <name>fill</name>
        <param>
          <type>std::initializer_list&lt; T &gt;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="244" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="244" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a0d25bb786fd36ed8e64c9ecd31f7f5ba" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::shrink_to_fit</definition>
        <argsstring>() noexcept</argsstring>
        <name>shrink_to_fit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="267" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="267" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1af6d326eadc0a8fd55cc43a6c784ef129" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::resize</definition>
        <argsstring>(size_t newSize) noexcept</argsstring>
        <name>resize</name>
        <param>
          <type>size_t</type>
          <declname>newSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="274" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="274" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a4a64310bf22e58d61bb3c1e2bed3ea59" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::resize</definition>
        <argsstring>(size_t newSize, const T &amp;value) noexcept</argsstring>
        <name>resize</name>
        <param>
          <type>size_t</type>
          <declname>newSize</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="288" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="288" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1ae6bff2d543be570842bb54045bdb1f3c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::replace</definition>
        <argsstring>(size_t where, std::initializer_list&lt; T &gt; values) noexcept</argsstring>
        <name>replace</name>
        <param>
          <type>size_t</type>
          <declname>where</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; T &gt;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="303" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="303" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1aabe43f5d3b85b09642415e0656870d9b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::replace</definition>
        <argsstring>(iterator where, std::initializer_list&lt; T &gt; values) noexcept</argsstring>
        <name>replace</name>
        <param>
          <type>iterator</type>
          <declname>where</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; T &gt;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="304" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="304" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a24ef5bacb884613bd52da4ab1baf99fe" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::erase</definition>
        <argsstring>(iterator it) noexcept</argsstring>
        <name>erase</name>
        <param>
          <type>iterator</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="321" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="321" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a2d75064b46d50f6e154dbcd3f571109b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::erase</definition>
        <argsstring>(iterator first, iterator last) noexcept</argsstring>
        <name>erase</name>
        <param>
          <type>iterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>iterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="322" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="322" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a8072ffdfb74cb6fffbf1c1cafe405a75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::push_back</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>push_back</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="339" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="339" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1ae94c4c0bda18e36471cd030fb51ec07e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::push_back_n</definition>
        <argsstring>(size_t count, const T &amp;value)</argsstring>
        <name>push_back_n</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="340" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="340" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a7aa5db7a75d1f17d28dab88d666375a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::push_back</definition>
        <argsstring>(std::initializer_list&lt; T &gt; values)</argsstring>
        <name>push_back</name>
        <param>
          <type>std::initializer_list&lt; T &gt;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="363" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="363" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a2386d38a0f57e138cbc11a0036c83ce7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::emplace_back</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>emplace_back</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="393" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="393" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a7b2da60b326cc7541a4c45b4f3506025" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::emplace_back_n</definition>
        <argsstring>(size_t count, Args &amp;&amp;... args)</argsstring>
        <name>emplace_back_n</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="405" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="405" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a539ffb59c6e524e3452d08dbb66643ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>V</declname>
            <defname>V</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::emplace_back_v</definition>
        <argsstring>(V &amp;&amp;... values)</argsstring>
        <name>emplace_back_v</name>
        <param>
          <type>V &amp;&amp;...</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="430" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="430" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1buffer__t_1a8802c0c0d99058502016bb0dbaf0806a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::buffer_t&lt; T, Storage &gt;::emplace_back</definition>
        <argsstring>(std::initializer_list&lt; T &gt; values)</argsstring>
        <name>emplace_back</name>
        <param>
          <type>std::initializer_list&lt; T &gt;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="448" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="448" bodyend="473"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" line="29" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/buffer.hpp" bodystart="28" bodyend="474"/>
    <listofallmembers>
      <member refid="structpsl_1_1buffer__t_1a48b4a2db4b06318449a4166aa9c5dea8" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>begin</name></member>
      <member refid="structpsl_1_1buffer__t_1a775271c5043c9f29e97123baed7e1629" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>begin</name></member>
      <member refid="structpsl_1_1buffer__t_1a78f7a58ce6e1a2b63191cbd5afee5094" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>buffer_t</name></member>
      <member refid="structpsl_1_1buffer__t_1a39e47416fea2aa7278e084e0530f3a53" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>buffer_t</name></member>
      <member refid="structpsl_1_1buffer__t_1a6ad6120e987d857110b0a94da8b45ce2" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>buffer_t</name></member>
      <member refid="structpsl_1_1buffer__t_1abd537b30708001fcfafa4e48d8d1c08c" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>buffer_t</name></member>
      <member refid="structpsl_1_1buffer__t_1a6f3ca8f78b59302befce53bcdad594e7" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>buffer_t</name></member>
      <member refid="structpsl_1_1buffer__t_1a0fff6afeac0e0639e4458b2a7ae08465" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>capacity</name></member>
      <member refid="structpsl_1_1buffer__t_1a466a0f8335dffc68d8216d227058de1a" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>clear</name></member>
      <member refid="structpsl_1_1buffer__t_1a0b77066d4dbb9a06504c15df4b6f5a23" prot="private" virt="non-virtual"><scope>psl::buffer_t</scope><name>const_iterator</name></member>
      <member refid="structpsl_1_1buffer__t_1a2386d38a0f57e138cbc11a0036c83ce7" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>emplace_back</name></member>
      <member refid="structpsl_1_1buffer__t_1a8802c0c0d99058502016bb0dbaf0806a" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>emplace_back</name></member>
      <member refid="structpsl_1_1buffer__t_1a7b2da60b326cc7541a4c45b4f3506025" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>emplace_back_n</name></member>
      <member refid="structpsl_1_1buffer__t_1a539ffb59c6e524e3452d08dbb66643ae" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>emplace_back_v</name></member>
      <member refid="structpsl_1_1buffer__t_1a1864312d254aff49503edb8638f50772" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>end</name></member>
      <member refid="structpsl_1_1buffer__t_1a9cb54fb5adcf26af31382505a911f6f4" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>end</name></member>
      <member refid="structpsl_1_1buffer__t_1a24ef5bacb884613bd52da4ab1baf99fe" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>erase</name></member>
      <member refid="structpsl_1_1buffer__t_1a2d75064b46d50f6e154dbcd3f571109b" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>erase</name></member>
      <member refid="structpsl_1_1buffer__t_1a2b8836a00210b847a3a3f5be3ed9426b" prot="private" virt="non-virtual"><scope>psl::buffer_t</scope><name>fill</name></member>
      <member refid="structpsl_1_1buffer__t_1a1c712b6430baa743540d63c2e8c826f7" prot="private" virt="non-virtual"><scope>psl::buffer_t</scope><name>fill</name></member>
      <member refid="structpsl_1_1buffer__t_1a91e7b94a1ca27c985e63043872e45c0d" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>fill</name></member>
      <member refid="structpsl_1_1buffer__t_1a7797cb119ab644a5a41e45796fa2cf01" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>fill</name></member>
      <member refid="structpsl_1_1buffer__t_1af551223380f3cede26c1344947f2d478" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>fill</name></member>
      <member refid="structpsl_1_1buffer__t_1ae093d6c84d9a9146d43c1527d7ced98b" prot="private" virt="non-virtual"><scope>psl::buffer_t</scope><name>first</name></member>
      <member refid="structpsl_1_1buffer__t_1a10606bfd7de23cff3cd42ed2a76fef18" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>force_reserve</name></member>
      <member refid="structpsl_1_1buffer__t_1a902d4627f4e9e681901bb1b888bec140" prot="private" virt="non-virtual"><scope>psl::buffer_t</scope><name>grow</name></member>
      <member refid="structpsl_1_1buffer__t_1ae744f48eb0463f148ee4c3e5693c3420" prot="private" virt="non-virtual"><scope>psl::buffer_t</scope><name>iterator</name></member>
      <member refid="structpsl_1_1buffer__t_1a22c2b85fae85bd4cf53a8c0772c53f4f" prot="private" virt="non-virtual"><scope>psl::buffer_t</scope><name>last</name></member>
      <member refid="structpsl_1_1buffer__t_1a2427118b1a4a50a8ee2c5efea7c40318" prot="private" virt="non-virtual"><scope>psl::buffer_t</scope><name>m_Allocator</name></member>
      <member refid="structpsl_1_1buffer__t_1a6c92b6c72c7623f4ccf752032c30da8c" prot="private" virt="non-virtual"><scope>psl::buffer_t</scope><name>m_Capacity</name></member>
      <member refid="structpsl_1_1buffer__t_1aec467c84b21b8610d12f19e1676c10fd" prot="private" virt="non-virtual"><scope>psl::buffer_t</scope><name>m_Segment</name></member>
      <member refid="structpsl_1_1buffer__t_1a70615b86eb9fd82fe0f6867627f7eefe" prot="private" virt="non-virtual"><scope>psl::buffer_t</scope><name>m_Storage</name></member>
      <member refid="structpsl_1_1buffer__t_1a4d0ae76a064c73b2b0e8e5256fe3034b" prot="private" virt="non-virtual"><scope>psl::buffer_t</scope><name>move_range</name></member>
      <member refid="structpsl_1_1buffer__t_1a9d46e321d145c30da867579c7dab6c2d" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>operator[]</name></member>
      <member refid="structpsl_1_1buffer__t_1a8072ffdfb74cb6fffbf1c1cafe405a75" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>push_back</name></member>
      <member refid="structpsl_1_1buffer__t_1a7aa5db7a75d1f17d28dab88d666375a7" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>push_back</name></member>
      <member refid="structpsl_1_1buffer__t_1ae94c4c0bda18e36471cd030fb51ec07e" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>push_back_n</name></member>
      <member refid="structpsl_1_1buffer__t_1ae6bff2d543be570842bb54045bdb1f3c" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>replace</name></member>
      <member refid="structpsl_1_1buffer__t_1aabe43f5d3b85b09642415e0656870d9b" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>replace</name></member>
      <member refid="structpsl_1_1buffer__t_1ab62d6dedc8441091fda17697e6e7e5c8" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>reserve</name></member>
      <member refid="structpsl_1_1buffer__t_1af6d326eadc0a8fd55cc43a6c784ef129" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>resize</name></member>
      <member refid="structpsl_1_1buffer__t_1a4a64310bf22e58d61bb3c1e2bed3ea59" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>resize</name></member>
      <member refid="structpsl_1_1buffer__t_1a9f56fc75d655ddef2744774fd4e66b0a" prot="private" virt="non-virtual"><scope>psl::buffer_t</scope><name>SBO_Size</name></member>
      <member refid="structpsl_1_1buffer__t_1a0d25bb786fd36ed8e64c9ecd31f7f5ba" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>shrink_to_fit</name></member>
      <member refid="structpsl_1_1buffer__t_1a0870fcd94af6aa05ddf4e5571c3d78a4" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>size</name></member>
      <member refid="structpsl_1_1buffer__t_1a2f13cca210cdf42e83ed02fda1f629b7" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>using_sbo</name></member>
      <member refid="structpsl_1_1buffer__t_1a781cb4b07a9775d2fb29970d9d451f80" prot="public" virt="non-virtual"><scope>psl::buffer_t</scope><name>~buffer_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
