<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structpsl_1_1details_1_1accessor" kind="struct" language="C++" prot="public">
    <compoundname>psl::details::accessor</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>size_t...</type>
        <declname>index</declname>
        <defname>index</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structpsl_1_1details_1_1accessor_1a6b464af1e9e2b0b682dc643843bce241" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t psl::details::accessor&lt; T, index &gt;::length</definition>
        <argsstring></argsstring>
        <name>length</name>
        <initializer>= sizeof...(index)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/vec.hpp" line="20" column="25" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/vec.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpsl_1_1details_1_1accessor_1a5316df6f52420daa12f56579a9323a66" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool psl::details::accessor&lt; T, index &gt;::is_single_accessor</definition>
        <argsstring></argsstring>
        <name>is_single_accessor</name>
        <initializer>= length == 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/vec.hpp" line="21" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/vec.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpsl_1_1details_1_1accessor_1a0b587bf3b0ded6676e0bbc89c3431a20" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t psl::details::accessor&lt; T, index &gt;::max_elements</definition>
        <argsstring></argsstring>
        <name>max_elements</name>
        <initializer>= utility::templates::max&lt;index...&gt;() + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/vec.hpp" line="62" column="25" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/vec.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structpsl_1_1details_1_1accessor_1a8c852869e14ab75f059efe7569cb77c0" prot="public" static="no" mutable="no">
        <type>psl::static_array&lt; T, max_elements &gt;</type>
        <definition>psl::static_array&lt;T, max_elements&gt; psl::details::accessor&lt; T, index &gt;::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/vec.hpp" line="63" column="19" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/vec.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structpsl_1_1details_1_1accessor_1a3e33a00d677050b876631de40dc2a1dd" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::details::accessor&lt; T, index &gt;::operator std::conditional_t&lt; is_single_accessor, T &amp;, tvec&lt; T, length &gt;&gt;</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator std::conditional_t&lt; is_single_accessor, T &amp;, tvec&lt; T, length &gt;&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/vec.hpp" line="23" column="8" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/vec.hpp" bodystart="23" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1details_1_1accessor_1a258d09898a4dbf9bdee283871d6e6228" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::details::accessor&lt; T, index &gt;::operator std::conditional_t&lt; is_single_accessor, const T &amp;, tvec&lt; T, length &gt;&gt;</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator std::conditional_t&lt; is_single_accessor, const T &amp;, tvec&lt; T, length &gt;&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/vec.hpp" line="35" column="8" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/vec.hpp" bodystart="35" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1details_1_1accessor_1a7bbd76254fcf475b655825f54a92c97d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>tvec&lt; T, length &gt;</type>
        <definition>tvec&lt;T, length&gt; psl::details::accessor&lt; T, index &gt;::operator=</definition>
        <argsstring>(const tvec&lt; T, length &gt; &amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const tvec&lt; T, length &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/vec.hpp" line="47" column="13" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/vec.hpp" bodystart="47" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/vec.hpp" line="19" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/vec.hpp" bodystart="18" bodyend="64"/>
    <listofallmembers>
      <member refid="structpsl_1_1details_1_1accessor_1a8c852869e14ab75f059efe7569cb77c0" prot="public" virt="non-virtual"><scope>psl::details::accessor</scope><name>data</name></member>
      <member refid="structpsl_1_1details_1_1accessor_1a5316df6f52420daa12f56579a9323a66" prot="public" virt="non-virtual"><scope>psl::details::accessor</scope><name>is_single_accessor</name></member>
      <member refid="structpsl_1_1details_1_1accessor_1a6b464af1e9e2b0b682dc643843bce241" prot="public" virt="non-virtual"><scope>psl::details::accessor</scope><name>length</name></member>
      <member refid="structpsl_1_1details_1_1accessor_1a0b587bf3b0ded6676e0bbc89c3431a20" prot="public" virt="non-virtual"><scope>psl::details::accessor</scope><name>max_elements</name></member>
      <member refid="structpsl_1_1details_1_1accessor_1a258d09898a4dbf9bdee283871d6e6228" prot="public" virt="non-virtual"><scope>psl::details::accessor</scope><name>operator std::conditional_t&lt; is_single_accessor, const T &amp;, tvec&lt; T, length &gt;&gt;</name></member>
      <member refid="structpsl_1_1details_1_1accessor_1a3e33a00d677050b876631de40dc2a1dd" prot="public" virt="non-virtual"><scope>psl::details::accessor</scope><name>operator std::conditional_t&lt; is_single_accessor, T &amp;, tvec&lt; T, length &gt;&gt;</name></member>
      <member refid="structpsl_1_1details_1_1accessor_1a7bbd76254fcf475b655825f54a92c97d" prot="public" virt="non-virtual"><scope>psl::details::accessor</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
