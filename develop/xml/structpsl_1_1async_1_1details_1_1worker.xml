<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structpsl_1_1async_1_1details_1_1worker" kind="struct" language="C++" prot="public">
    <compoundname>psl::async::details::worker</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structpsl_1_1async_1_1details_1_1worker_1a04e56319697f2469b222b7755ab5a15c" prot="private" static="no" mutable="no">
        <type>std::thread</type>
        <definition>std::thread psl::async::details::worker::m_Thread</definition>
        <argsstring></argsstring>
        <name>m_Thread</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="83" column="13" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpsl_1_1async_1_1details_1_1worker_1ac8375a4e802ebbf27c0706779668d2ab" prot="private" static="no" mutable="no">
        <type><ref refid="classpsl_1_1spmc_1_1consumer" kindref="compound">psl::spmc::consumer</ref>&lt; <ref refid="classpsl_1_1view__ptr" kindref="compound">psl::view_ptr</ref>&lt; details::packet &gt; &gt;</type>
        <definition>psl::spmc::consumer&lt;psl::view_ptr&lt;details::packet&gt; &gt; psl::async::details::worker::m_Consumer</definition>
        <argsstring></argsstring>
        <name>m_Consumer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="84" column="21" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpsl_1_1async_1_1details_1_1worker_1a36556d7dcd9a1eec60955162f4b0db20" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; bool &gt;</type>
        <definition>std::atomic&lt;bool&gt; psl::async::details::worker::m_Run</definition>
        <argsstring></argsstring>
        <name>m_Run</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="85" column="13" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpsl_1_1async_1_1details_1_1worker_1a96ecf74b47759d060883a47848f579d8" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; bool &gt;</type>
        <definition>std::atomic&lt;bool&gt; psl::async::details::worker::m_Done</definition>
        <argsstring></argsstring>
        <name>m_Done</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="86" column="13" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpsl_1_1async_1_1details_1_1worker_1ada6fe82e901289634969880970b0cad3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool psl::async::details::worker::m_Paused</definition>
        <argsstring></argsstring>
        <name>m_Paused</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="89" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpsl_1_1async_1_1details_1_1worker_1ae63acba116529c8e540cae3104f7822a" prot="private" static="no" mutable="no">
        <type>std::condition_variable</type>
        <definition>std::condition_variable psl::async::details::worker::cv</definition>
        <argsstring></argsstring>
        <name>cv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="90" column="25" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpsl_1_1async_1_1details_1_1worker_1ac58b7f9a25ff2799433e9e538b6e3f59" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex psl::async::details::worker::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="91" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structpsl_1_1async_1_1details_1_1worker_1a139ce7d510a990b43ac8d2e4a4587b4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>psl::async::details::worker::worker</definition>
        <argsstring>()=delete</argsstring>
        <name>worker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1async_1_1details_1_1worker_1ac9268ca2842a4b3d02b6c54c74f90d1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>psl::async::details::worker::worker</definition>
        <argsstring>(psl::spmc::consumer&lt; psl::view_ptr&lt; details::packet &gt;&gt; &amp;&amp;consumer)</argsstring>
        <name>worker</name>
        <param>
          <type><ref refid="classpsl_1_1spmc_1_1consumer" kindref="compound">psl::spmc::consumer</ref>&lt; <ref refid="classpsl_1_1view__ptr" kindref="compound">psl::view_ptr</ref>&lt; details::packet &gt;&gt; &amp;&amp;</type>
          <declname>consumer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="13" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" bodystart="13" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1async_1_1details_1_1worker_1a7ad1918fe342c8e82a93daa1d87b3b86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>psl::async::details::worker::~worker</definition>
        <argsstring>()</argsstring>
        <name>~worker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="14" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" bodystart="14" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1async_1_1details_1_1worker_1ae4dde0396a484309a8b2404c9aaad000" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>psl::async::details::worker::worker</definition>
        <argsstring>(const worker &amp;other)</argsstring>
        <name>worker</name>
        <param>
          <type>const worker &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="21" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1async_1_1details_1_1worker_1aa069f29a62125ad95f7691e94dadc459" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>psl::async::details::worker::worker</definition>
        <argsstring>(worker &amp;&amp;)=delete</argsstring>
        <name>worker</name>
        <param>
          <type>worker &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1async_1_1details_1_1worker_1a6bcafb4f52c95af9d740ccbfc71ceea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>worker &amp;</type>
        <definition>worker&amp; psl::async::details::worker::operator=</definition>
        <argsstring>(const worker &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const worker &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="23" column="8"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1async_1_1details_1_1worker_1ade3408759048c46bd7e019ef3f04d2fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>worker &amp;</type>
        <definition>worker&amp; psl::async::details::worker::operator=</definition>
        <argsstring>(worker &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>worker &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="24" column="8"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1async_1_1details_1_1worker_1a92aeff6e447c40d628e798ba077539c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::async::details::worker::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="25" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" bodystart="25" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1async_1_1details_1_1worker_1aaf69fea1729eea67cb786fffd211e57c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::async::details::worker::terminate</definition>
        <argsstring>()</argsstring>
        <name>terminate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="30" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1async_1_1details_1_1worker_1a0e027f923267bf0ad07e3e78b60d5fca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool psl::async::details::worker::terminated</definition>
        <argsstring>()</argsstring>
        <name>terminated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="31" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1async_1_1details_1_1worker_1a9d1e11cbaecba450793ef6a530f6e249" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::async::details::worker::pause</definition>
        <argsstring>()</argsstring>
        <name>pause</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="33" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" bodystart="33" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1async_1_1details_1_1worker_1a4c7f2dbaca47ae657842afad1a07c242" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::async::details::worker::resume</definition>
        <argsstring>()</argsstring>
        <name>resume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="42" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" bodystart="42" bodyend="51"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structpsl_1_1async_1_1details_1_1worker_1a7e15480ad9474abc9e2b1051153300ed" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::async::details::worker::loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="54" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" bodystart="54" bodyend="81"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" line="10" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/scheduler.cpp" bodystart="9" bodyend="92"/>
    <listofallmembers>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1ae63acba116529c8e540cae3104f7822a" prot="private" virt="non-virtual"><scope>psl::async::details::worker</scope><name>cv</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1a7e15480ad9474abc9e2b1051153300ed" prot="private" virt="non-virtual"><scope>psl::async::details::worker</scope><name>loop</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1ac58b7f9a25ff2799433e9e538b6e3f59" prot="private" virt="non-virtual"><scope>psl::async::details::worker</scope><name>m</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1ac8375a4e802ebbf27c0706779668d2ab" prot="private" virt="non-virtual"><scope>psl::async::details::worker</scope><name>m_Consumer</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1a96ecf74b47759d060883a47848f579d8" prot="private" virt="non-virtual"><scope>psl::async::details::worker</scope><name>m_Done</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1ada6fe82e901289634969880970b0cad3" prot="private" virt="non-virtual"><scope>psl::async::details::worker</scope><name>m_Paused</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1a36556d7dcd9a1eec60955162f4b0db20" prot="private" virt="non-virtual"><scope>psl::async::details::worker</scope><name>m_Run</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1a04e56319697f2469b222b7755ab5a15c" prot="private" virt="non-virtual"><scope>psl::async::details::worker</scope><name>m_Thread</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1a6bcafb4f52c95af9d740ccbfc71ceea5" prot="public" virt="non-virtual"><scope>psl::async::details::worker</scope><name>operator=</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1ade3408759048c46bd7e019ef3f04d2fa" prot="public" virt="non-virtual"><scope>psl::async::details::worker</scope><name>operator=</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1a9d1e11cbaecba450793ef6a530f6e249" prot="public" virt="non-virtual"><scope>psl::async::details::worker</scope><name>pause</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1a4c7f2dbaca47ae657842afad1a07c242" prot="public" virt="non-virtual"><scope>psl::async::details::worker</scope><name>resume</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1a92aeff6e447c40d628e798ba077539c8" prot="public" virt="non-virtual"><scope>psl::async::details::worker</scope><name>start</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1aaf69fea1729eea67cb786fffd211e57c" prot="public" virt="non-virtual"><scope>psl::async::details::worker</scope><name>terminate</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1a0e027f923267bf0ad07e3e78b60d5fca" prot="public" virt="non-virtual"><scope>psl::async::details::worker</scope><name>terminated</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1a139ce7d510a990b43ac8d2e4a4587b4f" prot="public" virt="non-virtual"><scope>psl::async::details::worker</scope><name>worker</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1ac9268ca2842a4b3d02b6c54c74f90d1a" prot="public" virt="non-virtual"><scope>psl::async::details::worker</scope><name>worker</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1ae4dde0396a484309a8b2404c9aaad000" prot="public" virt="non-virtual"><scope>psl::async::details::worker</scope><name>worker</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1aa069f29a62125ad95f7691e94dadc459" prot="public" virt="non-virtual"><scope>psl::async::details::worker</scope><name>worker</name></member>
      <member refid="structpsl_1_1async_1_1details_1_1worker_1a7ad1918fe342c8e82a93daa1d87b3b86" prot="public" virt="non-virtual"><scope>psl::async::details::worker</scope><name>~worker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
