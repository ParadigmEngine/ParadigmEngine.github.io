<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structcommon_1_1event__listener__t_1_1internal__event__t" kind="struct" language="C++" prot="protected">
    <compoundname>common::event_listener_t::internal_event_t</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structcommon_1_1event__listener__t_1_1internal__event__t_1a912c90ca48094bddccd65be38291b550" prot="public" static="no">
        <type>psl::delegate&lt; void(T...)&gt;</type>
        <definition>typedef psl::delegate&lt;void(T...)&gt; common::event_listener_t&lt; T &gt;::internal_event_t::functype</definition>
        <argsstring></argsstring>
        <name>functype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="96" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structcommon_1_1event__listener__t_1_1internal__event__t_1a033418a1b95779445996bd6b865b65c9" prot="public" static="no" mutable="no">
        <type>internals::event::event_signature_t</type>
        <definition>internals::event::event_signature_t common::event_listener_t&lt; T &gt;::internal_event_t::signature</definition>
        <argsstring></argsstring>
        <name>signature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="110" column="37" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcommon_1_1event__listener__t_1_1internal__event__t_1ae320af335eefc6d7a4b8a42ee055435f" prot="public" static="no" mutable="no">
        <type>functype</type>
        <definition>functype common::event_listener_t&lt; T &gt;::internal_event_t::function</definition>
        <argsstring></argsstring>
        <name>function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="111" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structcommon_1_1event__listener__t_1_1internal__event__t_1af03e9df801eacc3145f42309834a1c02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>common::event_listener_t&lt; T &gt;::internal_event_t::internal_event_t</definition>
        <argsstring>(const internals::event::event_signature_t &amp;signature)</argsstring>
        <name>internal_event_t</name>
        <param>
          <type>const internals::event::event_signature_t &amp;</type>
          <declname>signature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="98" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="structcommon_1_1event__listener__t_1_1internal__event__t_1ab01a71146e3f2d74e08caba721d89f71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>common::event_listener_t&lt; T &gt;::internal_event_t::internal_event_t</definition>
        <argsstring>(const internals::event::event_signature_t &amp;signature, functype &amp;&amp;func)</argsstring>
        <name>internal_event_t</name>
        <param>
          <type>const internals::event::event_signature_t &amp;</type>
          <declname>signature</declname>
        </param>
        <param>
          <type>functype &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="102" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="102" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structcommon_1_1event__listener__t_1_1internal__event__t_1a78af3ce6276ee2f99a6c2f2e67b44198" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Function</type>
          </param>
          <param>
            <type>typename Class</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void common::event_listener_t&lt; T &gt;::internal_event_t::SetFunction</definition>
        <argsstring>(Class *mThis, Function &amp;&amp;func)</argsstring>
        <name>SetFunction</name>
        <param>
          <type>Class *</type>
          <declname>mThis</declname>
        </param>
        <param>
          <type>Function &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="106" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="106" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="95" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="94" bodyend="112"/>
    <listofallmembers>
      <member refid="structcommon_1_1event__listener__t_1_1internal__event__t_1ae320af335eefc6d7a4b8a42ee055435f" prot="public" virt="non-virtual"><scope>common::event_listener_t::internal_event_t</scope><name>function</name></member>
      <member refid="structcommon_1_1event__listener__t_1_1internal__event__t_1a912c90ca48094bddccd65be38291b550" prot="public" virt="non-virtual"><scope>common::event_listener_t::internal_event_t</scope><name>functype</name></member>
      <member refid="structcommon_1_1event__listener__t_1_1internal__event__t_1af03e9df801eacc3145f42309834a1c02" prot="public" virt="non-virtual"><scope>common::event_listener_t::internal_event_t</scope><name>internal_event_t</name></member>
      <member refid="structcommon_1_1event__listener__t_1_1internal__event__t_1ab01a71146e3f2d74e08caba721d89f71" prot="public" virt="non-virtual"><scope>common::event_listener_t::internal_event_t</scope><name>internal_event_t</name></member>
      <member refid="structcommon_1_1event__listener__t_1_1internal__event__t_1a78af3ce6276ee2f99a6c2f2e67b44198" prot="public" virt="non-virtual"><scope>common::event_listener_t::internal_event_t</scope><name>SetFunction</name></member>
      <member refid="structcommon_1_1event__listener__t_1_1internal__event__t_1a033418a1b95779445996bd6b865b65c9" prot="public" virt="non-virtual"><scope>common::event_listener_t::internal_event_t</scope><name>signature</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
