<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Common::evoke&lt; void, T... &gt;</compoundname>
    <basecompoundref prot="public" virt="virtual">Common::evocableR&lt; void &gt;</basecompoundref>
    <basecompoundref prot="public" virt="virtual">Common::evocableT&lt; T... &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename...</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a745a8057abd62ed534a5f8868b061092" prot="public" static="no">
        <type>typename details::transform_moveables&lt; T... &gt;::tuple_type</type>
        <definition>using Common::evoke&lt; void, T... &gt;::tuple_type =  typename details::transform_moveables&lt;T...&gt;::tuple_type</definition>
        <argsstring></argsstring>
        <name>tuple_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" line="276" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a50b7672c40adc673b2e089b329d4b3b6" prot="public" static="no">
        <type>typename std::tuple&lt; T... &gt;</type>
        <definition>using Common::evoke&lt; void, T... &gt;::parameter_types =  typename std::tuple&lt;T...&gt;</definition>
        <argsstring></argsstring>
        <name>parameter_types</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" line="277" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1ab3774e8a2fabc483a0383c2979dad4c1" prot="public" static="no">
        <type>void</type>
        <definition>using Common::evoke&lt; void, T... &gt;::return_type =  void</definition>
        <argsstring></argsstring>
        <name>return_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" line="278" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" bodystart="278" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1ac350769a2a566b710db131f1c1d96883" prot="private" static="no" mutable="no">
        <type>std::function&lt; void(T...)&gt;</type>
        <definition>std::function&lt;void(T...)&gt; Common::evoke&lt; void, T... &gt;::bind_</definition>
        <argsstring></argsstring>
        <name>bind_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" line="328" column="15" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a696a4d2c4707ba4be9136b6407ba8e01" prot="private" static="no" mutable="no">
        <type>tuple_type</type>
        <definition>tuple_type Common::evoke&lt; void, T... &gt;::params</definition>
        <argsstring></argsstring>
        <name>params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" line="329" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" bodystart="329" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1aa26daca91a82d9b3a525c79812c2672f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>AT</declname>
            <defname>AT</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Common::evoke&lt; void, T... &gt;::evoke</definition>
        <argsstring>(std::function&lt; void(T...)&gt; &amp;&amp;f, AT &amp;&amp;... args)</argsstring>
        <name>evoke</name>
        <param>
          <type>std::function&lt; void(T...)&gt; &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>AT &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" line="281" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" bodystart="281" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a4641a233467852d45de0571b38c9e3fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Common::evoke&lt; void, T... &gt;::~evoke</definition>
        <argsstring>()</argsstring>
        <name>~evoke</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" line="284" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" bodystart="284" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a0f782b21b569fdfa68c74f5243e7926e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Common::evoke&lt; void, T... &gt;::operator()</definition>
        <argsstring>() override</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" line="286" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" bodystart="286" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1aa4d4ee36ea586e01c43a593840235860" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Common::evoke&lt; void, T... &gt;::evoke</definition>
        <argsstring>(const evoke &amp;e)</argsstring>
        <name>evoke</name>
        <param>
          <type>const evoke &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" line="287" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" bodystart="287" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a1af05a91904632ecf11d851c92f2b76e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Common::evoke&lt; void, T... &gt;::evoke</definition>
        <argsstring>(evoke &amp;&amp;e)</argsstring>
        <name>evoke</name>
        <param>
          <type>evoke &amp;&amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" line="288" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" bodystart="288" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a09ea6ae1dd114b036776cf6a121b4d49" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>evoke &amp;</type>
        <definition>evoke&amp; Common::evoke&lt; void, T... &gt;::operator=</definition>
        <argsstring>(const evoke &amp;e) &amp;</argsstring>
        <name>operator=</name>
        <param>
          <type>const evoke &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" line="289" column="7" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" bodystart="289" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a822652943999be53abaf05e47a705f61" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>evoke &amp;</type>
        <definition>evoke&amp; Common::evoke&lt; void, T... &gt;::operator=</definition>
        <argsstring>(evoke &amp;&amp;e) &amp;</argsstring>
        <name>operator=</name>
        <param>
          <type>evoke &amp;&amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" line="298" column="7" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" bodystart="298" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a26e6797e44d7d27c4d911396739dfd6b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::array&lt; std::pair&lt; std::uintptr_t, size_t &gt;, sizeof...(T)&gt;</type>
        <definition>std::array&lt;std::pair&lt;std::uintptr_t, size_t&gt;, sizeof...(T)&gt; Common::evoke&lt; void, T... &gt;::_parameter_locations</definition>
        <argsstring>() const</argsstring>
        <name>_parameter_locations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" line="308" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" bodystart="308" bodyend="311"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1afa4d3412d0d598d6ac8180a66f026570" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t...</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Common::evoke&lt; void, T... &gt;::execute_fn</definition>
        <argsstring>(std::index_sequence&lt; S... &gt;)</argsstring>
        <name>execute_fn</name>
        <param>
          <type>std::index_sequence&lt; S... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" line="315" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a76ea3baab54002ede129b6a1ab9b72b7" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t...</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
        </templateparamlist>
        <type>std::array&lt; std::pair&lt; std::uintptr_t, size_t &gt;, sizeof...(T)&gt;</type>
        <definition>std::array&lt;std::pair&lt;std::uintptr_t, size_t&gt;, sizeof...(T)&gt; Common::evoke&lt; void, T... &gt;::parameter_loc</definition>
        <argsstring>(std::index_sequence&lt; S... &gt;) const</argsstring>
        <name>parameter_loc</name>
        <param>
          <type>std::index_sequence&lt; S... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" line="321" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" bodystart="321" bodyend="326"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" line="274" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/evoke.hpp" bodystart="273" bodyend="330"/>
    <listofallmembers>
      <member refid="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a26e6797e44d7d27c4d911396739dfd6b" prot="public" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>_parameter_locations</name></member>
      <member refid="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1ac350769a2a566b710db131f1c1d96883" prot="private" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>bind_</name></member>
      <member refid="class_common_1_1evocable_1ada069216a51826f97bb5ef92507c7dad" prot="protected" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>evocable</name></member>
      <member refid="class_common_1_1evocable_1a154ed6811474b7c3982bc882da48e187" prot="protected" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>evocable</name></member>
      <member refid="class_common_1_1evocable_1a41b2524e0a8a3288057c753b9923949b" prot="protected" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>evocable</name></member>
      <member refid="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1aa26daca91a82d9b3a525c79812c2672f" prot="public" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>evoke</name></member>
      <member refid="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1aa4d4ee36ea586e01c43a593840235860" prot="public" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>evoke</name></member>
      <member refid="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a1af05a91904632ecf11d851c92f2b76e" prot="public" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>evoke</name></member>
      <member refid="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1afa4d3412d0d598d6ac8180a66f026570" prot="private" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>execute_fn</name></member>
      <member refid="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a0f782b21b569fdfa68c74f5243e7926e" prot="public" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>operator()</name></member>
      <member refid="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a09ea6ae1dd114b036776cf6a121b4d49" prot="public" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>operator=</name></member>
      <member refid="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a822652943999be53abaf05e47a705f61" prot="public" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>operator=</name></member>
      <member refid="class_common_1_1evocable_1a0a4a17ca45151559c62a5f3602ee37c5" prot="protected" virt="non-virtual" ambiguityscope="Common::evocableR::"><scope>Common::evoke&lt; void, T... &gt;</scope><name>operator=</name></member>
      <member refid="class_common_1_1evocable_1a0dc2e9351a755330c9db9b0499571a1e" prot="protected" virt="non-virtual" ambiguityscope="Common::evocableR::"><scope>Common::evoke&lt; void, T... &gt;</scope><name>operator=</name></member>
      <member refid="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a76ea3baab54002ede129b6a1ab9b72b7" prot="private" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>parameter_loc</name></member>
      <member refid="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a50b7672c40adc673b2e089b329d4b3b6" prot="public" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>parameter_types</name></member>
      <member refid="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a696a4d2c4707ba4be9136b6407ba8e01" prot="private" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>params</name></member>
      <member refid="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1ab3774e8a2fabc483a0383c2979dad4c1" prot="public" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>return_type</name></member>
      <member refid="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a745a8057abd62ed534a5f8868b061092" prot="public" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>tuple_type</name></member>
      <member refid="class_common_1_1evocable_1a32c4a260e7d10d11feea4224df331e8d" prot="public" virt="virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>~evocable</name></member>
      <member refid="class_common_1_1evocable_r_1a14c3e0a56973c20b373f0e5597d91ae8" prot="public" virt="virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>~evocableR</name></member>
      <member refid="class_common_1_1evocable_t_1af1216a92d78f985d5773e44e24e52f54" prot="public" virt="virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>~evocableT</name></member>
      <member refid="class_common_1_1evoke_3_01void_00_01_t_8_8_8_01_4_1a4641a233467852d45de0571b38c9e3fc" prot="public" virt="non-virtual"><scope>Common::evoke&lt; void, T... &gt;</scope><name>~evoke</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
