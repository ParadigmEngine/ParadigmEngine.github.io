<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcore_1_1gfx_1_1texture__t" kind="class" language="C++" prot="public">
    <compoundname>core::gfx::texture_t</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classcore_1_1gfx_1_1texture__t_1a54667d631dad67aee5ad68496badd88e" prot="public" static="no">
        <type><ref refid="classcore_1_1meta_1_1texture__t" kindref="compound">core::meta::texture_t</ref></type>
        <definition>using core::gfx::texture_t::meta_type =  core::meta::texture_t</definition>
        <argsstring></argsstring>
        <name>meta_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/texture.hpp" line="11" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/texture.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcore_1_1gfx_1_1texture__t_1a38ac4eed5a21665c16aed0a7d66c78c5" prot="private" static="no" mutable="no">
        <type>core::gfx::graphics_backend</type>
        <definition>core::gfx::graphics_backend core::gfx::texture_t::m_Backend</definition>
        <argsstring></argsstring>
        <name>m_Backend</name>
        <initializer>{graphics_backend::undefined}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/texture.hpp" line="46" column="29" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/texture.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcore_1_1gfx_1_1texture__t_1aacf73392315b547a9011cf2d55e543e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>texture_t::texture_t</definition>
        <argsstring>(core::resource::cache_t &amp;cache, const core::resource::metadata &amp;metaData, core::meta::texture_t *metaFile, core::resource::handle&lt; core::gfx::context &gt; context)</argsstring>
        <name>texture_t</name>
        <param>
          <type>core::resource::cache_t &amp;</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const <ref refid="structcore_1_1resource_1_1metadata" kindref="compound">core::resource::metadata</ref> &amp;</type>
          <declname>metaData</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1meta_1_1texture__t" kindref="compound">core::meta::texture_t</ref> *</type>
          <declname>metaFile</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; core::gfx::context &gt;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/texture.hpp" line="20" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/texture.cpp" bodystart="28" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1texture__t_1a752c0772d9c2a8a89d917046fdd362e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>texture_t::~texture_t</definition>
        <argsstring>()</argsstring>
        <name>~texture_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/texture.hpp" line="25" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/texture.cpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1texture__t_1a4f00120064bdd0893e4f58304fd6c8d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::gfx::texture_t::texture_t</definition>
        <argsstring>(const texture_t &amp;other)=delete</argsstring>
        <name>texture_t</name>
        <param>
          <type>const texture_t &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/texture.hpp" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1texture__t_1ad5e25da05f870f7cf12c1bdaeb9a15b6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>core::gfx::texture_t::texture_t</definition>
        <argsstring>(texture_t &amp;&amp;other) noexcept=delete</argsstring>
        <name>texture_t</name>
        <param>
          <type>texture_t &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/texture.hpp" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1texture__t_1a51e0127e714e5d858b337bec073afd7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>texture_t &amp;</type>
        <definition>texture_t&amp; core::gfx::texture_t::operator=</definition>
        <argsstring>(const texture_t &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const texture_t &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/texture.hpp" line="29" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1texture__t_1ae1f5fca29e0458539112fd1d624df917" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>texture_t &amp;</type>
        <definition>texture_t&amp; core::gfx::texture_t::operator=</definition>
        <argsstring>(texture_t &amp;&amp;other) noexcept=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>texture_t &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/texture.hpp" line="30" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1texture__t_1ada21fafedc3f62587956b92353117037" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>core::gfx::graphics_backend</type>
            <declname>backend</declname>
            <defname>backend</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; backend_type_t&lt; texture_t, backend &gt; &gt;</type>
        <definition>core::resource::handle&lt;backend_type_t&lt;texture_t, backend&gt; &gt; core::gfx::texture_t::resource</definition>
        <argsstring>() const noexcept</argsstring>
        <name>resource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/texture.hpp" line="33" column="24" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/texture.hpp" bodystart="33" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1texture__t_1a12c687ce515032ac6dd3b3f489b70eda" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classcore_1_1meta_1_1texture__t" kindref="compound">core::meta::texture_t</ref> &amp;</type>
        <definition>const core::meta::texture_t &amp; texture_t::meta</definition>
        <argsstring>() const noexcept</argsstring>
        <name>meta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/texture.hpp" line="43" column="29" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/texture.cpp" bodystart="56" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/texture.hpp" line="9" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/texture.hpp" bodystart="8" bodyend="53"/>
    <listofallmembers>
      <member refid="classcore_1_1gfx_1_1texture__t_1a38ac4eed5a21665c16aed0a7d66c78c5" prot="private" virt="non-virtual"><scope>core::gfx::texture_t</scope><name>m_Backend</name></member>
      <member refid="classcore_1_1gfx_1_1texture__t_1a12c687ce515032ac6dd3b3f489b70eda" prot="public" virt="non-virtual"><scope>core::gfx::texture_t</scope><name>meta</name></member>
      <member refid="classcore_1_1gfx_1_1texture__t_1a54667d631dad67aee5ad68496badd88e" prot="public" virt="non-virtual"><scope>core::gfx::texture_t</scope><name>meta_type</name></member>
      <member refid="classcore_1_1gfx_1_1texture__t_1a51e0127e714e5d858b337bec073afd7c" prot="public" virt="non-virtual"><scope>core::gfx::texture_t</scope><name>operator=</name></member>
      <member refid="classcore_1_1gfx_1_1texture__t_1ae1f5fca29e0458539112fd1d624df917" prot="public" virt="non-virtual"><scope>core::gfx::texture_t</scope><name>operator=</name></member>
      <member refid="classcore_1_1gfx_1_1texture__t_1ada21fafedc3f62587956b92353117037" prot="public" virt="non-virtual"><scope>core::gfx::texture_t</scope><name>resource</name></member>
      <member refid="classcore_1_1gfx_1_1texture__t_1aacf73392315b547a9011cf2d55e543e5" prot="public" virt="non-virtual"><scope>core::gfx::texture_t</scope><name>texture_t</name></member>
      <member refid="classcore_1_1gfx_1_1texture__t_1a4f00120064bdd0893e4f58304fd6c8d6" prot="public" virt="non-virtual"><scope>core::gfx::texture_t</scope><name>texture_t</name></member>
      <member refid="classcore_1_1gfx_1_1texture__t_1ad5e25da05f870f7cf12c1bdaeb9a15b6" prot="public" virt="non-virtual"><scope>core::gfx::texture_t</scope><name>texture_t</name></member>
      <member refid="classcore_1_1gfx_1_1texture__t_1a752c0772d9c2a8a89d917046fdd362e1" prot="public" virt="non-virtual"><scope>core::gfx::texture_t</scope><name>~texture_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
