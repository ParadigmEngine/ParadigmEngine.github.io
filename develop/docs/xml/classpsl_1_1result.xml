<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpsl_1_1result" kind="class" language="C++" prot="public">
    <compoundname>psl::result</compoundname>
    <innerclass refid="structpsl_1_1result_1_1dummy" prot="private">psl::result::dummy</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classpsl_1_1result_1a3a4b0f43a41d593afbfec6f7f080a4a2" prot="public" static="no" mutable="no">
        <type>dummy</type>
        <definition>dummy psl::result&lt; T &gt;::m_Dummy</definition>
        <argsstring></argsstring>
        <name>m_Dummy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" line="49" column="7" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1result_1a1aeeef0cb8f013c39ca7ed283213a43b" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T psl::result&lt; T &gt;::m_Value</definition>
        <argsstring></argsstring>
        <name>m_Value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" line="50" column="3" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpsl_1_1result_1ac1abea080196e829bdf06812addcbde9" prot="private" static="no" mutable="no">
        <type>union psl::result::@15</type>
        <definition>union psl::result::@15 psl::result&lt; T &gt;::@16</definition>
        <argsstring></argsstring>
        <name>@16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1result_1abbf6ff223e493ea02e6e6a542bad9be3" prot="private" static="no" mutable="no">
        <type>std::error_code</type>
        <definition>std::error_code psl::result&lt; T &gt;::m_Error</definition>
        <argsstring></argsstring>
        <name>m_Error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" line="52" column="17" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpsl_1_1result_1a4d72c0fcd286772ec8cf88837313af15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>psl::result&lt; T &gt;::result</definition>
        <argsstring>(std::error_code error_)</argsstring>
        <name>result</name>
        <param>
          <type>std::error_code</type>
          <declname>error_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" line="10" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" bodystart="10" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1result_1a5244b6071a222fa33412339469a2871e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>psl::result&lt; T &gt;::result</definition>
        <argsstring>(T value_)</argsstring>
        <name>result</name>
        <param>
          <type>T</type>
          <declname>value_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" line="12" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1result_1a351f2d5dacd20ecaad3d650505531acd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>psl::result&lt; T &gt;::result</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>result</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" line="15" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1result_1a7314103ff6b9f806479a1fbb71853412" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;std::is_copy_constructible&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>psl::result&lt; T &gt;::result</definition>
        <argsstring>(const result &amp;other)</argsstring>
        <name>result</name>
        <param>
          <type>const result &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" line="18" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1result_1aad6e9ee084ef8387500e8b6194575c88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;std::is_copy_assignable&lt;T&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type>result &amp;</type>
        <definition>result&amp; psl::result&lt; T &gt;::operator=</definition>
        <argsstring>(const result &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const result &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" line="24" column="8" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" bodystart="24" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1result_1a530fc3427488ac373ac37565dbc4e96e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; psl::result&lt; T &gt;::value</definition>
        <argsstring>()</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" line="34" column="3" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" bodystart="34" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1result_1a96e5467ad6e36f222d5a0e92a69b220a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::error_code &amp;</type>
        <definition>const std::error_code&amp; psl::result&lt; T &gt;::error</definition>
        <argsstring>() const</argsstring>
        <name>error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" line="42" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" line="8" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/expected.hpp" bodystart="7" bodyend="53"/>
    <listofallmembers>
      <member refid="classpsl_1_1result_1a96e5467ad6e36f222d5a0e92a69b220a" prot="public" virt="non-virtual"><scope>psl::result</scope><name>error</name></member>
      <member refid="classpsl_1_1result_1a3a4b0f43a41d593afbfec6f7f080a4a2" prot="public" virt="non-virtual"><scope>psl::result</scope><name>m_Dummy</name></member>
      <member refid="classpsl_1_1result_1abbf6ff223e493ea02e6e6a542bad9be3" prot="private" virt="non-virtual"><scope>psl::result</scope><name>m_Error</name></member>
      <member refid="classpsl_1_1result_1a1aeeef0cb8f013c39ca7ed283213a43b" prot="public" virt="non-virtual"><scope>psl::result</scope><name>m_Value</name></member>
      <member refid="classpsl_1_1result_1aad6e9ee084ef8387500e8b6194575c88" prot="public" virt="non-virtual"><scope>psl::result</scope><name>operator=</name></member>
      <member refid="classpsl_1_1result_1a4d72c0fcd286772ec8cf88837313af15" prot="public" virt="non-virtual"><scope>psl::result</scope><name>result</name></member>
      <member refid="classpsl_1_1result_1a5244b6071a222fa33412339469a2871e" prot="public" virt="non-virtual"><scope>psl::result</scope><name>result</name></member>
      <member refid="classpsl_1_1result_1a351f2d5dacd20ecaad3d650505531acd" prot="public" virt="non-virtual"><scope>psl::result</scope><name>result</name></member>
      <member refid="classpsl_1_1result_1a7314103ff6b9f806479a1fbb71853412" prot="public" virt="non-virtual"><scope>psl::result</scope><name>result</name></member>
      <member refid="classpsl_1_1result_1a530fc3427488ac373ac37565dbc4e96e" prot="public" virt="non-virtual"><scope>psl::result</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
