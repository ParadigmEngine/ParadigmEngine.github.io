<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structutility_1_1templates_1_1get__value__type_3_01std_1_1unordered__map_3_01_t_00_01_a_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>utility::templates::get_value_type&lt; std::unordered_map&lt; T, A &gt; &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename A</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structutility_1_1templates_1_1get__value__type_3_01std_1_1unordered__map_3_01_t_00_01_a_01_4_01_4_1afbe2f57a3f924c16c3c8462daa168259" prot="public" static="no">
        <type>A</type>
        <definition>using utility::templates::get_value_type&lt; std::unordered_map&lt; T, A &gt; &gt;::type =  A</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/template_utils.hpp" line="258" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/template_utils.hpp" bodystart="258" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/template_utils.hpp" line="257" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/template_utils.hpp" bodystart="256" bodyend="259"/>
    <listofallmembers>
      <member refid="structutility_1_1templates_1_1get__value__type_3_01std_1_1unordered__map_3_01_t_00_01_a_01_4_01_4_1afbe2f57a3f924c16c3c8462daa168259" prot="public" virt="non-virtual"><scope>utility::templates::get_value_type&lt; std::unordered_map&lt; T, A &gt; &gt;</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
