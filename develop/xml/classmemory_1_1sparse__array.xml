<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classmemory_1_1sparse__array" kind="class" language="C++" prot="public">
    <compoundname>memory::sparse_array</compoundname>
    <includes refid="memory_2sparse__array_8hpp" local="no">sparse_array.hpp</includes>
    <innerclass refid="classmemory_1_1sparse__array_1_1iterator" prot="public">memory::sparse_array::iterator</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename Key</type>
        <defval>size_t</defval>
      </param>
      <param>
        <type>Key</type>
        <declname>chunks_size</declname>
        <defname>chunks_size</defname>
        <defval>4096</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classmemory_1_1sparse__array_1a950b0cc6aff5dcb18e9af388c1b678d1" prot="private" static="no">
        <type>T</type>
        <definition>using memory::sparse_array&lt; T, Key, chunks_size &gt;::type_t =  T</definition>
        <argsstring></argsstring>
        <name>type_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="14" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmemory_1_1sparse__array_1ad3ac46a77d1dbf259ad5f2f5b9e82eb4" prot="private" static="no">
        <type>Key</type>
        <definition>using memory::sparse_array&lt; T, Key, chunks_size &gt;::index_type =  Key</definition>
        <argsstring></argsstring>
        <name>index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="15" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmemory_1_1sparse__array_1ac478e38cb2ca027e6154b4f9bb06933f" prot="public" static="no">
        <type>typename psl::array&lt; index_type &gt;::size_type</type>
        <definition>using memory::sparse_array&lt; T, Key, chunks_size &gt;::size_type =  typename psl::array&lt;index_type&gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="87" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmemory_1_1sparse__array_1a4e6e6c317ce900deb8317655979e046a" prot="public" static="no">
        <type>typename psl::array&lt; index_type &gt;::difference_type</type>
        <definition>using memory::sparse_array&lt; T, Key, chunks_size &gt;::difference_type =  typename psl::array&lt;index_type&gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="88" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmemory_1_1sparse__array_1a1d614e1b58e54403f37ab75db06efd74" prot="public" static="no">
        <type>T</type>
        <definition>using memory::sparse_array&lt; T, Key, chunks_size &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="89" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmemory_1_1sparse__array_1a34fb2d53d4b907316b12fe746ba4022b" prot="public" static="no">
        <type>value_type *</type>
        <definition>using memory::sparse_array&lt; T, Key, chunks_size &gt;::pointer =  value_type*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="90" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmemory_1_1sparse__array_1abf203f8f24c241107af897c928e7f56d" prot="public" static="no">
        <type>value_type *const</type>
        <definition>using memory::sparse_array&lt; T, Key, chunks_size &gt;::const_pointer =  value_type* const</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="91" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmemory_1_1sparse__array_1a4127d60601a1b8ab30707a138b846a97" prot="public" static="no">
        <type>value_type &amp;</type>
        <definition>using memory::sparse_array&lt; T, Key, chunks_size &gt;::reference =  value_type&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="92" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmemory_1_1sparse__array_1a4953a667c0875aace74f5734da55cf87" prot="public" static="no">
        <type>const value_type &amp;</type>
        <definition>using memory::sparse_array&lt; T, Key, chunks_size &gt;::const_reference =  const value_type&amp;</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="93" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmemory_1_1sparse__array_1a8c5e65a3c04e815686ce4e78857604f6" prot="public" static="no">
        <type>std::random_access_iterator_tag</type>
        <definition>using memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator_category =  std::random_access_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="94" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classmemory_1_1sparse__array_1a264773218ab1b41237495cc78b4a4ca8" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool memory::sparse_array&lt; T, Key, chunks_size &gt;::is_power_of_two</definition>
        <argsstring></argsstring>
        <name>is_power_of_two</name>
        <initializer>{chunks_size &amp;&amp; ((chunks_size &amp; (chunks_size - 1)) == 0)}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="17" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmemory_1_1sparse__array_1a64163a1674db26a9465b666492dcfaef" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr Key</type>
        <definition>constexpr Key memory::sparse_array&lt; T, Key, chunks_size &gt;::mod_val</definition>
        <argsstring></argsstring>
        <name>mod_val</name>
        <initializer>{(is_power_of_two) ? chunks_size - 1 : chunks_size}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="18" column="22" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmemory_1_1sparse__array_1a12757e3901a77b24a93be8cf2fa57bd0" prot="private" static="no" mutable="no">
        <type>psl::array&lt; index_type &gt;</type>
        <definition>psl::array&lt;index_type&gt; memory::sparse_array&lt; T, Key, chunks_size &gt;::m_Reverse</definition>
        <argsstring></argsstring>
        <name>m_Reverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="478" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmemory_1_1sparse__array_1a139804a00ba1490a9d74b67065537931" prot="private" static="no" mutable="no">
        <type>::memory::raw_region</type>
        <definition>::memory::raw_region memory::sparse_array&lt; T, Key, chunks_size &gt;::m_DenseData</definition>
        <argsstring></argsstring>
        <name>m_DenseData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="479" column="22" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmemory_1_1sparse__array_1a7f29bdbf9014b6cd9a680033d0452c31" prot="private" static="no" mutable="no">
        <type>psl::array&lt; psl::array&lt; index_type &gt; &gt;</type>
        <definition>psl::array&lt;psl::array&lt;index_type&gt; &gt; memory::sparse_array&lt; T, Key, chunks_size &gt;::m_Sparse</definition>
        <argsstring></argsstring>
        <name>m_Sparse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="480" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="480" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a50eb3554415a566232e64cc165dc1424" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>memory::sparse_array&lt; T, Key, chunks_size &gt;::sparse_array</definition>
        <argsstring>() noexcept</argsstring>
        <name>sparse_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="96" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a8b843aa1a90df0c663b9eeb1b5813fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>memory::sparse_array&lt; T, Key, chunks_size &gt;::~sparse_array</definition>
        <argsstring>()=default</argsstring>
        <name>~sparse_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a4ca71469ba2e1c62c4ff99654bc6db5b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>memory::sparse_array&lt; T, Key, chunks_size &gt;::sparse_array</definition>
        <argsstring>(const sparse_array &amp;other) noexcept</argsstring>
        <name>sparse_array</name>
        <param>
          <type>const <ref refid="classmemory_1_1sparse__array" kindref="compound">sparse_array</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="98" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="98" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1ae691a01e34fca3ada4deecaf5c07b54d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>memory::sparse_array&lt; T, Key, chunks_size &gt;::sparse_array</definition>
        <argsstring>(sparse_array &amp;&amp;other) noexcept</argsstring>
        <name>sparse_array</name>
        <param>
          <type><ref refid="classmemory_1_1sparse__array" kindref="compound">sparse_array</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="100" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a6de1eea37c800ce0d629f7b1c23a5ad7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classmemory_1_1sparse__array" kindref="compound">sparse_array</ref> &amp;</type>
        <definition>sparse_array&amp; memory::sparse_array&lt; T, Key, chunks_size &gt;::operator=</definition>
        <argsstring>(const sparse_array &amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmemory_1_1sparse__array" kindref="compound">sparse_array</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="103" column="14" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="103" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a34b98860e65e155780becef401c7c452" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classmemory_1_1sparse__array" kindref="compound">sparse_array</ref> &amp;</type>
        <definition>sparse_array&amp; memory::sparse_array&lt; T, Key, chunks_size &gt;::operator=</definition>
        <argsstring>(sparse_array &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classmemory_1_1sparse__array" kindref="compound">sparse_array</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="113" column="14" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="113" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1ae2c3c862f934234c1220505263ed2985" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type memory::sparse_array&lt; T, Key, chunks_size &gt;::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="123" column="11" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a7d8ca5dd06d765b328c0ab968f5a503e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type memory::sparse_array&lt; T, Key, chunks_size &gt;::capacity</definition>
        <argsstring>() const noexcept</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="124" column="11" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a8570739444eb212729c29160f8c822cd" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator memory::sparse_array&lt; T, Key, chunks_size &gt;::begin</definition>
        <argsstring>() noexcept</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="126" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1adbcae3bb6d84fe9bc99bba39733994b4" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator memory::sparse_array&lt; T, Key, chunks_size &gt;::end</definition>
        <argsstring>() noexcept</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="127" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a10b817de3dc2f05e0e2acea9e9233d9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void memory::sparse_array&lt; T, Key, chunks_size &gt;::grow</definition>
        <argsstring>()</argsstring>
        <name>grow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="132" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="132" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a55e0ca2b2b13f13a20c76aff31215d3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference memory::sparse_array&lt; T, Key, chunks_size &gt;::operator[]</definition>
        <argsstring>(index_type index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="147" column="11" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="147" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a63eccfce66e5b71d7a50260d2b283ae1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference memory::sparse_array&lt; T, Key, chunks_size &gt;::at</definition>
        <argsstring>(index_type index)</argsstring>
        <name>at</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="162" column="11" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="162" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a3d220f7747aea0d5514e69698703551c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const_reference</type>
        <definition>const_reference memory::sparse_array&lt; T, Key, chunks_size &gt;::at</definition>
        <argsstring>(index_type index) const noexcept</argsstring>
        <name>at</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="176" column="17" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="176" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1af976eafc1f99333e23344586a991f6e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void memory::sparse_array&lt; T, Key, chunks_size &gt;::resize</definition>
        <argsstring>(index_type size)</argsstring>
        <name>resize</name>
        <param>
          <type>index_type</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="185" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="185" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a532801cf281fba13333428509d4bbc5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void memory::sparse_array&lt; T, Key, chunks_size &gt;::insert</definition>
        <argsstring>(index_type index)</argsstring>
        <name>insert</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="198" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="198" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1af4f889d2db447c314da4f86505b6a496" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void memory::sparse_array&lt; T, Key, chunks_size &gt;::insert</definition>
        <argsstring>(index_type index, const_reference value)</argsstring>
        <name>insert</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const_reference</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="206" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="206" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a97ac533082ca7ec0b808795c03a61946" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ItF</type>
          </param>
          <param>
            <type>typename ItL</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void memory::sparse_array&lt; T, Key, chunks_size &gt;::insert</definition>
        <argsstring>(index_type index, ItF &amp;&amp;first, ItL &amp;&amp;last)</argsstring>
        <name>insert</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <param>
          <type>ItF &amp;&amp;</type>
          <declname>first</declname>
        </param>
        <param>
          <type>ItL &amp;&amp;</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="218" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="218" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1ac146956e7870288fb17aa6a6ca3a841d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void memory::sparse_array&lt; T, Key, chunks_size &gt;::emplace</definition>
        <argsstring>(index_type index, value_type &amp;&amp;value)</argsstring>
        <name>emplace</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <param>
          <type>value_type &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="263" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="263" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a698062b61cd0efd0b2f83cd287863b4b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool memory::sparse_array&lt; T, Key, chunks_size &gt;::has</definition>
        <argsstring>(index_type index) const noexcept</argsstring>
        <name>has</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="273" column="16" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="273" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a671d5674c63195afd382a8021dd64a71" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool memory::sparse_array&lt; T, Key, chunks_size &gt;::empty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="294" column="16" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="294" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a721ef0c4b9a7ee3c469b6187a93560a5" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* memory::sparse_array&lt; T, Key, chunks_size &gt;::data</definition>
        <argsstring>() noexcept</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="296" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="296" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1ad47982b8a9a46ca6ff99748e3e547d2e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* memory::sparse_array&lt; T, Key, chunks_size &gt;::data</definition>
        <argsstring>() const noexcept</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="297" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="297" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a35c92a0339dca7897c9fe50df87c75a3" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void memory::sparse_array&lt; T, Key, chunks_size &gt;::erase</definition>
        <argsstring>(index_type index) noexcept</argsstring>
        <name>erase</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="299" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="299" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a15ad6e222178cf43cb8bc4c82f282ae6" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void memory::sparse_array&lt; T, Key, chunks_size &gt;::clear</definition>
        <argsstring>() noexcept</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="325" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="325" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a7c86e184466e873a636e9103c78e20ac" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void memory::sparse_array&lt; T, Key, chunks_size &gt;::erase</definition>
        <argsstring>(index_type first, index_type last) noexcept</argsstring>
        <name>erase</name>
        <param>
          <type>index_type</type>
          <declname>first</declname>
        </param>
        <param>
          <type>index_type</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="331" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="331" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a5469f45521582d765522b67a76debfef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void memory::sparse_array&lt; T, Key, chunks_size &gt;::reserve</definition>
        <argsstring>(size_t capacity)</argsstring>
        <name>reserve</name>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="424" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="424" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a386fadf9e7d6a9349f9a3233a9b788a8" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>psl::array_view&lt; index_type &gt;</type>
        <definition>psl::array_view&lt;index_type&gt; memory::sparse_array&lt; T, Key, chunks_size &gt;::indices</definition>
        <argsstring>() const noexcept</argsstring>
        <name>indices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="432" column="17" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="432" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1ab0d596cb3f5ca4d529b606b0a227dc44" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>psl::array_view&lt; value_type &gt;</type>
        <definition>psl::array_view&lt;value_type&gt; memory::sparse_array&lt; T, Key, chunks_size &gt;::dense</definition>
        <argsstring>() const noexcept</argsstring>
        <name>dense</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="433" column="17" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="433" bodyend="436"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmemory_1_1sparse__array_1a2b45775709249189c9736157e061b396" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::array&lt; index_type &gt; &amp;</type>
        <definition>psl::array&lt;index_type&gt;&amp; memory::sparse_array&lt; T, Key, chunks_size &gt;::chunk_for</definition>
        <argsstring>(index_type &amp;index)</argsstring>
        <name>chunk_for</name>
        <param>
          <type>index_type &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="439" column="19" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="439" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1ada76f8d6de6220bae1b9442b77dc4ac5" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void memory::sparse_array&lt; T, Key, chunks_size &gt;::chunk_info_for</definition>
        <argsstring>(index_type index, index_type &amp;element_index, index_type &amp;chunk_index) const noexcept</argsstring>
        <name>chunk_info_for</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <param>
          <type>index_type &amp;</type>
          <declname>element_index</declname>
        </param>
        <param>
          <type>index_type &amp;</type>
          <declname>chunk_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="464" column="13" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="464" bodyend="476"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>container type that is fast to iterate, but has non-continuous interface </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="13" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="12" bodyend="481"/>
    <listofallmembers>
      <member refid="classmemory_1_1sparse__array_1a63eccfce66e5b71d7a50260d2b283ae1" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>at</name></member>
      <member refid="classmemory_1_1sparse__array_1a3d220f7747aea0d5514e69698703551c" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>at</name></member>
      <member refid="classmemory_1_1sparse__array_1a8570739444eb212729c29160f8c822cd" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>begin</name></member>
      <member refid="classmemory_1_1sparse__array_1a7d8ca5dd06d765b328c0ab968f5a503e" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>capacity</name></member>
      <member refid="classmemory_1_1sparse__array_1a2b45775709249189c9736157e061b396" prot="private" virt="non-virtual"><scope>memory::sparse_array</scope><name>chunk_for</name></member>
      <member refid="classmemory_1_1sparse__array_1ada76f8d6de6220bae1b9442b77dc4ac5" prot="private" virt="non-virtual"><scope>memory::sparse_array</scope><name>chunk_info_for</name></member>
      <member refid="classmemory_1_1sparse__array_1a15ad6e222178cf43cb8bc4c82f282ae6" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>clear</name></member>
      <member refid="classmemory_1_1sparse__array_1abf203f8f24c241107af897c928e7f56d" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>const_pointer</name></member>
      <member refid="classmemory_1_1sparse__array_1a4953a667c0875aace74f5734da55cf87" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>const_reference</name></member>
      <member refid="classmemory_1_1sparse__array_1a721ef0c4b9a7ee3c469b6187a93560a5" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>data</name></member>
      <member refid="classmemory_1_1sparse__array_1ad47982b8a9a46ca6ff99748e3e547d2e" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>data</name></member>
      <member refid="classmemory_1_1sparse__array_1ab0d596cb3f5ca4d529b606b0a227dc44" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>dense</name></member>
      <member refid="classmemory_1_1sparse__array_1a4e6e6c317ce900deb8317655979e046a" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>difference_type</name></member>
      <member refid="classmemory_1_1sparse__array_1ac146956e7870288fb17aa6a6ca3a841d" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>emplace</name></member>
      <member refid="classmemory_1_1sparse__array_1a671d5674c63195afd382a8021dd64a71" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>empty</name></member>
      <member refid="classmemory_1_1sparse__array_1adbcae3bb6d84fe9bc99bba39733994b4" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>end</name></member>
      <member refid="classmemory_1_1sparse__array_1a35c92a0339dca7897c9fe50df87c75a3" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>erase</name></member>
      <member refid="classmemory_1_1sparse__array_1a7c86e184466e873a636e9103c78e20ac" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>erase</name></member>
      <member refid="classmemory_1_1sparse__array_1a10b817de3dc2f05e0e2acea9e9233d9a" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>grow</name></member>
      <member refid="classmemory_1_1sparse__array_1a698062b61cd0efd0b2f83cd287863b4b" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>has</name></member>
      <member refid="classmemory_1_1sparse__array_1ad3ac46a77d1dbf259ad5f2f5b9e82eb4" prot="private" virt="non-virtual"><scope>memory::sparse_array</scope><name>index_type</name></member>
      <member refid="classmemory_1_1sparse__array_1a386fadf9e7d6a9349f9a3233a9b788a8" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>indices</name></member>
      <member refid="classmemory_1_1sparse__array_1a532801cf281fba13333428509d4bbc5b" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>insert</name></member>
      <member refid="classmemory_1_1sparse__array_1af4f889d2db447c314da4f86505b6a496" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>insert</name></member>
      <member refid="classmemory_1_1sparse__array_1a97ac533082ca7ec0b808795c03a61946" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>insert</name></member>
      <member refid="classmemory_1_1sparse__array_1a264773218ab1b41237495cc78b4a4ca8" prot="private" virt="non-virtual"><scope>memory::sparse_array</scope><name>is_power_of_two</name></member>
      <member refid="classmemory_1_1sparse__array_1a8c5e65a3c04e815686ce4e78857604f6" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>iterator_category</name></member>
      <member refid="classmemory_1_1sparse__array_1a139804a00ba1490a9d74b67065537931" prot="private" virt="non-virtual"><scope>memory::sparse_array</scope><name>m_DenseData</name></member>
      <member refid="classmemory_1_1sparse__array_1a12757e3901a77b24a93be8cf2fa57bd0" prot="private" virt="non-virtual"><scope>memory::sparse_array</scope><name>m_Reverse</name></member>
      <member refid="classmemory_1_1sparse__array_1a7f29bdbf9014b6cd9a680033d0452c31" prot="private" virt="non-virtual"><scope>memory::sparse_array</scope><name>m_Sparse</name></member>
      <member refid="classmemory_1_1sparse__array_1a64163a1674db26a9465b666492dcfaef" prot="private" virt="non-virtual"><scope>memory::sparse_array</scope><name>mod_val</name></member>
      <member refid="classmemory_1_1sparse__array_1a6de1eea37c800ce0d629f7b1c23a5ad7" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>operator=</name></member>
      <member refid="classmemory_1_1sparse__array_1a34b98860e65e155780becef401c7c452" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>operator=</name></member>
      <member refid="classmemory_1_1sparse__array_1a55e0ca2b2b13f13a20c76aff31215d3c" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>operator[]</name></member>
      <member refid="classmemory_1_1sparse__array_1a34fb2d53d4b907316b12fe746ba4022b" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>pointer</name></member>
      <member refid="classmemory_1_1sparse__array_1a4127d60601a1b8ab30707a138b846a97" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>reference</name></member>
      <member refid="classmemory_1_1sparse__array_1a5469f45521582d765522b67a76debfef" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>reserve</name></member>
      <member refid="classmemory_1_1sparse__array_1af976eafc1f99333e23344586a991f6e8" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>resize</name></member>
      <member refid="classmemory_1_1sparse__array_1ae2c3c862f934234c1220505263ed2985" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>size</name></member>
      <member refid="classmemory_1_1sparse__array_1ac478e38cb2ca027e6154b4f9bb06933f" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>size_type</name></member>
      <member refid="classmemory_1_1sparse__array_1a50eb3554415a566232e64cc165dc1424" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>sparse_array</name></member>
      <member refid="classmemory_1_1sparse__array_1a4ca71469ba2e1c62c4ff99654bc6db5b" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>sparse_array</name></member>
      <member refid="classmemory_1_1sparse__array_1ae691a01e34fca3ada4deecaf5c07b54d" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>sparse_array</name></member>
      <member refid="classmemory_1_1sparse__array_1a950b0cc6aff5dcb18e9af388c1b678d1" prot="private" virt="non-virtual"><scope>memory::sparse_array</scope><name>type_t</name></member>
      <member refid="classmemory_1_1sparse__array_1a1d614e1b58e54403f37ab75db06efd74" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>value_type</name></member>
      <member refid="classmemory_1_1sparse__array_1a8b843aa1a90df0c663b9eeb1b5813fdd" prot="public" virt="non-virtual"><scope>memory::sparse_array</scope><name>~sparse_array</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
