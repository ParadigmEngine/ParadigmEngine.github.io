<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classutility_1_1platform_1_1directory" kind="class" language="C++" prot="public">
    <compoundname>utility::platform::directory</compoundname>
    <includes refid="platform__utils_8hpp" local="no">platform_utils.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classutility_1_1platform_1_1directory_1a293c6efbb2131ab4aa557b42c0c15188" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr psl::string_view</type>
        <definition>constexpr psl::string_view utility::platform::directory::seperator</definition>
        <argsstring></argsstring>
        <name>seperator</name>
        <initializer>= &quot;/&quot;</initializer>
        <briefdescription>
<para>the seperator character that all commands will be assumed to use, and all platform specific commands will be translated to/from </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" line="124" column="35" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classutility_1_1platform_1_1directory_1aacacac096f3a232f497c2f855a0d02e8" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr psl::string_view</type>
        <definition>constexpr psl::string_view utility::platform::directory::seperator_platform</definition>
        <argsstring></argsstring>
        <name>seperator_platform</name>
        <initializer>= &quot;/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" line="129" column="35" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classutility_1_1platform_1_1directory_1a59a0b7cd3ed49a84960b2826627f3699" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr psl::string_view</type>
        <definition>constexpr psl::string_view utility::platform::directory::current_symbol</definition>
        <argsstring></argsstring>
        <name>current_symbol</name>
        <initializer>= &quot;.&quot;</initializer>
        <briefdescription>
<para>identifier that signifies the &quot;current location&quot; symbol in a file path. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" line="132" column="35" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classutility_1_1platform_1_1directory_1a4e866de315997588e802a83471488c4e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr psl::string_view</type>
        <definition>constexpr psl::string_view utility::platform::directory::parent_symbol</definition>
        <argsstring></argsstring>
        <name>parent_symbol</name>
        <initializer>= &quot;..&quot;</initializer>
        <briefdescription>
<para>identifier that signifies the &quot;go up one location&quot; symbol in a file path. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" line="135" column="35" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classutility_1_1platform_1_1directory_1ad2b46da7972ab2c2dd9892fbf340898e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::string</type>
        <definition>static psl::string utility::platform::directory::to_unix</definition>
        <argsstring>(psl::string_view path)</argsstring>
        <name>to_unix</name>
        <param>
          <type>psl::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>translated the given path to one that is accepted on Unix systems </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to translate to one that works in unix systems. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a string that <emphasis>should</emphasis> work on unix systems, and satisfies the requirements. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" line="140" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" bodystart="140" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classutility_1_1platform_1_1directory_1ad26e878120bd846873e2034cdca250dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::string</type>
        <definition>static psl::string utility::platform::directory::to_windows</definition>
        <argsstring>(psl::string_view path)</argsstring>
        <name>to_windows</name>
        <param>
          <type>psl::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>translated the given path to one that is accepted on Windows systems </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to translate to one that works in Windows systems. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a string that <emphasis>should</emphasis> work on Windows systems, and satisfies the requirements. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" line="186" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" bodystart="186" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classutility_1_1platform_1_1directory_1aa98b5bd92b90e1cc24ca3f83f28657f1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::string</type>
        <definition>static psl::string utility::platform::directory::to_platform</definition>
        <argsstring>(psl::string_view path)</argsstring>
        <name>to_platform</name>
        <param>
          <type>psl::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>translated the given path to one that is accepted on the current platform </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to translate to one that works on the current platform. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a string that <emphasis>should</emphasis> work on the current platform, and satisfies the requirements. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" line="227" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" bodystart="227" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classutility_1_1platform_1_1directory_1a8842797ee73bd161a70b3f4168405513" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::string</type>
        <definition>static psl::string utility::platform::directory::to_generic</definition>
        <argsstring>(psl::string_view path)</argsstring>
        <name>to_generic</name>
        <param>
          <type>psl::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>translates the given path to the default path encoding that is used across this application as the standard. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to translate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a string that is translated to the application-wide standard encoding (unix). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" line="239" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" bodystart="239" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classutility_1_1platform_1_1directory_1a6ee485a49093a2f072d63901d130fbe5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool utility::platform::directory::is_directory</definition>
        <argsstring>(psl::string_view path)</argsstring>
        <name>is_directory</name>
        <param>
          <type>psl::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>checks if the given path is a directory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case it is a directory. </para>
</simplesect>
<xrefsect id="todo_1_todo000012"><xreftitle>Todo</xreftitle><xrefdescription><para>android platform always returns false. Check if there is a way around this or redesign this. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" line="245" column="13" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" bodystart="245" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classutility_1_1platform_1_1directory_1a76574638d45018baee44461d085d6e5b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::string</type>
        <definition>static psl::string utility::platform::directory::sanitize</definition>
        <argsstring>(psl::string_view path)</argsstring>
        <name>sanitize</name>
        <param>
          <type>psl::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>sanitizes the seperators into the application wide standard one. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to sanitize. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the transformed input path. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" line="257" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" bodystart="257" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classutility_1_1platform_1_1directory_1a4461e834aff50accc70d32afdc07edda" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool utility::platform::directory::erase</definition>
        <argsstring>(psl::string_view path)</argsstring>
        <name>erase</name>
        <param>
          <type>psl::string_view</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>tries to erase/delete the given item this path points to. </para>
        </briefdescription>
        <detaileddescription>
<para>tries to delete the file this path points to, or the folder this path points to. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to what you wish to be erased. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if erasing the target item is successful. </para>
</simplesect>
<xrefsect id="todo_1_todo000013"><xreftitle>Todo</xreftitle><xrefdescription><para>android platform always fails this, is it possible this is not always the case? </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" line="265" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" bodystart="265" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classutility_1_1platform_1_1directory_1abd80fa3d4ae5fdec99138a6f7c3ecbe9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool utility::platform::directory::exists</definition>
        <argsstring>(psl::string_view absolutePath)</argsstring>
        <name>exists</name>
        <param>
          <type>psl::string_view</type>
          <declname>absolutePath</declname>
        </param>
        <briefdescription>
<para>checks if the given path (absolute) points to a directory or not. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">absolutePath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case this path is valid and points to a directory. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" line="276" column="13" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/platform_utils.cpp" bodystart="134" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classutility_1_1platform_1_1directory_1aa769422afdf44485003cf9ff76ef7af3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool utility::platform::directory::create</definition>
        <argsstring>(psl::string_view absolutePath, bool recursive=false)</argsstring>
        <name>create</name>
        <param>
          <type>psl::string_view</type>
          <declname>absolutePath</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>recursive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>creates a directory that satisfies this path. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">absolutePath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to create the directory at. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">recursive</parametername>
</parameternamelist>
<parameterdescription>
<para>should we make all non-existing parent directories as well (true) or fail (false) when the path to the given directory does not exist? </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the path is now fully valid and the directory exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" line="283" column="13" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/platform_utils.cpp" bodystart="153" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classutility_1_1platform_1_1directory_1a7c46f9c700311a3e35a5051b4b490d34" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; psl::string &gt;</type>
        <definition>static std::vector&lt;psl::string&gt; utility::platform::directory::all_files</definition>
        <argsstring>(psl::string_view target_directory, bool recursive)</argsstring>
        <name>all_files</name>
        <param>
          <type>psl::string_view</type>
          <declname>target_directory</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>recursive</declname>
        </param>
        <briefdescription>
<para>gets all files in the target directory, no folders. </para>
        </briefdescription>
        <detaileddescription>
<para>gets all files in the target directory exluding the sub-directories. It however can recursively walk the sub-directories when needed, it will only return their contained items though. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">target_directory</parametername>
</parameternamelist>
<parameterdescription>
<para>the directory to run a search from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">recursive</parametername>
</parameternamelist>
<parameterdescription>
<para>should we also search the sub-directories (true), or not (false). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a container of elements of the type psl::string, of all found items, that are transformed to the generic path format. </para>
</simplesect>
<xrefsect id="todo_1_todo000014"><xreftitle>Todo</xreftitle><xrefdescription><para>on android no search is run. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" line="293" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" bodystart="293" bodyend="334"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>helper class that contains directory specific I/O manipulation methods and platform utilities. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" line="120" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/platform_utils.hpp" bodystart="119" bodyend="335"/>
    <listofallmembers>
      <member refid="classutility_1_1platform_1_1directory_1a7c46f9c700311a3e35a5051b4b490d34" prot="public" virt="non-virtual"><scope>utility::platform::directory</scope><name>all_files</name></member>
      <member refid="classutility_1_1platform_1_1directory_1aa769422afdf44485003cf9ff76ef7af3" prot="public" virt="non-virtual"><scope>utility::platform::directory</scope><name>create</name></member>
      <member refid="classutility_1_1platform_1_1directory_1a59a0b7cd3ed49a84960b2826627f3699" prot="public" virt="non-virtual"><scope>utility::platform::directory</scope><name>current_symbol</name></member>
      <member refid="classutility_1_1platform_1_1directory_1a4461e834aff50accc70d32afdc07edda" prot="public" virt="non-virtual"><scope>utility::platform::directory</scope><name>erase</name></member>
      <member refid="classutility_1_1platform_1_1directory_1abd80fa3d4ae5fdec99138a6f7c3ecbe9" prot="public" virt="non-virtual"><scope>utility::platform::directory</scope><name>exists</name></member>
      <member refid="classutility_1_1platform_1_1directory_1a6ee485a49093a2f072d63901d130fbe5" prot="public" virt="non-virtual"><scope>utility::platform::directory</scope><name>is_directory</name></member>
      <member refid="classutility_1_1platform_1_1directory_1a4e866de315997588e802a83471488c4e" prot="public" virt="non-virtual"><scope>utility::platform::directory</scope><name>parent_symbol</name></member>
      <member refid="classutility_1_1platform_1_1directory_1a76574638d45018baee44461d085d6e5b" prot="public" virt="non-virtual"><scope>utility::platform::directory</scope><name>sanitize</name></member>
      <member refid="classutility_1_1platform_1_1directory_1a293c6efbb2131ab4aa557b42c0c15188" prot="public" virt="non-virtual"><scope>utility::platform::directory</scope><name>seperator</name></member>
      <member refid="classutility_1_1platform_1_1directory_1aacacac096f3a232f497c2f855a0d02e8" prot="public" virt="non-virtual"><scope>utility::platform::directory</scope><name>seperator_platform</name></member>
      <member refid="classutility_1_1platform_1_1directory_1a8842797ee73bd161a70b3f4168405513" prot="public" virt="non-virtual"><scope>utility::platform::directory</scope><name>to_generic</name></member>
      <member refid="classutility_1_1platform_1_1directory_1aa98b5bd92b90e1cc24ca3f83f28657f1" prot="public" virt="non-virtual"><scope>utility::platform::directory</scope><name>to_platform</name></member>
      <member refid="classutility_1_1platform_1_1directory_1ad2b46da7972ab2c2dd9892fbf340898e" prot="public" virt="non-virtual"><scope>utility::platform::directory</scope><name>to_unix</name></member>
      <member refid="classutility_1_1platform_1_1directory_1ad26e878120bd846873e2034cdca250dc" prot="public" virt="non-virtual"><scope>utility::platform::directory</scope><name>to_windows</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
