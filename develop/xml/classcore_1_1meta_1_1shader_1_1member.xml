<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcore_1_1meta_1_1shader_1_1member" kind="class" language="C++" prot="public">
    <compoundname>core::meta::shader::member</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classcore_1_1meta_1_1shader_1_1member_1ae6e4002148765f114da9fe1b5c64547d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class psl::serialization::accessor</definition>
        <argsstring></argsstring>
        <name>psl::serialization::accessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="24" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classcore_1_1meta_1_1shader_1_1member_1a342c1f3d2016263557ac36a97b572dd0" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr psl::string8::view</type>
        <definition>constexpr psl::string8::view core::meta::shader::member::serialization_name</definition>
        <argsstring></argsstring>
        <name>serialization_name</name>
        <initializer>{&quot;MEMBER&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="59" column="37" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcore_1_1meta_1_1shader_1_1member_1a9ec6a345601ed784b3476ee5d0275a11" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;NAME&quot;, psl::string &gt;</type>
        <definition>psl::serialization::property&lt;&quot;NAME&quot;, psl::string&gt; core::meta::shader::member::m_Name</definition>
        <argsstring></argsstring>
        <name>m_Name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="60" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1meta_1_1shader_1_1member_1a0780cf427d56e67487e98c99c22497a4" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;OFFSET&quot;, uint32_t &gt;</type>
        <definition>psl::serialization::property&lt;&quot;OFFSET&quot;, uint32_t&gt; core::meta::shader::member::m_Offset</definition>
        <argsstring></argsstring>
        <name>m_Offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="61" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1meta_1_1shader_1_1member_1afb9883710edb72c47aa1d52f05dc92dc" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;COUNT&quot;, uint32_t &gt;</type>
        <definition>psl::serialization::property&lt;&quot;COUNT&quot;, uint32_t&gt; core::meta::shader::member::m_Count</definition>
        <argsstring></argsstring>
        <name>m_Count</name>
        <initializer>{
			  1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="62" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1meta_1_1shader_1_1member_1a6a6e8cebbcab60dad940a42f73bf8dcb" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;STRIDE&quot;, uint32_t &gt;</type>
        <definition>psl::serialization::property&lt;&quot;STRIDE&quot;, uint32_t&gt; core::meta::shader::member::m_Stride</definition>
        <argsstring></argsstring>
        <name>m_Stride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="64" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1meta_1_1shader_1_1member_1a77a787a935f0c0309786d83ea37b821b" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;MEMBERS&quot;, psl::array&lt; member &gt; &gt;</type>
        <definition>psl::serialization::property&lt;&quot;MEMBERS&quot;, psl::array&lt;member&gt; &gt; core::meta::shader::member::m_Members</definition>
        <argsstring></argsstring>
        <name>m_Members</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="65" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcore_1_1meta_1_1shader_1_1member_1aaa4d8fd6fca22b962b9532e7817e7dee" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>psl::string_view</type>
        <definition>psl::string_view core::meta::shader::member::name</definition>
        <argsstring>() const noexcept</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="27" column="18" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1meta_1_1shader_1_1member_1aa723720d519db0a4150b844f9d1411b4" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void core::meta::shader::member::name</definition>
        <argsstring>(psl::string value) noexcept</argsstring>
        <name>name</name>
        <param>
          <type>psl::string</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="28" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1meta_1_1shader_1_1member_1aadb25fc17764637a56938a675e176fd4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t core::meta::shader::member::offset</definition>
        <argsstring>() const noexcept</argsstring>
        <name>offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="30" column="10" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1meta_1_1shader_1_1member_1a5e7559434fcaeb9fa4d4e03d82f5adbf" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void core::meta::shader::member::offset</definition>
        <argsstring>(uint32_t value) noexcept</argsstring>
        <name>offset</name>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="31" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1meta_1_1shader_1_1member_1a738974519d4c0d13ebdd537b499effb3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t core::meta::shader::member::count</definition>
        <argsstring>() const noexcept</argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="34" column="10" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1meta_1_1shader_1_1member_1a28239b894e232a020652a844221c4b7c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void core::meta::shader::member::count</definition>
        <argsstring>(uint32_t value) noexcept</argsstring>
        <name>count</name>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="35" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1meta_1_1shader_1_1member_1ad5f9a7f31c99a965f625ac077cb40ca4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t core::meta::shader::member::stride</definition>
        <argsstring>() const noexcept</argsstring>
        <name>stride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="38" column="10" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1meta_1_1shader_1_1member_1a2008db1b25e20aef4b23444107ba58a7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void core::meta::shader::member::stride</definition>
        <argsstring>(uint32_t value) noexcept</argsstring>
        <name>stride</name>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="39" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1meta_1_1shader_1_1member_1ad5a6c5e68b1055eb40f65c24b0cf3d35" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t core::meta::shader::member::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="42" column="8" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1meta_1_1shader_1_1member_1a1eff9142a90a83187268b378b9edaeef" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>psl::array_view&lt; member &gt;</type>
        <definition>psl::array_view&lt;member&gt; core::meta::shader::member::members</definition>
        <argsstring>() const noexcept</argsstring>
        <name>members</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="44" column="17" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1meta_1_1shader_1_1member_1a5fe30710bc34f53739c106edb29cbe6a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void core::meta::shader::member::members</definition>
        <argsstring>(psl::array&lt; member &gt; value) noexcept</argsstring>
        <name>members</name>
        <param>
          <type>psl::array&lt; member &gt;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="45" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1meta_1_1shader_1_1member_1a03eda2f207a5d912d4de5a4963df6fd2" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool core::meta::shader::member::is_unconstrained</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_unconstrained</name>
        <briefdescription>
<para>returns true if this is an unconstrained/unsized array </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="48" column="13" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1meta_1_1shader_1_1member_1aac729624a557df19bf58e6e4d6f5c95e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool core::meta::shader::member::is_array</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="50" column="13" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classcore_1_1meta_1_1shader_1_1member_1a1947755326c8daa1305e9661d524f664" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void core::meta::shader::member::serialize</definition>
        <argsstring>(S &amp;s)</argsstring>
        <name>serialize</name>
        <param>
          <type>S &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="54" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="54" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" line="23" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp" bodystart="22" bodyend="66"/>
    <listofallmembers>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1a738974519d4c0d13ebdd537b499effb3" prot="public" virt="non-virtual"><scope>core::meta::shader::member</scope><name>count</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1a28239b894e232a020652a844221c4b7c" prot="public" virt="non-virtual"><scope>core::meta::shader::member</scope><name>count</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1aac729624a557df19bf58e6e4d6f5c95e" prot="public" virt="non-virtual"><scope>core::meta::shader::member</scope><name>is_array</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1a03eda2f207a5d912d4de5a4963df6fd2" prot="public" virt="non-virtual"><scope>core::meta::shader::member</scope><name>is_unconstrained</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1afb9883710edb72c47aa1d52f05dc92dc" prot="private" virt="non-virtual"><scope>core::meta::shader::member</scope><name>m_Count</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1a77a787a935f0c0309786d83ea37b821b" prot="private" virt="non-virtual"><scope>core::meta::shader::member</scope><name>m_Members</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1a9ec6a345601ed784b3476ee5d0275a11" prot="private" virt="non-virtual"><scope>core::meta::shader::member</scope><name>m_Name</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1a0780cf427d56e67487e98c99c22497a4" prot="private" virt="non-virtual"><scope>core::meta::shader::member</scope><name>m_Offset</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1a6a6e8cebbcab60dad940a42f73bf8dcb" prot="private" virt="non-virtual"><scope>core::meta::shader::member</scope><name>m_Stride</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1a1eff9142a90a83187268b378b9edaeef" prot="public" virt="non-virtual"><scope>core::meta::shader::member</scope><name>members</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1a5fe30710bc34f53739c106edb29cbe6a" prot="public" virt="non-virtual"><scope>core::meta::shader::member</scope><name>members</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1aaa4d8fd6fca22b962b9532e7817e7dee" prot="public" virt="non-virtual"><scope>core::meta::shader::member</scope><name>name</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1aa723720d519db0a4150b844f9d1411b4" prot="public" virt="non-virtual"><scope>core::meta::shader::member</scope><name>name</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1aadb25fc17764637a56938a675e176fd4" prot="public" virt="non-virtual"><scope>core::meta::shader::member</scope><name>offset</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1a5e7559434fcaeb9fa4d4e03d82f5adbf" prot="public" virt="non-virtual"><scope>core::meta::shader::member</scope><name>offset</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1ae6e4002148765f114da9fe1b5c64547d" prot="public" virt="non-virtual"><scope>core::meta::shader::member</scope><name>psl::serialization::accessor</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1a342c1f3d2016263557ac36a97b572dd0" prot="private" virt="non-virtual"><scope>core::meta::shader::member</scope><name>serialization_name</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1a1947755326c8daa1305e9661d524f664" prot="private" virt="non-virtual"><scope>core::meta::shader::member</scope><name>serialize</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1ad5a6c5e68b1055eb40f65c24b0cf3d35" prot="public" virt="non-virtual"><scope>core::meta::shader::member</scope><name>size</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1ad5f9a7f31c99a965f625ac077cb40ca4" prot="public" virt="non-virtual"><scope>core::meta::shader::member</scope><name>stride</name></member>
      <member refid="classcore_1_1meta_1_1shader_1_1member_1a2008db1b25e20aef4b23444107ba58a7" prot="public" virt="non-virtual"><scope>core::meta::shader::member</scope><name>stride</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
