<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcore_1_1gfx_1_1drawcall" kind="class" language="C++" prot="public">
    <compoundname>core::gfx::drawcall</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classcore_1_1gfx_1_1drawcall_1aa04b654a0088e3f152457f38b1804aa1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class drawgroup</definition>
        <argsstring></argsstring>
        <name>drawgroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" line="24" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcore_1_1gfx_1_1drawcall_1aaebb6148e8b740185637469f857aa0b7" prot="private" static="no" mutable="no">
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1gfx_1_1bundle" kindref="compound">core::gfx::bundle</ref> &gt;</type>
        <definition>core::resource::handle&lt;core::gfx::bundle&gt; core::gfx::drawcall::m_Bundle</definition>
        <argsstring></argsstring>
        <name>m_Bundle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" line="49" column="24" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1gfx_1_1drawcall_1ab8da9a5e0fd7a85514f7d70a74896bf7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; core::gfx::geometry_t &gt;, size_t &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;core::resource::handle&lt;core::gfx::geometry_t&gt;, size_t&gt; &gt; core::gfx::drawcall::m_Geometry</definition>
        <argsstring></argsstring>
        <name>m_Geometry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" line="50" column="13" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawcall_1ae3029c0ab980445324982bbec973b30a" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>drawcall::drawcall</definition>
        <argsstring>(core::resource::handle&lt; core::gfx::bundle &gt; bundle, const std::vector&lt; core::resource::handle&lt; core::gfx::geometry_t &gt;&gt; &amp;geometry={}) noexcept</argsstring>
        <name>drawcall</name>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1gfx_1_1bundle" kindref="compound">core::gfx::bundle</ref> &gt;</type>
          <declname>bundle</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; core::gfx::geometry_t &gt;&gt; &amp;</type>
          <declname>geometry</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" line="33" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/drawcall.cpp" bodystart="11" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawcall_1a7036874aa974bfb2b75c8325ed541360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::gfx::drawcall::~drawcall</definition>
        <argsstring>()=default</argsstring>
        <name>~drawcall</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawcall_1a97ead315ba1d1c7b1988c26c247ce458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::gfx::drawcall::drawcall</definition>
        <argsstring>(const drawcall &amp;)=default</argsstring>
        <name>drawcall</name>
        <param>
          <type>const drawcall &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawcall_1a70b2f0b200f362632c902b91d84cdc89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::gfx::drawcall::drawcall</definition>
        <argsstring>(drawcall &amp;&amp;)=default</argsstring>
        <name>drawcall</name>
        <param>
          <type>drawcall &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawcall_1a8e793648c1fb61dd08ee90043adea0ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>drawcall &amp;</type>
        <definition>drawcall&amp; core::gfx::drawcall::operator=</definition>
        <argsstring>(const drawcall &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const drawcall &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" line="38" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawcall_1a53fe422412f11abb691b18d7a4e4d7bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>drawcall &amp;</type>
        <definition>drawcall&amp; core::gfx::drawcall::operator=</definition>
        <argsstring>(drawcall &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>drawcall &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" line="39" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawcall_1aec4a0d7f20ebd177599b03423bcdd778" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool drawcall::add</definition>
        <argsstring>(core::resource::handle&lt; core::gfx::geometry_t &gt; geometry) noexcept</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; core::gfx::geometry_t &gt;</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" line="41" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/drawcall.cpp" bodystart="19" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawcall_1aa9d838eb62e8c19e6efed96f119472a4" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool drawcall::remove</definition>
        <argsstring>(core::resource::handle&lt; core::gfx::geometry_t &gt; geometry) noexcept</argsstring>
        <name>remove</name>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; core::gfx::geometry_t &gt;</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" line="42" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/drawcall.cpp" bodystart="37" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawcall_1abaf832b0d3e2cb5a32a5f6555a54f1b9" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool drawcall::remove</definition>
        <argsstring>(const psl::UID &amp;geometry) noexcept</argsstring>
        <name>remove</name>
        <param>
          <type>const <ref refid="structpsl_1_1_u_i_d" kindref="compound">psl::UID</ref> &amp;</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" line="43" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/drawcall.cpp" bodystart="53" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawcall_1a84a16bf7ee242ec62b664be9748e48e9" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void drawcall::bundle</definition>
        <argsstring>(core::resource::handle&lt; core::gfx::bundle &gt; bundle) noexcept</argsstring>
        <name>bundle</name>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1gfx_1_1bundle" kindref="compound">core::gfx::bundle</ref> &gt;</type>
          <declname>bundle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" line="45" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/drawcall.cpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawcall_1a248944f4eb1d5a39d5e3ff1f7913363f" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1gfx_1_1bundle" kindref="compound">core::gfx::bundle</ref> &gt;</type>
        <definition>core::resource::handle&lt; core::gfx::bundle &gt; drawcall::bundle</definition>
        <argsstring>() const noexcept</argsstring>
        <name>bundle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" line="46" column="24" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/drawcall.cpp" bodystart="69" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" line="23" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp" bodystart="22" bodyend="51"/>
    <listofallmembers>
      <member refid="classcore_1_1gfx_1_1drawcall_1aec4a0d7f20ebd177599b03423bcdd778" prot="public" virt="non-virtual"><scope>core::gfx::drawcall</scope><name>add</name></member>
      <member refid="classcore_1_1gfx_1_1drawcall_1a84a16bf7ee242ec62b664be9748e48e9" prot="public" virt="non-virtual"><scope>core::gfx::drawcall</scope><name>bundle</name></member>
      <member refid="classcore_1_1gfx_1_1drawcall_1a248944f4eb1d5a39d5e3ff1f7913363f" prot="public" virt="non-virtual"><scope>core::gfx::drawcall</scope><name>bundle</name></member>
      <member refid="classcore_1_1gfx_1_1drawcall_1ae3029c0ab980445324982bbec973b30a" prot="public" virt="non-virtual"><scope>core::gfx::drawcall</scope><name>drawcall</name></member>
      <member refid="classcore_1_1gfx_1_1drawcall_1a97ead315ba1d1c7b1988c26c247ce458" prot="public" virt="non-virtual"><scope>core::gfx::drawcall</scope><name>drawcall</name></member>
      <member refid="classcore_1_1gfx_1_1drawcall_1a70b2f0b200f362632c902b91d84cdc89" prot="public" virt="non-virtual"><scope>core::gfx::drawcall</scope><name>drawcall</name></member>
      <member refid="classcore_1_1gfx_1_1drawcall_1aa04b654a0088e3f152457f38b1804aa1" prot="private" virt="non-virtual"><scope>core::gfx::drawcall</scope><name>drawgroup</name></member>
      <member refid="classcore_1_1gfx_1_1drawcall_1aaebb6148e8b740185637469f857aa0b7" prot="private" virt="non-virtual"><scope>core::gfx::drawcall</scope><name>m_Bundle</name></member>
      <member refid="classcore_1_1gfx_1_1drawcall_1ab8da9a5e0fd7a85514f7d70a74896bf7" prot="private" virt="non-virtual"><scope>core::gfx::drawcall</scope><name>m_Geometry</name></member>
      <member refid="classcore_1_1gfx_1_1drawcall_1a8e793648c1fb61dd08ee90043adea0ed" prot="public" virt="non-virtual"><scope>core::gfx::drawcall</scope><name>operator=</name></member>
      <member refid="classcore_1_1gfx_1_1drawcall_1a53fe422412f11abb691b18d7a4e4d7bb" prot="public" virt="non-virtual"><scope>core::gfx::drawcall</scope><name>operator=</name></member>
      <member refid="classcore_1_1gfx_1_1drawcall_1aa9d838eb62e8c19e6efed96f119472a4" prot="public" virt="non-virtual"><scope>core::gfx::drawcall</scope><name>remove</name></member>
      <member refid="classcore_1_1gfx_1_1drawcall_1abaf832b0d3e2cb5a32a5f6555a54f1b9" prot="public" virt="non-virtual"><scope>core::gfx::drawcall</scope><name>remove</name></member>
      <member refid="classcore_1_1gfx_1_1drawcall_1a7036874aa974bfb2b75c8325ed541360" prot="public" virt="non-virtual"><scope>core::gfx::drawcall</scope><name>~drawcall</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
