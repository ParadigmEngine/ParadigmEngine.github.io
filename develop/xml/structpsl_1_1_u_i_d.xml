<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structpsl_1_1_u_i_d" kind="struct" language="C++" prot="public" final="yes">
    <compoundname>psl::UID</compoundname>
    <includes refid="meta_8hpp" local="no">meta.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structpsl_1_1_u_i_d_1afd2670ffdff0920df93a8e5b616ea4f9" prot="public" static="no">
        <type>std::array&lt; uint8_t, 16 &gt;</type>
        <definition>using psl::UID::PUID =  std::array&lt;uint8_t, 16&gt;</definition>
        <argsstring></argsstring>
        <name>PUID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="24" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structpsl_1_1_u_i_d_1a1e9498b599d4212c5f7ceb3866e41d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct std::hash&lt; UID &gt;</definition>
        <argsstring></argsstring>
        <name>std::hash&lt; UID &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="318" column="13" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structpsl_1_1_u_i_d_1aeec5559339f7caaa980455d794b41863" prot="public" static="yes" mutable="no">
        <type>const static <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref></type>
        <definition>const UID UID::invalid_uid</definition>
        <argsstring></argsstring>
        <name>invalid_uid</name>
        <initializer>= PUID {0}</initializer>
        <briefdescription>
<para>a global instance that signifies the invalid_uid used by the current runtime. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>on certain platforms this can be a &quot;nulled&quot; <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref>, but prefer checking against this instance to make sure that is actually the case. The invalid <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> will not change during the life of the application. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="84" column="18" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structpsl_1_1_u_i_d_1a720d8013c89d4c892c48c0d35faeb096" prot="private" static="no" mutable="no">
        <type>PUID</type>
        <definition>PUID psl::UID::GUID</definition>
        <argsstring></argsstring>
        <name>GUID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="87" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1a9670693dc3d2d4786581d5f0e850fd6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UID::UID</definition>
        <argsstring>(const psl::string8_t &amp;key)</argsstring>
        <name>UID</name>
        <param>
          <type>const psl::string8_t &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="26" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/meta.cpp" bodystart="8" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1a9441b815ea346351f27b25897953f1b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>psl::UID::UID</definition>
        <argsstring>()=default</argsstring>
        <name>UID</name>
        <briefdescription>
<para>constructor that creates an invalid <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1a2bfd45155d096c7f072b7c3f24bbf0c3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr psl::UID::UID</definition>
        <argsstring>(const PUID &amp;id)</argsstring>
        <name>UID</name>
        <param>
          <type>const PUID &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>a constructor that created a <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> from the internal representation (PUID). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>the internal representation of a <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="32" column="11" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1a97a185a68d0f0844029062005170cda0" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::UID::UID</definition>
        <argsstring>(const UID &amp;other) noexcept=default</argsstring>
        <name>UID</name>
        <param>
          <type>const <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1a5300c9e0ae564194436c6eaccf624075" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::UID::UID</definition>
        <argsstring>(UID &amp;&amp;other) noexcept=default</argsstring>
        <name>UID</name>
        <param>
          <type><ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1a82643d0917e17914a2f1bb7165036800" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> &amp;</type>
        <definition>UID&amp; psl::UID::operator=</definition>
        <argsstring>(const UID &amp;other) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="36" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1ad96a4fd8b906d043ad60deaf5684e9c6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> &amp;</type>
        <definition>UID&amp; psl::UID::operator=</definition>
        <argsstring>(UID &amp;&amp;other) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="37" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1a727f5bbd55fc11ef6b6fb0fa8d71dcf6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const psl::string8_t</type>
        <definition>const psl::string8_t UID::to_string</definition>
        <argsstring>() const</argsstring>
        <name>to_string</name>
        <briefdescription>
<para>creates a string based representation of the owned <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>creates a string based representation of the owned <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> of the form &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot;. <simplesect kind="return"><para>a UTF-8 string based representation of the owned <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="43" column="22" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/meta.cpp" bodystart="17" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1a820a8a7142b88e644e972758cc5f3d0b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UID::operator==</definition>
        <argsstring>(const UID &amp;b) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="62" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/meta.cpp" bodystart="10" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1a9bf41c8bc787966e525054e2a4dde368" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UID::operator!=</definition>
        <argsstring>(const UID &amp;b) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="63" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/meta.cpp" bodystart="11" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1a597761f98deac64ca1f1b00400c8c695" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UID::operator&lt;</definition>
        <argsstring>(const UID &amp;b) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="64" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/meta.cpp" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1a3bebe49070c2c936cdd1c00989ab611a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UID::operator&lt;=</definition>
        <argsstring>(const UID &amp;b) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="65" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/meta.cpp" bodystart="14" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1ab9267c00e757d6a784da6021369e5543" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UID::operator&gt;</definition>
        <argsstring>(const UID &amp;b) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="66" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/meta.cpp" bodystart="13" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1ad9ec5bf7eeb0a2139c5c87d8916f4e93" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UID::operator&gt;=</definition>
        <argsstring>(const UID &amp;b) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="67" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/meta.cpp" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1a498ea07260bcc8f71574f7eda306cd9a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>psl::UID::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>checks if the held <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true in case the held <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> is valid. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="71" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1a1bbb1986e2da5358c057c8806d3cc909" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::UID::invalidate</definition>
        <argsstring>()</argsstring>
        <name>invalidate</name>
        <briefdescription>
<para>invalidates the current <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>If for some reason you want to invalidate this object as being a valid <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref>, then calling this method will set the internal <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> to be equivalent to <ref refid="structpsl_1_1_u_i_d_1aeec5559339f7caaa980455d794b41863" kindref="member">UID::invalid_uid</ref>. This operation is permanent. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="78" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1ad2cf2280f47c832ab7e8636fd08317ce" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref></type>
        <definition>psl::UID psl::UID::from_string</definition>
        <argsstring>(const psl::string8_t &amp;key)</argsstring>
        <name>from_string</name>
        <param>
          <type>const psl::string8_t &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>tries to convert from the given string based representation to a valid <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>when sending a string of the form &quot;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot; or &quot;{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}&quot; to this method, it will parse it and will return a valid <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> instance. Otherwise it will return <ref refid="structpsl_1_1_u_i_d_1aeec5559339f7caaa980455d794b41863" kindref="member">UID::invalid_uid</ref>.<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>a string in the valid format to convert to <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>either a valid <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> based on the key, or <ref refid="structpsl_1_1_u_i_d_1aeec5559339f7caaa980455d794b41863" kindref="member">UID::invalid_uid</ref> if something went wrong. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="51" column="19" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" bodystart="314" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1a649f019b38fd2608f00d1c4c15551cfd" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool psl::UID::valid</definition>
        <argsstring>(const psl::string8_t &amp;key) noexcept</argsstring>
        <name>valid</name>
        <param>
          <type>const psl::string8_t &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>checks the given string if it&apos;s in a valid <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to be checked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the given key is convertible to a <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="56" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1_u_i_d_1aa9f7b5541b9aac957970f7265c657234" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref></type>
        <definition>UID UID::generate</definition>
        <argsstring>()</argsstring>
        <name>generate</name>
        <briefdescription>
<para>generates a <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a valid <ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="60" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/meta.cpp" bodystart="44" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>is an object holding a Unique IDentifier (<ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref>) </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="structpsl_1_1_u_i_d" kindref="compound">UID</ref> generates a unique ID, either through a random number generator, or by using OS provided methods. It is immutable once created. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>psl::UID</label>
        <link refid="structpsl_1_1_u_i_d"/>
        <childnode refid="1" relation="usage">
          <edgelabel>invalid_uid</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" line="21" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/meta.hpp" bodystart="20" bodyend="88"/>
    <listofallmembers>
      <member refid="structpsl_1_1_u_i_d_1ad2cf2280f47c832ab7e8636fd08317ce" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>from_string</name></member>
      <member refid="structpsl_1_1_u_i_d_1aa9f7b5541b9aac957970f7265c657234" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>generate</name></member>
      <member refid="structpsl_1_1_u_i_d_1a720d8013c89d4c892c48c0d35faeb096" prot="private" virt="non-virtual"><scope>psl::UID</scope><name>GUID</name></member>
      <member refid="structpsl_1_1_u_i_d_1aeec5559339f7caaa980455d794b41863" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>invalid_uid</name></member>
      <member refid="structpsl_1_1_u_i_d_1a1bbb1986e2da5358c057c8806d3cc909" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>invalidate</name></member>
      <member refid="structpsl_1_1_u_i_d_1a498ea07260bcc8f71574f7eda306cd9a" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>operator bool</name></member>
      <member refid="structpsl_1_1_u_i_d_1a9bf41c8bc787966e525054e2a4dde368" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>operator!=</name></member>
      <member refid="structpsl_1_1_u_i_d_1a597761f98deac64ca1f1b00400c8c695" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>operator&lt;</name></member>
      <member refid="structpsl_1_1_u_i_d_1a3bebe49070c2c936cdd1c00989ab611a" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>operator&lt;=</name></member>
      <member refid="structpsl_1_1_u_i_d_1a82643d0917e17914a2f1bb7165036800" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>operator=</name></member>
      <member refid="structpsl_1_1_u_i_d_1ad96a4fd8b906d043ad60deaf5684e9c6" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>operator=</name></member>
      <member refid="structpsl_1_1_u_i_d_1a820a8a7142b88e644e972758cc5f3d0b" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>operator==</name></member>
      <member refid="structpsl_1_1_u_i_d_1ab9267c00e757d6a784da6021369e5543" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>operator&gt;</name></member>
      <member refid="structpsl_1_1_u_i_d_1ad9ec5bf7eeb0a2139c5c87d8916f4e93" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>operator&gt;=</name></member>
      <member refid="structpsl_1_1_u_i_d_1afd2670ffdff0920df93a8e5b616ea4f9" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>PUID</name></member>
      <member refid="structpsl_1_1_u_i_d_1a1e9498b599d4212c5f7ceb3866e41d2b" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>std::hash&lt; UID &gt;</name></member>
      <member refid="structpsl_1_1_u_i_d_1a727f5bbd55fc11ef6b6fb0fa8d71dcf6" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>to_string</name></member>
      <member refid="structpsl_1_1_u_i_d_1a9670693dc3d2d4786581d5f0e850fd6b" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>UID</name></member>
      <member refid="structpsl_1_1_u_i_d_1a9441b815ea346351f27b25897953f1b3" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>UID</name></member>
      <member refid="structpsl_1_1_u_i_d_1a2bfd45155d096c7f072b7c3f24bbf0c3" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>UID</name></member>
      <member refid="structpsl_1_1_u_i_d_1a97a185a68d0f0844029062005170cda0" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>UID</name></member>
      <member refid="structpsl_1_1_u_i_d_1a5300c9e0ae564194436c6eaccf624075" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>UID</name></member>
      <member refid="structpsl_1_1_u_i_d_1a649f019b38fd2608f00d1c4c15551cfd" prot="public" virt="non-virtual"><scope>psl::UID</scope><name>valid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
