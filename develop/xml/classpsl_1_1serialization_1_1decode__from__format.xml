<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpsl_1_1serialization_1_1decode__from__format" kind="class" language="C++" prot="public">
    <compoundname>psl::serialization::decode_from_format</compoundname>
    <basecompoundref prot="private" virt="non-virtual">psl::serialization::decoder</basecompoundref>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classpsl_1_1serialization_1_1decode__from__format_1a4f5d92e503da6ae109c0b27535dfaa35" prot="private" static="no">
        <type>decode_from_format</type>
        <definition>using psl::serialization::decode_from_format::codec_t =  decode_from_format</definition>
        <argsstring></argsstring>
        <name>codec_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="311" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1serialization_1_1decode__from__format_1ab8ecdc5aac7d401270bdc6cebb62da47" prot="private" static="no">
        <type>psl::format::container</type>
        <definition>using psl::serialization::decode_from_format::container_t =  psl::format::container</definition>
        <argsstring></argsstring>
        <name>container_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="312" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="312" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpsl_1_1serialization_1_1decode__from__format_1adc09a65dd3ee4db771bf094e4a7c6322" prot="private" static="no" mutable="no">
        <type>psl::format::container &amp;</type>
        <definition>psl::format::container&amp; psl::serialization::decode_from_format::m_Container</definition>
        <argsstring></argsstring>
        <name>m_Container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="624" column="24" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1serialization_1_1decode__from__format_1a93fd2776a7d8cb783cb6955ce471e0ff" prot="private" static="no" mutable="no">
        <type>std::stack&lt; psl::format::handle * &gt;</type>
        <definition>std::stack&lt;psl::format::handle*&gt; psl::serialization::decode_from_format::m_CollectionStack</definition>
        <argsstring></argsstring>
        <name>m_CollectionStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="625" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="625" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1serialization_1_1decode__from__format_1a204267f5c9bfb66dab384fc510bb5e5f" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::uintptr_t, psl::format::handle * &gt;</type>
        <definition>std::unordered_map&lt;std::uintptr_t, psl::format::handle*&gt; psl::serialization::decode_from_format::m_ReferenceNodes</definition>
        <argsstring></argsstring>
        <name>m_ReferenceNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="628" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="628" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1serialization_1_1decode__from__format_1a8378381b80a64d62cd970a94810827e2" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::uintptr_t, psl::format::handle * &gt;</type>
        <definition>std::unordered_map&lt;std::uintptr_t, psl::format::handle*&gt; psl::serialization::decode_from_format::m_PointerNodes</definition>
        <argsstring></argsstring>
        <name>m_PointerNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="629" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="629" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1serialization_1_1decode__from__format_1a7568fc8338359421c0d9cb874ba315e4" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; psl::format::handle *, std::uintptr_t &gt;</type>
        <definition>std::unordered_map&lt;psl::format::handle*, std::uintptr_t&gt; psl::serialization::decode_from_format::m_ReferenceMap</definition>
        <argsstring></argsstring>
        <name>m_ReferenceMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="630" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1serialization_1_1decode__from__format_1a006d4f206c31338f1605cb09ef9f7e56" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; uint64_t, invocable_wrapper_base * &gt;</type>
        <definition>std::unordered_map&lt;uint64_t, invocable_wrapper_base*&gt; psl::serialization::decode_from_format::m_Factory</definition>
        <argsstring></argsstring>
        <name>m_Factory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="633" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="633" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpsl_1_1serialization_1_1decode__from__format_1a97938c4f0daf6708b438878d433470d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>psl::serialization::decode_from_format::decode_from_format</definition>
        <argsstring>(psl::format::container &amp;container, psl::format::handle *root, std::unordered_map&lt; uint64_t, invocable_wrapper_base * &gt; factory={})</argsstring>
        <name>decode_from_format</name>
        <param>
          <type>psl::format::container &amp;</type>
          <declname>container</declname>
        </param>
        <param>
          <type>psl::format::handle *</type>
          <declname>root</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; uint64_t, invocable_wrapper_base * &gt;</type>
          <declname>factory</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="315" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="315" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1decode__from__format_1a5576bfb9db81952f841f2898dd6720cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>auto</type>
            <declname>Name</declname>
            <defname>Name</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>decode_from_format &amp;</type>
        <definition>decode_from_format&amp; psl::serialization::decode_from_format::operator&lt;&lt;</definition>
        <argsstring>(property&lt; Name, T &gt; &amp;property)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>property&lt; Name, T &gt; &amp;</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="322" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="322" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1decode__from__format_1a436e9e30b8d27f7604ef896d0e12bd43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void psl::serialization::decode_from_format::parse</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>parse</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="329" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="329" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1decode__from__format_1af14a5553228abb9ef7311c1329d6872e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>auto</type>
            <declname>Name</declname>
            <defname>Name</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void psl::serialization::decode_from_format::parse</definition>
        <argsstring>(property&lt; Name, T &gt; &amp;property)</argsstring>
        <name>parse</name>
        <param>
          <type>property&lt; Name, T &gt; &amp;</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="336" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="336" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1decode__from__format_1a14da1b6f957abd47c9d3aa092ab33b11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>auto</type>
            <declname>Name</declname>
            <defname>Name</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void psl::serialization::decode_from_format::parse</definition>
        <argsstring>(property&lt; Name, T * &gt; &amp;property)</argsstring>
        <name>parse</name>
        <param>
          <type>property&lt; Name, T * &gt; &amp;</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="344" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="344" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1decode__from__format_1aaa517b1abc2830eea4b4dec1437543d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::serialization::decode_from_format::resolve_references</definition>
        <argsstring>()</argsstring>
        <name>resolve_references</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="358" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="358" bodyend="380"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classpsl_1_1serialization_1_1decode__from__format_1a29cf7815ba3b8df6383cf2f470dc444b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void psl::serialization::decode_from_format::parse_collection</definition>
        <argsstring>(T &amp;property, std::optional&lt; psl::string8::view &gt; override_name={})</argsstring>
        <name>parse_collection</name>
        <param>
          <type>T &amp;</type>
          <declname>property</declname>
        </param>
        <param>
          <type>std::optional&lt; psl::string8::view &gt;</type>
          <declname>override_name</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="384" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="384" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1decode__from__format_1ac6e49290ef6bd928ab074e352f51bfb9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void psl::serialization::decode_from_format::parse_collection</definition>
        <argsstring>(T &amp;property, psl::format::nodes_t index)</argsstring>
        <name>parse_collection</name>
        <param>
          <type>T &amp;</type>
          <declname>property</declname>
        </param>
        <param>
          <type>psl::format::nodes_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="400" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="400" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1decode__from__format_1a35ee9b85299a60c8d6cc363414ddbf02" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* psl::serialization::decode_from_format::create_polymorphic_collection</definition>
        <argsstring>(std::optional&lt; psl::string8::view &gt; override_name={})</argsstring>
        <name>create_polymorphic_collection</name>
        <param>
          <type>std::optional&lt; psl::string8::view &gt;</type>
          <declname>override_name</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="433" column="3" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="433" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1decode__from__format_1a458e0cf3ff38b83d31ad89f5ec380cfe" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void psl::serialization::decode_from_format::parse_internal</definition>
        <argsstring>(T &amp;value, psl::string8::view name)</argsstring>
        <name>parse_internal</name>
        <param>
          <type>T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>psl::string8::view</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="477" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="477" bodyend="622"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="310" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="309" bodyend="634"/>
    <listofallmembers>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1a4f5d92e503da6ae109c0b27535dfaa35" prot="private" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>codec_t</name></member>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1ab8ecdc5aac7d401270bdc6cebb62da47" prot="private" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>container_t</name></member>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1a35ee9b85299a60c8d6cc363414ddbf02" prot="private" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>create_polymorphic_collection</name></member>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1a97938c4f0daf6708b438878d433470d0" prot="public" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>decode_from_format</name></member>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1a93fd2776a7d8cb783cb6955ce471e0ff" prot="private" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>m_CollectionStack</name></member>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1adc09a65dd3ee4db771bf094e4a7c6322" prot="private" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>m_Container</name></member>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1a006d4f206c31338f1605cb09ef9f7e56" prot="private" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>m_Factory</name></member>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1a8378381b80a64d62cd970a94810827e2" prot="private" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>m_PointerNodes</name></member>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1a7568fc8338359421c0d9cb874ba315e4" prot="private" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>m_ReferenceMap</name></member>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1a204267f5c9bfb66dab384fc510bb5e5f" prot="private" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>m_ReferenceNodes</name></member>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1a5576bfb9db81952f841f2898dd6720cb" prot="public" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>operator&lt;&lt;</name></member>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1a436e9e30b8d27f7604ef896d0e12bd43" prot="public" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>parse</name></member>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1af14a5553228abb9ef7311c1329d6872e" prot="public" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>parse</name></member>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1a14da1b6f957abd47c9d3aa092ab33b11" prot="public" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>parse</name></member>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1a29cf7815ba3b8df6383cf2f470dc444b" prot="private" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>parse_collection</name></member>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1ac6e49290ef6bd928ab074e352f51bfb9" prot="private" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>parse_collection</name></member>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1a458e0cf3ff38b83d31ad89f5ec380cfe" prot="private" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>parse_internal</name></member>
      <member refid="classpsl_1_1serialization_1_1decode__from__format_1aaa517b1abc2830eea4b4dec1437543d0" prot="public" virt="non-virtual"><scope>psl::serialization::decode_from_format</scope><name>resolve_references</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
