<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcore_1_1data_1_1sampler__t" kind="class" language="C++" prot="public" final="yes">
    <compoundname>core::data::sampler_t</compoundname>
    <includes refid="data_2sampler_8hpp" local="no">sampler.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classcore_1_1data_1_1sampler__t_1ae6e4002148765f114da9fe1b5c64547d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class psl::serialization::accessor</definition>
        <argsstring></argsstring>
        <name>psl::serialization::accessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="12" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classcore_1_1data_1_1sampler__t_1ae83663fe79295b00dfb7e73ae67e2fb2" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr psl::string8::view</type>
        <definition>constexpr psl::string8::view core::data::sampler_t::serialization_name</definition>
        <argsstring></argsstring>
        <name>serialization_name</name>
        <initializer>{&quot;SAMPLER&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="165" column="37" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcore_1_1data_1_1sampler__t_1af255c75dc96e294e2b5c778453006a43" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;MIPMAPS&quot;, bool &gt;</type>
        <definition>psl::serialization::property&lt;&quot;MIPMAPS&quot;, bool&gt; core::data::sampler_t::m_MipMapped</definition>
        <argsstring></argsstring>
        <name>m_MipMapped</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="167" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1data_1_1sampler__t_1a2ae9014fa966d3219349190aa31d7a15" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;MIP_MODE&quot;, core::gfx::sampler_mipmap_mode &gt;</type>
        <definition>psl::serialization::property&lt;&quot;MIP_MODE&quot;, core::gfx::sampler_mipmap_mode&gt; core::data::sampler_t::m_MipMapMode</definition>
        <argsstring></argsstring>
        <name>m_MipMapMode</name>
        <initializer>=
		  core::gfx::sampler_mipmap_mode::nearest</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="168" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1data_1_1sampler__t_1a5dcf106973a0475dd41f310ade07a25a" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;MIP_BIAS&quot;, float &gt;</type>
        <definition>psl::serialization::property&lt;&quot;MIP_BIAS&quot;, float&gt; core::data::sampler_t::m_MipLodBias</definition>
        <argsstring></argsstring>
        <name>m_MipLodBias</name>
        <initializer>= 0.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="170" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1data_1_1sampler__t_1aaf94a879fd654bb530cdad8a5fa03eb7" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;MIP_MIN&quot;, float &gt;</type>
        <definition>psl::serialization::property&lt;&quot;MIP_MIN&quot;, float&gt; core::data::sampler_t::m_MinLod</definition>
        <argsstring></argsstring>
        <name>m_MinLod</name>
        <initializer>= 0.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="171" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1data_1_1sampler__t_1a1865ef3ae5f1ff04ca8852b85f4f8b25" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;MIP_MAX&quot;, float &gt;</type>
        <definition>psl::serialization::property&lt;&quot;MIP_MAX&quot;, float&gt; core::data::sampler_t::m_MaxLod</definition>
        <argsstring></argsstring>
        <name>m_MaxLod</name>
        <initializer>= 14.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="172" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1data_1_1sampler__t_1ae6ad0498b9a60b6fa25566a5f6142b61" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;ADDRESS_U&quot;, core::gfx::sampler_address_mode &gt;</type>
        <definition>psl::serialization::property&lt;&quot;ADDRESS_U&quot;, core::gfx::sampler_address_mode&gt; core::data::sampler_t::m_AddressModeU</definition>
        <argsstring></argsstring>
        <name>m_AddressModeU</name>
        <initializer>=
		  core::gfx::sampler_address_mode::repeat</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="174" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1data_1_1sampler__t_1a621cf5e3b62236260c18fd4e396f499a" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;ADDRESS_V&quot;, core::gfx::sampler_address_mode &gt;</type>
        <definition>psl::serialization::property&lt;&quot;ADDRESS_V&quot;, core::gfx::sampler_address_mode&gt; core::data::sampler_t::m_AddressModeV</definition>
        <argsstring></argsstring>
        <name>m_AddressModeV</name>
        <initializer>=
		  core::gfx::sampler_address_mode::repeat</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="176" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1data_1_1sampler__t_1a45f69ae4801d700148130a43c0aa6073" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;ADDRESS_W&quot;, core::gfx::sampler_address_mode &gt;</type>
        <definition>psl::serialization::property&lt;&quot;ADDRESS_W&quot;, core::gfx::sampler_address_mode&gt; core::data::sampler_t::m_AddressModeW</definition>
        <argsstring></argsstring>
        <name>m_AddressModeW</name>
        <initializer>=
		  core::gfx::sampler_address_mode::repeat</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="178" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1data_1_1sampler__t_1a7f7033da72da7397cede556f478292d9" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;BORDER_COLOR&quot;, core::gfx::border_color &gt;</type>
        <definition>psl::serialization::property&lt;&quot;BORDER_COLOR&quot;, core::gfx::border_color&gt; core::data::sampler_t::m_BorderColor</definition>
        <argsstring></argsstring>
        <name>m_BorderColor</name>
        <initializer>=
		  core::gfx::border_color::float_transparent_black</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="180" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1data_1_1sampler__t_1a603df826ab9fa69f9ce945bb961d26af" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;ANISOTROPY&quot;, bool &gt;</type>
        <definition>psl::serialization::property&lt;&quot;ANISOTROPY&quot;, bool&gt; core::data::sampler_t::m_AnisotropyEnable</definition>
        <argsstring></argsstring>
        <name>m_AnisotropyEnable</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="183" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1data_1_1sampler__t_1acdedef0852c5724621d30e9bd9eb4e6e" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;MAX_ANISO&quot;, float &gt;</type>
        <definition>psl::serialization::property&lt;&quot;MAX_ANISO&quot;, float&gt; core::data::sampler_t::m_MaxAnisotropy</definition>
        <argsstring></argsstring>
        <name>m_MaxAnisotropy</name>
        <initializer>= 8.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="184" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1data_1_1sampler__t_1aee0f101fbcadf3bbd18844cac05a09e6" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;COMPARE&quot;, bool &gt;</type>
        <definition>psl::serialization::property&lt;&quot;COMPARE&quot;, bool&gt; core::data::sampler_t::m_CompareEnable</definition>
        <argsstring></argsstring>
        <name>m_CompareEnable</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="186" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1data_1_1sampler__t_1a5a4cebba8ca779aeb5c61ddc2a678f24" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;COMPARE_OPERATION&quot;, core::gfx::compare_op &gt;</type>
        <definition>psl::serialization::property&lt;&quot;COMPARE_OPERATION&quot;, core::gfx::compare_op&gt; core::data::sampler_t::m_CompareOp</definition>
        <argsstring></argsstring>
        <name>m_CompareOp</name>
        <initializer>=
		  core::gfx::compare_op::never</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="187" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1data_1_1sampler__t_1ab8cc2edb77d6175fc2f602486cd78f95" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;FILTER_MIN&quot;, core::gfx::filter &gt;</type>
        <definition>psl::serialization::property&lt;&quot;FILTER_MIN&quot;, core::gfx::filter&gt; core::data::sampler_t::m_MinFilter</definition>
        <argsstring></argsstring>
        <name>m_MinFilter</name>
        <initializer>= core::gfx::filter::linear</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="190" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1data_1_1sampler__t_1a907b183dc696099b1a1b89a10c7bb93b" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;FILTER_MAX&quot;, core::gfx::filter &gt;</type>
        <definition>psl::serialization::property&lt;&quot;FILTER_MAX&quot;, core::gfx::filter&gt; core::data::sampler_t::m_MaxFilter</definition>
        <argsstring></argsstring>
        <name>m_MaxFilter</name>
        <initializer>= core::gfx::filter::linear</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="191" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1data_1_1sampler__t_1a73a23e036f186356fac787bf00ad5d38" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;NORMALIZED_COORDINATES&quot;, bool &gt;</type>
        <definition>psl::serialization::property&lt;&quot;NORMALIZED_COORDINATES&quot;, bool&gt; core::data::sampler_t::m_NormalizedCoordinates</definition>
        <argsstring></argsstring>
        <name>m_NormalizedCoordinates</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="193" column="30" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="193" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a54cf1c32f02e5a97f759d2d7a16b35c9" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>sampler_t::sampler_t</definition>
        <argsstring>(core::resource::cache_t &amp;cache, const core::resource::metadata &amp;metaData, psl::meta::file *metaFile) noexcept</argsstring>
        <name>sampler_t</name>
        <param>
          <type>core::resource::cache_t &amp;</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const <ref refid="structcore_1_1resource_1_1metadata" kindref="compound">core::resource::metadata</ref> &amp;</type>
          <declname>metaData</declname>
        </param>
        <param>
          <type><ref refid="classpsl_1_1meta_1_1file" kindref="compound">psl::meta::file</ref> *</type>
          <declname>metaFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="15" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1ae2a8ed18cf2d6514eaf082e70306de94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::data::sampler_t::~sampler_t</definition>
        <argsstring>()=default</argsstring>
        <name>~sampler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a5bf4de99d8e0323b9bca40f9b1dc5f3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::data::sampler_t::sampler_t</definition>
        <argsstring>(const sampler_t &amp;other)=delete</argsstring>
        <name>sampler_t</name>
        <param>
          <type>const <ref refid="classcore_1_1data_1_1sampler__t" kindref="compound">sampler_t</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a90a75871a2e8205f27af82264479a860" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::data::sampler_t::sampler_t</definition>
        <argsstring>(sampler_t &amp;&amp;other)=delete</argsstring>
        <name>sampler_t</name>
        <param>
          <type><ref refid="classcore_1_1data_1_1sampler__t" kindref="compound">sampler_t</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a948e906ece6b93b35e4fae0129c72342" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcore_1_1data_1_1sampler__t" kindref="compound">sampler_t</ref> &amp;</type>
        <definition>sampler_t&amp; core::data::sampler_t::operator=</definition>
        <argsstring>(const sampler_t &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classcore_1_1data_1_1sampler__t" kindref="compound">sampler_t</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="21" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a0634e6eb861b74e4b50fa5f8bc800fcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcore_1_1data_1_1sampler__t" kindref="compound">sampler_t</ref> &amp;</type>
        <definition>sampler_t&amp; core::data::sampler_t::operator=</definition>
        <argsstring>(sampler_t &amp;&amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classcore_1_1data_1_1sampler__t" kindref="compound">sampler_t</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="22" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a99a4c1d2bcc15290d438b19f547497c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sampler_t::mipmaps</definition>
        <argsstring>() const</argsstring>
        <name>mipmaps</name>
        <briefdescription>
<para>returns if mipmapping is enabled or not </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>if mipmapping is enabled or not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="26" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1ad254be2aa17fa473d9eb6a28420e2d8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::mipmaps</definition>
        <argsstring>(bool value)</argsstring>
        <name>mipmaps</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>enables or disables mipmapping on this sampler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>true for enabling mipmapping. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="29" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a8effea61912629b90bba6f483a7fc65e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float sampler_t::mip_bias</definition>
        <argsstring>() const</argsstring>
        <name>mip_bias</name>
        <briefdescription>
<para>returns the mip_bias that might be present on this sampler. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the mip_bias that might be present on this sampler. </para>
</simplesect>
<simplesect kind="note"><para><ref refid="classcore_1_1data_1_1sampler__t_1a99a4c1d2bcc15290d438b19f547497c1" kindref="member">mipmaps()</ref> should be true for this to have an effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="34" column="7" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a0368167ed286f535ce7066b887838085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::mip_bias</definition>
        <argsstring>(float value)</argsstring>
        <name>mip_bias</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>sets the mip bias when sampling mipmaps. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the bias to apply to mipmap sampling. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para><ref refid="classcore_1_1data_1_1sampler__t_1a99a4c1d2bcc15290d438b19f547497c1" kindref="member">mipmaps()</ref> should be true for this to have an effect. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="38" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a15261c7a4e1eb460bf578a19339b9fc7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>core::gfx::sampler_mipmap_mode</type>
        <definition>gfx::sampler_mipmap_mode sampler_t::mip_mode</definition>
        <argsstring>() const</argsstring>
        <name>mip_mode</name>
        <briefdescription>
<para>returns the mode for mipmap texture lookups. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the mode for mipmap texture lookups. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="42" column="32" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a195286f174e5947f0042f9c997423a84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::mip_mode</definition>
        <argsstring>(core::gfx::sampler_mipmap_mode value)</argsstring>
        <name>mip_mode</name>
        <param>
          <type>core::gfx::sampler_mipmap_mode</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>sets the mode for mipmap texture lookups. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the mode to change to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="46" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a44b2d8b8491adb30aabcd0534d6938f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float sampler_t::mip_minlod</definition>
        <argsstring>() const</argsstring>
        <name>mip_minlod</name>
        <briefdescription>
<para>returns the minimal mipmap LOD this instance has set. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the minimal mipmap LOD this instance has set. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="50" column="7" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a5eb3f322de4a02f84f87b0b61ab738f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::mip_minlod</definition>
        <argsstring>(float value)</argsstring>
        <name>mip_minlod</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>sets the minimal mipmap LOD offset for this instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="54" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1ace67337e9b24c8dd56a522d32f77ca70" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float sampler_t::mip_maxlod</definition>
        <argsstring>() const</argsstring>
        <name>mip_maxlod</name>
        <briefdescription>
<para>returns the max mipmap LOD this instance has set. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the max mipmap LOD this instance has set. </para>
</simplesect>
<xrefsect id="todo_1_todo000004"><xreftitle>Todo</xreftitle><xrefdescription><para>this value is currently ignored in core::core::ivk::sampler_t. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="59" column="7" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1ad2d81cf6cb28a272eacf0fbbf98b1b0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::mip_maxlod</definition>
        <argsstring>(float value)</argsstring>
        <name>mip_maxlod</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>sets the minimal mipmap max LOD for this instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to set. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="62" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a389bea496611d8bbebe7c39447745f14" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>core::gfx::sampler_address_mode</type>
        <definition>gfx::sampler_address_mode sampler_t::addressU</definition>
        <argsstring>() const</argsstring>
        <name>addressU</name>
        <briefdescription>
<para>returns how this instances deals with texture tiling in the U-axis. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>how this instances deals with texture tiling in the U-axis. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="66" column="33" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1ad1e49988b27d9d699c813cdd71ee529e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::addressU</definition>
        <argsstring>(core::gfx::sampler_address_mode value)</argsstring>
        <name>addressU</name>
        <param>
          <type>core::gfx::sampler_address_mode</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>sets how this instance should deal with texture tiling in the U-axis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the mode to set this instance to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="69" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a1da95da7879280c55166811f36c88af0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>core::gfx::sampler_address_mode</type>
        <definition>gfx::sampler_address_mode sampler_t::addressV</definition>
        <argsstring>() const</argsstring>
        <name>addressV</name>
        <briefdescription>
<para>returns how this instances deals with texture tiling in the V-axis. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>how this instances deals with texture tiling in the V-axis. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="73" column="33" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a3e2f8df44cef4d7d52104924d0b3f757" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::addressV</definition>
        <argsstring>(core::gfx::sampler_address_mode value)</argsstring>
        <name>addressV</name>
        <param>
          <type>core::gfx::sampler_address_mode</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>sets how this instance should deal with texture tiling in the V-axis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the mode to set this instance to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="76" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a245249ae46a9a1ef00d576b387d3a6f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>core::gfx::sampler_address_mode</type>
        <definition>gfx::sampler_address_mode sampler_t::addressW</definition>
        <argsstring>() const</argsstring>
        <name>addressW</name>
        <briefdescription>
<para>returns how this instances deals with texture tiling in the W-axis. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>how this instances deals with texture tiling in the W-axis. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="80" column="33" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a4c101776de82fdf817906cc90d1f58bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::addressW</definition>
        <argsstring>(core::gfx::sampler_address_mode value)</argsstring>
        <name>addressW</name>
        <param>
          <type>core::gfx::sampler_address_mode</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>sets how this instance should deal with texture tiling in the W-axis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the mode to set this instance to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="83" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a04276de92686b3a6686595e153a69804" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::address</definition>
        <argsstring>(core::gfx::sampler_address_mode value) noexcept</argsstring>
        <name>address</name>
        <param>
          <type>core::gfx::sampler_address_mode</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="85" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a7019e38d55578f0445bdd0d18f651c57" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::address</definition>
        <argsstring>(core::gfx::sampler_address_mode u, core::gfx::sampler_address_mode v, core::gfx::sampler_address_mode w) noexcept</argsstring>
        <name>address</name>
        <param>
          <type>core::gfx::sampler_address_mode</type>
          <declname>u</declname>
        </param>
        <param>
          <type>core::gfx::sampler_address_mode</type>
          <declname>v</declname>
        </param>
        <param>
          <type>core::gfx::sampler_address_mode</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="86" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="46" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a6d74233c5e92367a1343fa8d5985d9d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>core::gfx::border_color</type>
        <definition>gfx::border_color sampler_t::border_color</definition>
        <argsstring>() const</argsstring>
        <name>border_color</name>
        <briefdescription>
<para>returns the border color that will be used during texture lookups. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the border color that will be used during texture lookups. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="91" column="25" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a6f10ca85e2b9b6ef76ee99b37ff1bee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::border_color</definition>
        <argsstring>(core::gfx::border_color value)</argsstring>
        <name>border_color</name>
        <param>
          <type>core::gfx::border_color</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>sets the border color that should be used during texture lookups. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the new border color value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="95" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1afadbce6da831055d2c609ced1ead86ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sampler_t::anisotropic_filtering</definition>
        <argsstring>() const</argsstring>
        <name>anisotropic_filtering</name>
        <briefdescription>
<para>returns if anisotropic filtering is enabled. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>if anisotropic filtering is enabled. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="99" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a3ed49d83c248405f594f572fbb708cca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::anisotropic_filtering</definition>
        <argsstring>(bool value)</argsstring>
        <name>anisotropic_filtering</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>call this to enable or disable anisotropic filtering. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>set to true to enable anisotropic filtering. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>if the current <ref refid="classcore_1_1ivk_1_1context" kindref="compound">core::ivk::context</ref> doesn&apos;t support anisotropic filtering, then this value will be ingored upstream (core::core::ivk::sampler_t). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="105" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1ac7dfb67005aa203f296e3e576e315ec9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float sampler_t::max_anisotropy</definition>
        <argsstring>() const</argsstring>
        <name>max_anisotropy</name>
        <briefdescription>
<para>returns the max anistropic value for this instance. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the max anistropic value for this instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="109" column="7" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1ab23aa4a8d62db40d680dbce1c0e890c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::max_anisotropy</definition>
        <argsstring>(float value)</argsstring>
        <name>max_anisotropy</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>sets the max anistropic value for this instance. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to set the max anisotropic value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="112" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1ae833716f38eb04b802575c92dd7fd9ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sampler_t::compare_mode</definition>
        <argsstring>() const</argsstring>
        <name>compare_mode</name>
        <briefdescription>
<para>returns if compare operations have been enabled or not. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>if compare operations have been enabled or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="116" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1ad1534b0e40eb01cd61e1b6181eedc8ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::compare_mode</definition>
        <argsstring>(bool value)</argsstring>
        <name>compare_mode</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>enables or disables compare ops. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>set to true to enable compare ops. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="119" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a22cbd56ee7897e681e8d6fe8a19011ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>core::gfx::compare_op</type>
        <definition>gfx::compare_op sampler_t::compare_op</definition>
        <argsstring>() const</argsstring>
        <name>compare_op</name>
        <briefdescription>
<para>returns what compare op would be used if <ref refid="classcore_1_1data_1_1sampler__t_1ae833716f38eb04b802575c92dd7fd9ca" kindref="member">compare_mode()</ref> is true. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>what compare op would be used if <ref refid="classcore_1_1data_1_1sampler__t_1ae833716f38eb04b802575c92dd7fd9ca" kindref="member">compare_mode()</ref> is true. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="123" column="23" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1aab7948823d39f7b057bd03a78df0f1da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::compare_op</definition>
        <argsstring>(core::gfx::compare_op value)</argsstring>
        <name>compare_op</name>
        <param>
          <type>core::gfx::compare_op</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>sets the compare op to a new value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the new compare op to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para><ref refid="classcore_1_1data_1_1sampler__t_1a22cbd56ee7897e681e8d6fe8a19011ca" kindref="member">compare_op()</ref> will only be used if <ref refid="classcore_1_1data_1_1sampler__t_1ae833716f38eb04b802575c92dd7fd9ca" kindref="member">compare_mode()</ref> is true. You can still set this value regardless however. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="128" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1ac4c54b94de7058efc5cba15dc5c1c6fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>core::gfx::filter</type>
        <definition>gfx::filter sampler_t::filter_min</definition>
        <argsstring>() const</argsstring>
        <name>filter_min</name>
        <briefdescription>
<para>returns the filtering mode to use when dealing with minification. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the filtering mode to use when dealing with minification. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="132" column="19" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a9f04ea7c197d542743dc093fd3191568" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::filter_min</definition>
        <argsstring>(core::gfx::filter value)</argsstring>
        <name>filter_min</name>
        <param>
          <type>core::gfx::filter</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>sets the filtering mode to use when dealing with minification. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the new filter mode to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="136" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1aa6ed4ba35c21ce7fc44411485aa92965" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>core::gfx::filter</type>
        <definition>gfx::filter sampler_t::filter_max</definition>
        <argsstring>() const</argsstring>
        <name>filter_max</name>
        <briefdescription>
<para>returns the filtering mode to use when dealing with magnification. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the filtering mode to use when dealing with magnification. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="140" column="19" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a1fa3a46c92a8f22417fb1df966370fdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::filter_max</definition>
        <argsstring>(core::gfx::filter value)</argsstring>
        <name>filter_max</name>
        <param>
          <type>core::gfx::filter</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>sets the filtering mode to use when dealing with magnification. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the new filter mode to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="143" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a95ff1293a765ba49a903232e0c399387" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sampler_t::normalized_coordinates</definition>
        <argsstring>() const</argsstring>
        <name>normalized_coordinates</name>
        <briefdescription>
<para>returns if the coordinates for this sampler will be normalized or not. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>if the coordinates for this sampler will be normalized or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="147" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a8a0797c16364d3462cb8df84bb86bcb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sampler_t::normalized_coordinates</definition>
        <argsstring>(bool value)</argsstring>
        <name>normalized_coordinates</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>enables or disables coordinate normalization when this sampler is used. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>enables or disables the behaviour. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="150" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/data/sampler.cpp" bodystart="77" bodyend="77"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classcore_1_1data_1_1sampler__t_1a13f7d179e35df6843b128de9b7037799" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void core::data::sampler_t::serialize</definition>
        <argsstring>(S &amp;serializer)</argsstring>
        <name>serialize</name>
        <param>
          <type>S &amp;</type>
          <declname>serializer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="154" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="154" bodyend="163"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>describes the data to build a <ref refid="classcore_1_1ivk_1_1sampler__t" kindref="compound">core::ivk::sampler_t</ref> instance </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" line="11" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/data/sampler.hpp" bodystart="10" bodyend="194"/>
    <listofallmembers>
      <member refid="classcore_1_1data_1_1sampler__t_1a04276de92686b3a6686595e153a69804" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>address</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a7019e38d55578f0445bdd0d18f651c57" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>address</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a389bea496611d8bbebe7c39447745f14" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>addressU</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1ad1e49988b27d9d699c813cdd71ee529e" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>addressU</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a1da95da7879280c55166811f36c88af0" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>addressV</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a3e2f8df44cef4d7d52104924d0b3f757" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>addressV</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a245249ae46a9a1ef00d576b387d3a6f9" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>addressW</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a4c101776de82fdf817906cc90d1f58bb" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>addressW</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1afadbce6da831055d2c609ced1ead86ed" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>anisotropic_filtering</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a3ed49d83c248405f594f572fbb708cca" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>anisotropic_filtering</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a6d74233c5e92367a1343fa8d5985d9d3" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>border_color</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a6f10ca85e2b9b6ef76ee99b37ff1bee3" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>border_color</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1ae833716f38eb04b802575c92dd7fd9ca" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>compare_mode</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1ad1534b0e40eb01cd61e1b6181eedc8ac" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>compare_mode</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a22cbd56ee7897e681e8d6fe8a19011ca" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>compare_op</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1aab7948823d39f7b057bd03a78df0f1da" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>compare_op</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1aa6ed4ba35c21ce7fc44411485aa92965" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>filter_max</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a1fa3a46c92a8f22417fb1df966370fdf" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>filter_max</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1ac4c54b94de7058efc5cba15dc5c1c6fc" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>filter_min</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a9f04ea7c197d542743dc093fd3191568" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>filter_min</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1ae6ad0498b9a60b6fa25566a5f6142b61" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>m_AddressModeU</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a621cf5e3b62236260c18fd4e396f499a" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>m_AddressModeV</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a45f69ae4801d700148130a43c0aa6073" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>m_AddressModeW</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a603df826ab9fa69f9ce945bb961d26af" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>m_AnisotropyEnable</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a7f7033da72da7397cede556f478292d9" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>m_BorderColor</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1aee0f101fbcadf3bbd18844cac05a09e6" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>m_CompareEnable</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a5a4cebba8ca779aeb5c61ddc2a678f24" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>m_CompareOp</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1acdedef0852c5724621d30e9bd9eb4e6e" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>m_MaxAnisotropy</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a907b183dc696099b1a1b89a10c7bb93b" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>m_MaxFilter</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a1865ef3ae5f1ff04ca8852b85f4f8b25" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>m_MaxLod</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1ab8cc2edb77d6175fc2f602486cd78f95" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>m_MinFilter</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1aaf94a879fd654bb530cdad8a5fa03eb7" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>m_MinLod</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a5dcf106973a0475dd41f310ade07a25a" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>m_MipLodBias</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a2ae9014fa966d3219349190aa31d7a15" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>m_MipMapMode</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1af255c75dc96e294e2b5c778453006a43" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>m_MipMapped</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a73a23e036f186356fac787bf00ad5d38" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>m_NormalizedCoordinates</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1ac7dfb67005aa203f296e3e576e315ec9" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>max_anisotropy</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1ab23aa4a8d62db40d680dbce1c0e890c7" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>max_anisotropy</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a8effea61912629b90bba6f483a7fc65e" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>mip_bias</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a0368167ed286f535ce7066b887838085" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>mip_bias</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1ace67337e9b24c8dd56a522d32f77ca70" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>mip_maxlod</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1ad2d81cf6cb28a272eacf0fbbf98b1b0e" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>mip_maxlod</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a44b2d8b8491adb30aabcd0534d6938f0" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>mip_minlod</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a5eb3f322de4a02f84f87b0b61ab738f4" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>mip_minlod</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a15261c7a4e1eb460bf578a19339b9fc7" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>mip_mode</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a195286f174e5947f0042f9c997423a84" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>mip_mode</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a99a4c1d2bcc15290d438b19f547497c1" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>mipmaps</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1ad254be2aa17fa473d9eb6a28420e2d8f" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>mipmaps</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a95ff1293a765ba49a903232e0c399387" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>normalized_coordinates</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a8a0797c16364d3462cb8df84bb86bcb5" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>normalized_coordinates</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a948e906ece6b93b35e4fae0129c72342" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>operator=</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a0634e6eb861b74e4b50fa5f8bc800fcb" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>operator=</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1ae6e4002148765f114da9fe1b5c64547d" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>psl::serialization::accessor</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a54cf1c32f02e5a97f759d2d7a16b35c9" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>sampler_t</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a5bf4de99d8e0323b9bca40f9b1dc5f3d" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>sampler_t</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a90a75871a2e8205f27af82264479a860" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>sampler_t</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1ae83663fe79295b00dfb7e73ae67e2fb2" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>serialization_name</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1a13f7d179e35df6843b128de9b7037799" prot="private" virt="non-virtual"><scope>core::data::sampler_t</scope><name>serialize</name></member>
      <member refid="classcore_1_1data_1_1sampler__t_1ae2a8ed18cf2d6514eaf082e70306de94" prot="public" virt="non-virtual"><scope>core::data::sampler_t</scope><name>~sampler_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
