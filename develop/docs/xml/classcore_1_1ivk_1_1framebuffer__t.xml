<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcore_1_1ivk_1_1framebuffer__t" kind="class" language="C++" prot="public" final="yes">
    <compoundname>core::ivk::framebuffer_t</compoundname>
    <includes refid="vk_2framebuffer_8hpp" local="no">framebuffer.hpp</includes>
    <innerclass refid="structcore_1_1ivk_1_1framebuffer__t_1_1binding" prot="public">core::ivk::framebuffer_t::binding</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classcore_1_1ivk_1_1framebuffer__t_1afaf91c1672d871a055dfc1ad2968295f" prot="public" static="no">
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1ivk_1_1texture__t" kindref="compound">core::ivk::texture_t</ref> &gt;</type>
        <definition>using core::ivk::framebuffer_t::texture_handle =  core::resource::handle&lt;core::ivk::texture_t&gt;</definition>
        <argsstring></argsstring>
        <name>texture_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="29" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcore_1_1ivk_1_1framebuffer__t_1af79eafaab4584b62a8818ef0a91a44e5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structcore_1_1ivk_1_1framebuffer__t_1_1binding" kindref="compound">binding</ref> &gt;</type>
        <definition>std::vector&lt;binding&gt; core::ivk::framebuffer_t::m_Bindings</definition>
        <argsstring></argsstring>
        <name>m_Bindings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="82" column="13" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1framebuffer__t_1ad09d78027c419e63c71cd19a70940b5c" prot="private" static="no" mutable="no">
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1ivk_1_1sampler__t" kindref="compound">core::ivk::sampler_t</ref> &gt;</type>
        <definition>core::resource::handle&lt;core::ivk::sampler_t&gt; core::ivk::framebuffer_t::m_Sampler</definition>
        <argsstring></argsstring>
        <name>m_Sampler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="83" column="24" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1framebuffer__t_1a11426a18e7d5910a0a18649e11b998eb" prot="private" static="no" mutable="no">
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1data_1_1framebuffer__t" kindref="compound">core::data::framebuffer_t</ref> &gt;</type>
        <definition>core::resource::handle&lt;core::data::framebuffer_t&gt; core::ivk::framebuffer_t::m_Data</definition>
        <argsstring></argsstring>
        <name>m_Data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="84" column="24" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1framebuffer__t_1ad96c297f76cbd9404c238a969c9efe7d" prot="private" static="no" mutable="no">
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1ivk_1_1context" kindref="compound">core::ivk::context</ref> &gt;</type>
        <definition>core::resource::handle&lt;core::ivk::context&gt; core::ivk::framebuffer_t::m_Context</definition>
        <argsstring></argsstring>
        <name>m_Context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="85" column="24" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1framebuffer__t_1a661f450a4b7c1c2732d1a117e970ee22" prot="private" static="no" mutable="no">
        <type>vk::RenderPass</type>
        <definition>vk::RenderPass core::ivk::framebuffer_t::m_RenderPass</definition>
        <argsstring></argsstring>
        <name>m_RenderPass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="86" column="16" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1framebuffer__t_1a8da73bd3327fc82812493546c74514c0" prot="private" static="no" mutable="no">
        <type>std::vector&lt; vk::Framebuffer &gt;</type>
        <definition>std::vector&lt;vk::Framebuffer&gt; core::ivk::framebuffer_t::m_Framebuffers</definition>
        <argsstring></argsstring>
        <name>m_Framebuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="87" column="13" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1framebuffer__t_1a7eafdbf3b8a4b445d360a13eb78a4833" prot="private" static="no" mutable="no">
        <type>vk::DescriptorImageInfo</type>
        <definition>vk::DescriptorImageInfo core::ivk::framebuffer_t::m_Descriptor</definition>
        <argsstring></argsstring>
        <name>m_Descriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="88" column="25" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcore_1_1ivk_1_1framebuffer__t_1ac4e18a39d84b4912a5c34009c79d6c29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>framebuffer_t::framebuffer_t</definition>
        <argsstring>(core::resource::cache_t &amp;cache, const core::resource::metadata &amp;metaData, psl::meta::file *metaFile, core::resource::handle&lt; core::ivk::context &gt; context, core::resource::handle&lt; core::data::framebuffer_t &gt; data)</argsstring>
        <name>framebuffer_t</name>
        <param>
          <type>core::resource::cache_t &amp;</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const <ref refid="structcore_1_1resource_1_1metadata" kindref="compound">core::resource::metadata</ref> &amp;</type>
          <declname>metaData</declname>
        </param>
        <param>
          <type><ref refid="classpsl_1_1meta_1_1file" kindref="compound">psl::meta::file</ref> *</type>
          <declname>metaFile</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1ivk_1_1context" kindref="compound">core::ivk::context</ref> &gt;</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1data_1_1framebuffer__t" kindref="compound">core::data::framebuffer_t</ref> &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="45" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/framebuffer.cpp" bodystart="15" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1framebuffer__t_1a69300cdf02b6177373ed6ba5252d099c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::ivk::framebuffer_t::framebuffer_t</definition>
        <argsstring>(const framebuffer_t &amp;)=delete</argsstring>
        <name>framebuffer_t</name>
        <param>
          <type>const <ref refid="classcore_1_1ivk_1_1framebuffer__t" kindref="compound">framebuffer_t</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1framebuffer__t_1af31c69cde6292bd43b19c286505c08a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::ivk::framebuffer_t::framebuffer_t</definition>
        <argsstring>(framebuffer_t &amp;&amp;)=delete</argsstring>
        <name>framebuffer_t</name>
        <param>
          <type><ref refid="classcore_1_1ivk_1_1framebuffer__t" kindref="compound">framebuffer_t</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1framebuffer__t_1ad2bf57e240eb8d04ffcd29d85be33e7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcore_1_1ivk_1_1framebuffer__t" kindref="compound">framebuffer_t</ref> &amp;</type>
        <definition>framebuffer_t&amp; core::ivk::framebuffer_t::operator=</definition>
        <argsstring>(const framebuffer_t &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classcore_1_1ivk_1_1framebuffer__t" kindref="compound">framebuffer_t</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="52" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1framebuffer__t_1ad336506a9595eabe5b21b8611bf41dae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcore_1_1ivk_1_1framebuffer__t" kindref="compound">framebuffer_t</ref> &amp;</type>
        <definition>framebuffer_t&amp; core::ivk::framebuffer_t::operator=</definition>
        <argsstring>(framebuffer_t &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classcore_1_1ivk_1_1framebuffer__t" kindref="compound">framebuffer_t</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="53" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1framebuffer__t_1a0a5f4d824ed01953d8019003ccbd3bc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>framebuffer_t::~framebuffer_t</definition>
        <argsstring>()</argsstring>
        <name>~framebuffer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="54" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/framebuffer.cpp" bodystart="150" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1framebuffer__t_1afebba2ecb3aa4eb8384f5343c0086cfa" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classcore_1_1resource_1_1handle" kindref="compound">texture_handle</ref> &gt;</type>
        <definition>std::vector&lt; framebuffer_t::texture_handle &gt; framebuffer_t::attachments</definition>
        <argsstring>(uint32_t index=0u) const noexcept</argsstring>
        <name>attachments</name>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
          <defval>0u</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>all attachments for a specific index </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index to return the attachments for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="58" column="13" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/framebuffer.cpp" bodystart="191" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1framebuffer__t_1abe5268c03d9330ed481818fe1fd0ce20" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classcore_1_1resource_1_1handle" kindref="compound">texture_handle</ref> &gt;</type>
        <definition>std::vector&lt; framebuffer_t::texture_handle &gt; framebuffer_t::color_attachments</definition>
        <argsstring>(uint32_t index=0u) const noexcept</argsstring>
        <name>color_attachments</name>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
          <defval>0u</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>all color attachments for a specific index </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index to return the attachments for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="62" column="13" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/framebuffer.cpp" bodystart="202" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1framebuffer__t_1a9b1e84b15a1f4633cc54c71227658228" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1ivk_1_1sampler__t" kindref="compound">core::ivk::sampler_t</ref> &gt;</type>
        <definition>core::resource::handle&lt; core::ivk::sampler_t &gt; framebuffer_t::sampler</definition>
        <argsstring>() const noexcept</argsstring>
        <name>sampler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the sampler resource associated with this framebuffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="65" column="24" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/framebuffer.cpp" bodystart="218" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1framebuffer__t_1aa8afee9525d95c660fbcd15f1e677db3" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1data_1_1framebuffer__t" kindref="compound">core::data::framebuffer_t</ref> &gt;</type>
        <definition>core::resource::handle&lt; core::data::framebuffer_t &gt; framebuffer_t::data</definition>
        <argsstring>() const noexcept</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the data used to create this framebuffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="67" column="24" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/framebuffer.cpp" bodystart="219" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1framebuffer__t_1ab7ebb265d388ff95c6e334869c8c2041" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>vk::RenderPass</type>
        <definition>vk::RenderPass framebuffer_t::render_pass</definition>
        <argsstring>() const noexcept</argsstring>
        <name>render_pass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the renderpass this framebuffer created and manages. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="69" column="16" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/framebuffer.cpp" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1framebuffer__t_1a4ff2a0878565c85a50f5c036926f7fce" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; vk::Framebuffer &gt; &amp;</type>
        <definition>const std::vector&lt; vk::Framebuffer &gt; &amp; framebuffer_t::framebuffers</definition>
        <argsstring>() const noexcept</argsstring>
        <name>framebuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>all vulkan framebuffer objects that constitute this framebuffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="71" column="19" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/framebuffer.cpp" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1framebuffer__t_1ab56dd9042d7c6fb8b2a36117673995f0" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>vk::DescriptorImageInfo</type>
        <definition>vk::DescriptorImageInfo framebuffer_t::descriptor</definition>
        <argsstring>() const noexcept</argsstring>
        <name>descriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the image descriptor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="73" column="25" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/framebuffer.cpp" bodystart="222" bodyend="222"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classcore_1_1ivk_1_1framebuffer__t_1aaac4c5851391ae88a2826f4f1f90ea99" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool framebuffer_t::add</definition>
        <argsstring>(core::resource::cache_t &amp;cache, const psl::UID &amp;uid, vk::AttachmentDescription description, size_t index, size_t count)</argsstring>
        <name>add</name>
        <param>
          <type>core::resource::cache_t &amp;</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const <ref refid="structpsl_1_1_u_i_d" kindref="compound">psl::UID</ref> &amp;</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>vk::AttachmentDescription</type>
          <declname>description</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="76" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/framebuffer.cpp" bodystart="156" bodyend="188"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>describes a set of images to use as rendertargets </para>
    </briefdescription>
    <detaileddescription>
<para>in many graphics applications you will need to use more advanced techniques than just rendering into the backbuffer (swapchain), and to do that you will need to describe a set of images to the driver that you will use as render targets. the framebuffer class is just that, and allows you to bundle together images to do postprocessing, or shadowmapping, etc... </para>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" line="27" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/framebuffer.hpp" bodystart="26" bodyend="89"/>
    <listofallmembers>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1aaac4c5851391ae88a2826f4f1f90ea99" prot="private" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>add</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1afebba2ecb3aa4eb8384f5343c0086cfa" prot="public" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>attachments</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1abe5268c03d9330ed481818fe1fd0ce20" prot="public" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>color_attachments</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1aa8afee9525d95c660fbcd15f1e677db3" prot="public" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>data</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1ab56dd9042d7c6fb8b2a36117673995f0" prot="public" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>descriptor</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1ac4e18a39d84b4912a5c34009c79d6c29" prot="public" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>framebuffer_t</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1a69300cdf02b6177373ed6ba5252d099c" prot="public" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>framebuffer_t</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1af31c69cde6292bd43b19c286505c08a8" prot="public" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>framebuffer_t</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1a4ff2a0878565c85a50f5c036926f7fce" prot="public" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>framebuffers</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1af79eafaab4584b62a8818ef0a91a44e5" prot="private" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>m_Bindings</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1ad96c297f76cbd9404c238a969c9efe7d" prot="private" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>m_Context</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1a11426a18e7d5910a0a18649e11b998eb" prot="private" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>m_Data</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1a7eafdbf3b8a4b445d360a13eb78a4833" prot="private" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>m_Descriptor</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1a8da73bd3327fc82812493546c74514c0" prot="private" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>m_Framebuffers</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1a661f450a4b7c1c2732d1a117e970ee22" prot="private" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>m_RenderPass</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1ad09d78027c419e63c71cd19a70940b5c" prot="private" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>m_Sampler</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1ad2bf57e240eb8d04ffcd29d85be33e7e" prot="public" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>operator=</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1ad336506a9595eabe5b21b8611bf41dae" prot="public" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>operator=</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1ab7ebb265d388ff95c6e334869c8c2041" prot="public" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>render_pass</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1a9b1e84b15a1f4633cc54c71227658228" prot="public" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>sampler</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1afaf91c1672d871a055dfc1ad2968295f" prot="public" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>texture_handle</name></member>
      <member refid="classcore_1_1ivk_1_1framebuffer__t_1a0a5f4d824ed01953d8019003ccbd3bc8" prot="public" virt="non-virtual"><scope>core::ivk::framebuffer_t</scope><name>~framebuffer_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
