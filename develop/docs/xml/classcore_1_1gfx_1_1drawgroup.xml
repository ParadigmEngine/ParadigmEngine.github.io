<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcore_1_1gfx_1_1drawgroup" kind="class" language="C++" prot="public">
    <compoundname>core::gfx::drawgroup</compoundname>
    <includes refid="drawgroup_8hpp" local="no">drawgroup.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcore_1_1gfx_1_1drawgroup_1a0612d1512d810c8fc63adb444794d642" prot="private" static="no" mutable="no">
        <type>std::map&lt; drawlayer, std::vector&lt; drawcall &gt; &gt;</type>
        <definition>std::map&lt;drawlayer, std::vector&lt;drawcall&gt; &gt; core::gfx::drawgroup::m_Group</definition>
        <argsstring></argsstring>
        <name>m_Group</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawgroup.hpp" line="63" column="10" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawgroup.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawgroup_1abe82f4b8cac37a2fe3dc016f2d5595bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::gfx::drawgroup::drawgroup</definition>
        <argsstring>()=default</argsstring>
        <name>drawgroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawgroup.hpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawgroup_1a632d0218c143345826c33b1e986bde81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::gfx::drawgroup::~drawgroup</definition>
        <argsstring>()=default</argsstring>
        <name>~drawgroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawgroup.hpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawgroup_1abc5bf246a537e982cf858f0d74567d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::gfx::drawgroup::drawgroup</definition>
        <argsstring>(const drawgroup &amp;)=default</argsstring>
        <name>drawgroup</name>
        <param>
          <type>const <ref refid="classcore_1_1gfx_1_1drawgroup" kindref="compound">drawgroup</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawgroup.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawgroup_1a7ffd6e2a47b0826b03451c40da045653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::gfx::drawgroup::drawgroup</definition>
        <argsstring>(drawgroup &amp;&amp;)=default</argsstring>
        <name>drawgroup</name>
        <param>
          <type><ref refid="classcore_1_1gfx_1_1drawgroup" kindref="compound">drawgroup</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawgroup.hpp" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawgroup_1a40a049d254222b1c2c1bf4b9afe5799c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcore_1_1gfx_1_1drawgroup" kindref="compound">drawgroup</ref> &amp;</type>
        <definition>drawgroup&amp; core::gfx::drawgroup::operator=</definition>
        <argsstring>(const drawgroup &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classcore_1_1gfx_1_1drawgroup" kindref="compound">drawgroup</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawgroup.hpp" line="46" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawgroup_1a43ddcb9854a5df703370b581a406df1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcore_1_1gfx_1_1drawgroup" kindref="compound">drawgroup</ref> &amp;</type>
        <definition>drawgroup&amp; core::gfx::drawgroup::operator=</definition>
        <argsstring>(drawgroup &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classcore_1_1gfx_1_1drawgroup" kindref="compound">drawgroup</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawgroup.hpp" line="47" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawgroup_1a72b05841326aa3ffa9b5f3fa2dc30828" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const drawlayer &amp;</type>
        <definition>const drawlayer &amp; drawgroup::layer</definition>
        <argsstring>(const psl::string &amp;layer, uint32_t priority, uint32_t extent) noexcept</argsstring>
        <name>layer</name>
        <param>
          <type>const psl::string &amp;</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>extent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawgroup.hpp" line="49" column="17" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/drawgroup.cpp" bodystart="9" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawgroup_1a21aedff0e287eddfc4fbf37fbed4e086" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool drawgroup::contains</definition>
        <argsstring>(const psl::string &amp;layer) const noexcept</argsstring>
        <name>contains</name>
        <param>
          <type>const psl::string &amp;</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawgroup.hpp" line="50" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/drawgroup.cpp" bodystart="19" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawgroup_1a9c4bb0306be87a8cece20ee56f02fb35" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>std::optional&lt; std::reference_wrapper&lt; const drawlayer &gt; &gt;</type>
        <definition>std::optional&lt; std::reference_wrapper&lt; const drawlayer &gt; &gt; drawgroup::get</definition>
        <argsstring>(const psl::string &amp;layer) const noexcept</argsstring>
        <name>get</name>
        <param>
          <type>const psl::string &amp;</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawgroup.hpp" line="51" column="15" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/drawgroup.cpp" bodystart="25" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawgroup_1ab19669483db6175eead2d3d7753fb9f8" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool drawgroup::priority</definition>
        <argsstring>(drawlayer &amp;layer, uint32_t priority) noexcept</argsstring>
        <name>priority</name>
        <param>
          <type>drawlayer &amp;</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawgroup.hpp" line="52" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/drawgroup.cpp" bodystart="33" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawgroup_1a91c1f96718995a1f4c4d7f28ed672d1b" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>drawcall &amp;</type>
        <definition>drawcall &amp; drawgroup::add</definition>
        <argsstring>(const drawlayer &amp;layer, core::resource::handle&lt; core::gfx::bundle &gt; bundle) noexcept</argsstring>
        <name>add</name>
        <param>
          <type>const drawlayer &amp;</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1gfx_1_1bundle" kindref="compound">core::gfx::bundle</ref> &gt;</type>
          <declname>bundle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawgroup.hpp" line="54" column="10" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/drawgroup.cpp" bodystart="52" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1drawgroup_1a0a4ee7f88d4197e25258d12b2e9b55d6" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>std::optional&lt; std::reference_wrapper&lt; drawcall &gt; &gt;</type>
        <definition>std::optional&lt; std::reference_wrapper&lt; drawcall &gt; &gt; drawgroup::get</definition>
        <argsstring>(const drawlayer &amp;layer, core::resource::handle&lt; core::gfx::bundle &gt; bundle) noexcept</argsstring>
        <name>get</name>
        <param>
          <type>const drawlayer &amp;</type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1gfx_1_1bundle" kindref="compound">core::gfx::bundle</ref> &gt;</type>
          <declname>bundle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawgroup.hpp" line="55" column="15" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/drawgroup.cpp" bodystart="73" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>a collection of draw instructions to be recorded and sent to the GPU. </para>
    </briefdescription>
    <detaileddescription>
<para>describes a group of various core::gfx::drawcalls, ordered by core::gfx::drawlayers. these are then pinned to a set of possible outputs (swapchain or framebuffer) which will be used by the render to order and output them. </para>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawgroup.hpp" line="34" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/drawgroup.hpp" bodystart="33" bodyend="64"/>
    <listofallmembers>
      <member refid="classcore_1_1gfx_1_1drawgroup_1a91c1f96718995a1f4c4d7f28ed672d1b" prot="public" virt="non-virtual"><scope>core::gfx::drawgroup</scope><name>add</name></member>
      <member refid="classcore_1_1gfx_1_1drawgroup_1a21aedff0e287eddfc4fbf37fbed4e086" prot="public" virt="non-virtual"><scope>core::gfx::drawgroup</scope><name>contains</name></member>
      <member refid="classcore_1_1gfx_1_1drawgroup_1abe82f4b8cac37a2fe3dc016f2d5595bf" prot="public" virt="non-virtual"><scope>core::gfx::drawgroup</scope><name>drawgroup</name></member>
      <member refid="classcore_1_1gfx_1_1drawgroup_1abc5bf246a537e982cf858f0d74567d31" prot="public" virt="non-virtual"><scope>core::gfx::drawgroup</scope><name>drawgroup</name></member>
      <member refid="classcore_1_1gfx_1_1drawgroup_1a7ffd6e2a47b0826b03451c40da045653" prot="public" virt="non-virtual"><scope>core::gfx::drawgroup</scope><name>drawgroup</name></member>
      <member refid="classcore_1_1gfx_1_1drawgroup_1a9c4bb0306be87a8cece20ee56f02fb35" prot="public" virt="non-virtual"><scope>core::gfx::drawgroup</scope><name>get</name></member>
      <member refid="classcore_1_1gfx_1_1drawgroup_1a0a4ee7f88d4197e25258d12b2e9b55d6" prot="public" virt="non-virtual"><scope>core::gfx::drawgroup</scope><name>get</name></member>
      <member refid="classcore_1_1gfx_1_1drawgroup_1a72b05841326aa3ffa9b5f3fa2dc30828" prot="public" virt="non-virtual"><scope>core::gfx::drawgroup</scope><name>layer</name></member>
      <member refid="classcore_1_1gfx_1_1drawgroup_1a0612d1512d810c8fc63adb444794d642" prot="private" virt="non-virtual"><scope>core::gfx::drawgroup</scope><name>m_Group</name></member>
      <member refid="classcore_1_1gfx_1_1drawgroup_1a40a049d254222b1c2c1bf4b9afe5799c" prot="public" virt="non-virtual"><scope>core::gfx::drawgroup</scope><name>operator=</name></member>
      <member refid="classcore_1_1gfx_1_1drawgroup_1a43ddcb9854a5df703370b581a406df1b" prot="public" virt="non-virtual"><scope>core::gfx::drawgroup</scope><name>operator=</name></member>
      <member refid="classcore_1_1gfx_1_1drawgroup_1ab19669483db6175eead2d3d7753fb9f8" prot="public" virt="non-virtual"><scope>core::gfx::drawgroup</scope><name>priority</name></member>
      <member refid="classcore_1_1gfx_1_1drawgroup_1a632d0218c143345826c33b1e986bde81" prot="public" virt="non-virtual"><scope>core::gfx::drawgroup</scope><name>~drawgroup</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
