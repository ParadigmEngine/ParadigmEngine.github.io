<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="meta_2shader_8hpp" kind="file" language="C++">
    <compoundname>shader.hpp</compoundname>
    <includes refid="gfx_2types_8hpp" local="yes">gfx/types.hpp</includes>
    <includes refid="array_8hpp" local="yes">psl/array.hpp</includes>
    <includes refid="array__view_8hpp" local="yes">psl/array_view.hpp</includes>
    <includes refid="library_8hpp" local="yes">psl/library.hpp</includes>
    <includes refid="serializer_8hpp" local="yes">psl/serialization/serializer.hpp</includes>
    <includes refid="ustring_8hpp" local="yes">psl/ustring.hpp</includes>
    <includedby refid="instance_8hpp" local="yes">/home/runner/work/paradigm/paradigm/core/inc/gfx/details/instance.hpp</includedby>
    <includedby refid="data_2material_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/data/material.cpp</includedby>
    <includedby refid="grid_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/ecs/systems/debug/grid.cpp</includedby>
    <includedby refid="text_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/ecs/systems/text.cpp</includedby>
    <includedby refid="instance_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/gfx/details/instance.cpp</includedby>
    <includedby refid="gfx_2shader_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/gfx/shader.cpp</includedby>
    <includedby refid="gles_2compute_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/gles/compute.cpp</includedby>
    <includedby refid="gles_2geometry_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/gles/geometry.cpp</includedby>
    <includedby refid="gles_2material_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/gles/material.cpp</includedby>
    <includedby refid="program_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/gles/program.cpp</includedby>
    <includedby refid="gles_2shader_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/gles/shader.cpp</includedby>
    <includedby refid="meta_2shader_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/meta/shader.cpp</includedby>
    <includedby refid="vk_2geometry_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/vk/geometry.cpp</includedby>
    <includedby refid="vk_2material_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/vk/material.cpp</includedby>
    <includedby refid="pipeline_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/vk/pipeline.cpp</includedby>
    <includedby refid="vk_2shader_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/vk/shader.cpp</includedby>
    <incdepgraph>
      <node id="43">
        <label>iomanip</label>
      </node>
      <node id="16">
        <label>functional</label>
      </node>
      <node id="23">
        <label>limits</label>
      </node>
      <node id="36">
        <label>iterator</label>
      </node>
      <node id="35">
        <label>psl/array_view.hpp</label>
        <link refid="array__view_8hpp_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>psl/memory/range.hpp</label>
        <link refid="range_8hpp_source"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>psl/math/vec.hpp</label>
        <link refid="vec_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>cstdint</label>
      </node>
      <node id="37">
        <label>psl/library.hpp</label>
        <link refid="library_8hpp_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>variant</label>
      </node>
      <node id="22">
        <label>cmath</label>
      </node>
      <node id="14">
        <label>cassert</label>
      </node>
      <node id="10">
        <label>psl/platform_def.hpp</label>
        <link refid="platform__def_8hpp_source"/>
      </node>
      <node id="44">
        <label>numeric</label>
      </node>
      <node id="7">
        <label>psl/template_utils.hpp</label>
        <link refid="template__utils_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>unordered_set</label>
      </node>
      <node id="13">
        <label>fstream</label>
      </node>
      <node id="41">
        <label>psl/string_utils.hpp</label>
        <link refid="string__utils_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>psl/details/fixed_astring.hpp</label>
        <link refid="fixed__astring_8hpp_source"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="46">
        <label>string_view</label>
      </node>
      <node id="49">
        <label>psl/binary_utils.hpp</label>
        <link refid="binary__utils_8hpp_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>psl/logging.hpp</label>
        <link refid="psl_2inc_2psl_2logging_8hpp_source"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>bitset</label>
      </node>
      <node id="61">
        <label>psl/crc32.hpp</label>
        <link refid="crc32_8hpp_source"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>optional</label>
      </node>
      <node id="48">
        <label>stack</label>
      </node>
      <node id="34">
        <label>vector</label>
      </node>
      <node id="15">
        <label>signal.h</label>
      </node>
      <node id="2">
        <label>gfx/types.hpp</label>
        <link refid="gfx_2types_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>psl/format.hpp</label>
        <link refid="format_8hpp_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>utility</label>
      </node>
      <node id="5">
        <label>array</label>
      </node>
      <node id="45">
        <label>sstream</label>
      </node>
      <node id="28">
        <label>psl/math/fallback/vec.hpp</label>
        <link refid="fallback_2vec_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>psl/concepts.hpp</label>
        <link refid="concepts_8hpp_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>psl/math/SSE/vec.hpp</label>
        <link refid="_s_s_e_2vec_8hpp_source"/>
      </node>
      <node id="53">
        <label>clocale</label>
      </node>
      <node id="52">
        <label>cctype</label>
      </node>
      <node id="6">
        <label>cstddef</label>
      </node>
      <node id="33">
        <label>psl/array.hpp</label>
        <link refid="array_8hpp_source"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>unordered_map</label>
      </node>
      <node id="4">
        <label>psl/static_array.hpp</label>
        <link refid="static__array_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>psl/platform_utils.hpp</label>
        <link refid="platform__utils_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>psl/math/AVX2/vec.hpp</label>
        <link refid="_a_v_x2_2vec_8hpp_source"/>
      </node>
      <node id="56">
        <label>psl/serialization/property.hpp</label>
        <link refid="property_8hpp_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>psl/meta.hpp</label>
        <link refid="meta_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>concepts</label>
      </node>
      <node id="25">
        <label>psl/math/AVX/vec.hpp</label>
        <link refid="_a_v_x_2vec_8hpp_source"/>
      </node>
      <node id="55">
        <label>thread</label>
      </node>
      <node id="17">
        <label>type_traits</label>
      </node>
      <node id="31">
        <label>psl/memory/segment.hpp</label>
        <link refid="segment_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>algorithm</label>
      </node>
      <node id="1">
        <label>/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp</label>
        <link refid="meta_2shader_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stdio.h</label>
      </node>
      <node id="12">
        <label>cstring</label>
      </node>
      <node id="30">
        <label>memory</label>
      </node>
      <node id="47">
        <label>psl/serialization/serializer.hpp</label>
        <link refid="serializer_8hpp_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>psl/assertions.hpp</label>
        <link refid="assertions_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>experimental/filesystem</label>
      </node>
      <node id="9">
        <label>psl/ustring.hpp</label>
        <link refid="ustring_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="18">
        <label>/home/runner/work/paradigm/paradigm/core/src/data/material.cpp</label>
        <link refid="data_2material_8cpp_source"/>
      </node>
      <node id="33">
        <label>/home/runner/work/paradigm/paradigm/core/src/vk/pipeline.cpp</label>
        <link refid="pipeline_8cpp_source"/>
      </node>
      <node id="22">
        <label>/home/runner/work/paradigm/paradigm/core/inc/vk/material.hpp</label>
        <link refid="vk_2material_8hpp_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/runner/work/paradigm/paradigm/core/src/ecs/systems/geometry_instance.cpp</label>
        <link refid="geometry__instance_8cpp_source"/>
      </node>
      <node id="32">
        <label>/home/runner/work/paradigm/paradigm/core/src/meta/shader.cpp</label>
        <link refid="meta_2shader_8cpp_source"/>
      </node>
      <node id="3">
        <label>/home/runner/work/paradigm/paradigm/core/inc/gfx/bundle.hpp</label>
        <link refid="gfx_2bundle_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/home/runner/work/paradigm/paradigm/core/src/ecs/systems/text.cpp</label>
        <link refid="text_8cpp_source"/>
      </node>
      <node id="14">
        <label>/home/runner/work/paradigm/paradigm/core/src/gfx/drawgroup.cpp</label>
        <link refid="drawgroup_8cpp_source"/>
      </node>
      <node id="15">
        <label>/home/runner/work/paradigm/paradigm/core/src/gfx/drawpass.cpp</label>
        <link refid="gfx_2drawpass_8cpp_source"/>
      </node>
      <node id="19">
        <label>/home/runner/work/paradigm/paradigm/core/src/ecs/systems/debug/grid.cpp</label>
        <link refid="grid_8cpp_source"/>
      </node>
      <node id="31">
        <label>/home/runner/work/paradigm/paradigm/core/src/gles/shader.cpp</label>
        <link refid="gles_2shader_8cpp_source"/>
      </node>
      <node id="10">
        <label>/home/runner/work/paradigm/paradigm/core/src/ecs/systems/lighting.cpp</label>
        <link refid="lighting_8cpp_source"/>
      </node>
      <node id="24">
        <label>/home/runner/work/paradigm/paradigm/core/src/vk/material.cpp</label>
        <link refid="vk_2material_8cpp_source"/>
      </node>
      <node id="16">
        <label>/home/runner/work/paradigm/paradigm/core/src/vk/drawpass.cpp</label>
        <link refid="vk_2drawpass_8cpp_source"/>
      </node>
      <node id="6">
        <label>/home/runner/work/paradigm/paradigm/core/inc/gfx/drawcall.hpp</label>
        <link refid="drawcall_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/runner/work/paradigm/paradigm/core/inc/ecs/systems/geometry_instance.hpp</label>
        <link refid="geometry__instance_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/runner/work/paradigm/paradigm/core/src/gfx/bundle.cpp</label>
        <link refid="gfx_2bundle_8cpp_source"/>
      </node>
      <node id="7">
        <label>/home/runner/work/paradigm/paradigm/core/inc/gfx/drawgroup.hpp</label>
        <link refid="drawgroup_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/runner/work/paradigm/paradigm/core/inc/gles/drawpass.hpp</label>
        <link refid="gles_2drawpass_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/home/runner/work/paradigm/paradigm/core/src/gfx/shader.cpp</label>
        <link refid="gfx_2shader_8cpp_source"/>
      </node>
      <node id="29">
        <label>/home/runner/work/paradigm/paradigm/core/src/gles/geometry.cpp</label>
        <link refid="gles_2geometry_8cpp_source"/>
      </node>
      <node id="25">
        <label>/home/runner/work/paradigm/paradigm/core/src/gfx/details/instance.cpp</label>
        <link refid="instance_8cpp_source"/>
      </node>
      <node id="2">
        <label>/home/runner/work/paradigm/paradigm/core/inc/gfx/details/instance.hpp</label>
        <link refid="instance_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/home/runner/work/paradigm/paradigm/core/src/vk/geometry.cpp</label>
        <link refid="vk_2geometry_8cpp_source"/>
      </node>
      <node id="28">
        <label>/home/runner/work/paradigm/paradigm/core/src/gles/compute.cpp</label>
        <link refid="gles_2compute_8cpp_source"/>
      </node>
      <node id="13">
        <label>/home/runner/work/paradigm/paradigm/core/src/gles/drawpass.cpp</label>
        <link refid="gles_2drawpass_8cpp_source"/>
      </node>
      <node id="8">
        <label>/home/runner/work/paradigm/paradigm/core/inc/ecs/systems/render.hpp</label>
        <link refid="render_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/runner/work/paradigm/paradigm/core/src/gles/material.cpp</label>
        <link refid="gles_2material_8cpp_source"/>
      </node>
      <node id="30">
        <label>/home/runner/work/paradigm/paradigm/core/src/gles/program.cpp</label>
        <link refid="program_8cpp_source"/>
      </node>
      <node id="1">
        <label>/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp</label>
        <link refid="meta_2shader_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>/home/runner/work/paradigm/paradigm/core/src/vk/shader.cpp</label>
        <link refid="vk_2shader_8cpp_source"/>
      </node>
      <node id="11">
        <label>/home/runner/work/paradigm/paradigm/core/src/ecs/systems/render.cpp</label>
        <link refid="render_8cpp_source"/>
      </node>
      <node id="9">
        <label>/home/runner/work/paradigm/paradigm/core/inc/ecs/systems/lighting.hpp</label>
        <link refid="systems_2lighting_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/runner/work/paradigm/paradigm/core/src/gfx/drawcall.cpp</label>
        <link refid="drawcall_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classcore_1_1meta_1_1shader" prot="public">core::meta::shader</innerclass>
    <innerclass refid="classcore_1_1meta_1_1shader_1_1member" prot="public">core::meta::shader::member</innerclass>
    <innerclass refid="classcore_1_1meta_1_1shader_1_1attribute" prot="public">core::meta::shader::attribute</innerclass>
    <innerclass refid="classcore_1_1meta_1_1shader_1_1descriptor" prot="public">core::meta::shader::descriptor</innerclass>
    <innernamespace refid="namespacecore">core</innernamespace>
    <innernamespace refid="namespacecore_1_1meta">core::meta</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gfx/types.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;psl/array.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;psl/array_view.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;psl/library.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;psl/serialization/serializer.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;psl/ustring.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecore_1_1meta" kindref="compound">core::meta</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17" refid="classcore_1_1meta_1_1shader" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcore_1_1meta_1_1shader" kindref="compound">shader</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classpsl_1_1meta_1_1file" kindref="compound">psl::meta::file</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">psl::serialization::accessor;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">member</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">psl::serialization::accessor;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::string_view<sp/><ref refid="classpsl_1_1meta_1_1file_1a80e158a6feeaef638312d8298d47761d" kindref="member">name</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Name.value;<sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpsl_1_1meta_1_1file_1a80e158a6feeaef638312d8298d47761d" kindref="member">name</ref>(psl::string<sp/>value)<sp/>noexcept<sp/>{<sp/>m_Name.value<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>offset()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Offset.value;<sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>offset(uint32_t<sp/>value)<sp/>noexcept<sp/>{<sp/>m_Offset.value<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>\brief<sp/>returns<sp/>unique<sp/>values<sp/>present<sp/>in<sp/>the<sp/>member<sp/>(i.e.<sp/>vec4<sp/>would<sp/>return<sp/>count<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>count()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Count.value;<sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>count(uint32_t<sp/>value)<sp/>noexcept<sp/>{<sp/>m_Count.value<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>\brief<sp/>returns<sp/>bytesize<sp/>between<sp/>unique<sp/>member<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>stride()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Stride.value;<sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stride(uint32_t<sp/>value)<sp/>noexcept<sp/>{<sp/>m_Stride.value<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>\brief<sp/>returns<sp/>the<sp/>calculation<sp/>of<sp/>stride()<sp/>*<sp/>count()<sp/>of<sp/>the<sp/>member</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)stride()<sp/>*<sp/>count();<sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::array_view&lt;member&gt;<sp/>members()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Members.value;<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>members(psl::array&lt;member&gt;<sp/>value)<sp/>noexcept<sp/>{<sp/>m_Members.value<sp/>=<sp/>std::move(value);<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_unconstrained()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_array()<sp/>&amp;&amp;<sp/>m_Count.value<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_array()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Members.value.size()<sp/>&gt;<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(S&amp;<sp/>s)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/>m_Name<sp/>&lt;&lt;<sp/>m_Offset<sp/>&lt;&lt;<sp/>m_Count<sp/>&lt;&lt;<sp/>m_Stride<sp/>&lt;&lt;<sp/>m_Members;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>psl::string8::view<sp/>serialization_name<sp/>{</highlight><highlight class="stringliteral">&quot;MEMBER&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;NAME&quot;</highlight><highlight class="normal">,<sp/>psl::string&gt;<sp/>m_Name;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>name<sp/>of<sp/>the<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;OFFSET&quot;</highlight><highlight class="normal">,<sp/>uint32_t&gt;<sp/>m_Offset;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>location<sp/>of<sp/>the<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;COUNT&quot;</highlight><highlight class="normal">,<sp/>uint32_t&gt;<sp/>m_Count<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1};<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>how<sp/>many<sp/>elements,<sp/>f.e.<sp/>for<sp/>a<sp/>vec4<sp/>this<sp/>is<sp/>1,<sp/>but<sp/>for<sp/>mat4x4<sp/>this<sp/>is<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;STRIDE&quot;</highlight><highlight class="normal">,<sp/>uint32_t&gt;<sp/>m_Stride;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>per<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;MEMBERS&quot;</highlight><highlight class="normal">,<sp/>psl::array&lt;member&gt;&gt;<sp/>m_Members;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sub-elements<sp/>(if<sp/>array)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">attribute</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">psl::serialization::accessor;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::string_view<sp/><ref refid="classpsl_1_1meta_1_1file_1a80e158a6feeaef638312d8298d47761d" kindref="member">name</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Name.value;<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpsl_1_1meta_1_1file_1a80e158a6feeaef638312d8298d47761d" kindref="member">name</ref>(psl::string<sp/>value)<sp/>noexcept<sp/>{<sp/>m_Name.value<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>location()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Location.value;<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>location(uint32_t<sp/>value)<sp/>noexcept<sp/>{<sp/>m_Location.value<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>count()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Count.value;<sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>count(uint32_t<sp/>value)<sp/>noexcept<sp/>{<sp/>m_Count.value<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>stride()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Stride.value;<sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stride(uint32_t<sp/>value)<sp/>noexcept<sp/>{<sp/>m_Stride.value<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>core::gfx::format_t<sp/>format()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Format.value;<sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>format(core::gfx::format_t<sp/>value)<sp/>noexcept<sp/>{<sp/>m_Format.value<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Count.value<sp/>*<sp/>m_Stride.value;<sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(S&amp;<sp/>s)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/>m_Name<sp/>&lt;&lt;<sp/>m_Format<sp/>&lt;&lt;<sp/>m_Location<sp/>&lt;&lt;<sp/>m_Count<sp/>&lt;&lt;<sp/>m_Stride;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>psl::string8::view<sp/>serialization_name<sp/>{</highlight><highlight class="stringliteral">&quot;ATTRIBUTE&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;NAME&quot;</highlight><highlight class="normal">,<sp/>psl::string&gt;<sp/>m_Name;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>name<sp/>of<sp/>the<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;LOCATION&quot;</highlight><highlight class="normal">,<sp/>uint32_t&gt;<sp/>m_Location;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>location<sp/>of<sp/>the<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;COUNT&quot;</highlight><highlight class="normal">,<sp/>uint32_t&gt;<sp/>m_Count<sp/>{1};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>how<sp/>many<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;STRIDE&quot;</highlight><highlight class="normal">,<sp/>uint32_t&gt;<sp/>m_Stride;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>size<sp/>per<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;FORMAT&quot;</highlight><highlight class="normal">,<sp/>core::gfx::format_t&gt;<sp/>m_Format;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>format<sp/>of<sp/>the<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">descriptor</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">psl::serialization::accessor;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>dependency</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inout<sp/>=<sp/>in<sp/>+<sp/>out</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~descriptor()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::string_view<sp/><ref refid="classpsl_1_1meta_1_1file_1a80e158a6feeaef638312d8298d47761d" kindref="member">name</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Name.value;<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpsl_1_1meta_1_1file_1a80e158a6feeaef638312d8298d47761d" kindref="member">name</ref>(psl::string<sp/>value)<sp/>noexcept<sp/>{<sp/>m_Name.value<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>binding()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Binding.value;<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>binding(uint32_t<sp/>value)<sp/>noexcept<sp/>{<sp/>m_Binding.value<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>set()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Set.value;<sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set(uint32_t<sp/>value)<sp/>noexcept<sp/>{<sp/>m_Set.value<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dependency<sp/>qualifier()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Dependency.value;<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>qualifier(dependency<sp/>value)<sp/>noexcept<sp/>{<sp/>m_Dependency.value<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecore_1_1gfx_1a9fcccb41f69111c6c1c029013c2ffa0d" kindref="member">core::gfx::binding_type</ref><sp/>type()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Type.value;<sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>type(<ref refid="namespacecore_1_1gfx_1a9fcccb41f69111c6c1c029013c2ffa0d" kindref="member">core::gfx::binding_type</ref><sp/>value)<sp/>{<sp/>m_Type.value<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::array_view&lt;member&gt;<sp/>members()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Members.value;<sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>members(psl::array&lt;member&gt;<sp/>value)<sp/>noexcept<sp/>{<sp/>m_Members.value<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::accumulate(std::begin(m_Members.value),</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::end(m_Members.value),</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>{0},</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>member)<sp/>{<sp/>return<sp/>sum<sp/>+<sp/>member.size();<sp/>});</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(S&amp;<sp/>s)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/>m_Name<sp/>&lt;&lt;<sp/>m_Type<sp/>&lt;&lt;<sp/>m_Set<sp/>&lt;&lt;<sp/>m_Binding<sp/>&lt;&lt;<sp/>m_Dependency<sp/>&lt;&lt;<sp/>m_Members;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>psl::string8::view<sp/>serialization_name<sp/>{</highlight><highlight class="stringliteral">&quot;DESCRIPTOR&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;NAME&quot;</highlight><highlight class="normal">,<sp/>psl::string&gt;<sp/>m_Name;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;BINDING&quot;</highlight><highlight class="normal">,<sp/>uint32_t&gt;<sp/>m_Binding;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;SET&quot;</highlight><highlight class="normal">,<sp/>uint32_t&gt;<sp/>m_Set;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;TYPE&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacecore_1_1gfx_1a9fcccb41f69111c6c1c029013c2ffa0d" kindref="member">core::gfx::binding_type</ref>&gt;<sp/>m_Type;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;DEPENDENCY&quot;</highlight><highlight class="normal">,<sp/>dependency&gt;<sp/>m_Dependency;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;MEMBERS&quot;</highlight><highlight class="normal">,<sp/>psl::array&lt;member&gt;&gt;<sp/>m_Members;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcore_1_1meta_1_1shader" kindref="compound">shader</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcore_1_1meta_1_1shader" kindref="compound">shader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpsl_1_1_u_i_d" kindref="compound">psl::UID</ref>&amp;<sp/>key)<sp/>:<sp/><ref refid="classpsl_1_1meta_1_1file" kindref="compound">psl::meta::file</ref>(key)<sp/>{};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~<ref refid="classcore_1_1meta_1_1shader" kindref="compound">shader</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>per_instance(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>attribute_index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>per_instance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>attribute&amp;<sp/>attribute)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classcore_1_1meta_1_1shader_1a73c79a7e7e625782f6e37ec696a257d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecore_1_1gfx_1a217cb4e725d207cca042f2b79b1142b5" kindref="member">core::gfx::shader_stage</ref><sp/><ref refid="classcore_1_1meta_1_1shader_1a73c79a7e7e625782f6e37ec696a257d1" kindref="member">stage</ref>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Stage.value;<sp/>}</highlight></codeline>
<codeline lineno="175" refid="classcore_1_1meta_1_1shader_1aaf78de802903d48e0f112d7b2588d1cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcore_1_1meta_1_1shader_1aaf78de802903d48e0f112d7b2588d1cf" kindref="member">stage</ref>(<ref refid="namespacecore_1_1gfx_1a217cb4e725d207cca042f2b79b1142b5" kindref="member">core::gfx::shader_stage</ref><sp/>value)<sp/>noexcept<sp/>{<sp/>m_Stage.value<sp/>=<sp/>value;<sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::array_view&lt;attribute&gt;<sp/>inputs()<sp/>noexcept</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>psl::array_view&lt;attribute&gt;(m_Attributes.data(),<sp/>m_InputAttributesSize);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>inputs(psl::array&lt;attribute&gt;<sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Attributes.erase(std::begin(m_Attributes),<sp/>std::next(std::begin(m_Attributes),<sp/>m_InputAttributesSize));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_InputAttributesSize<sp/>=<sp/>value.size();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Attributes.insert(</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::begin(m_Attributes),<sp/>std::move_iterator(std::begin(value)),<sp/>std::move_iterator(std::end(value)));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::array_view&lt;attribute&gt;<sp/>outputs()<sp/>noexcept</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>psl::array_view&lt;attribute&gt;(m_Attributes.data()<sp/>+<sp/>m_InputAttributesSize,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size(m_Attributes)<sp/>-<sp/>m_InputAttributesSize);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>outputs(psl::array&lt;attribute&gt;<sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Attributes.erase(std::next(std::begin(m_Attributes),<sp/>m_InputAttributesSize),<sp/>std::end(m_Attributes));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Attributes.insert(</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::end(m_Attributes),<sp/>std::move_iterator(std::begin(value)),<sp/>std::move_iterator(std::end(value)));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::array_view&lt;descriptor&gt;<sp/>descriptors()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{m_Descriptors.value};<sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>descriptors(psl::array&lt;descriptor&gt;<sp/>value)<sp/>noexcept<sp/>{<sp/>m_Descriptors.value<sp/>=<sp/>std::move(value);<sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(S&amp;<sp/>s)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::meta::file::serialize(s);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;INPUTS&quot;</highlight><highlight class="normal">,<sp/>psl::array&lt;attribute&gt;&gt;<sp/>inputs;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;OUTPUTS&quot;</highlight><highlight class="normal">,<sp/>psl::array&lt;attribute&gt;&gt;<sp/>outputs;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Attributes.size()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputs.value.insert(std::end(inputs.value),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::begin(m_Attributes),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::next(std::begin(m_Attributes),<sp/>m_InputAttributesSize));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs.value.insert(std::end(outputs.value),</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::next(std::begin(m_Attributes),<sp/>m_InputAttributesSize),</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::end(m_Attributes));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>&lt;&lt;<sp/>m_Stage<sp/>&lt;&lt;<sp/>inputs<sp/>&lt;&lt;<sp/>outputs<sp/>&lt;&lt;<sp/>m_Descriptors;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(std::begin(m_Descriptors.value),</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::end(m_Descriptors.value),</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>rhs)<sp/>{<sp/>return<sp/>lhs.binding()<sp/>&lt;<sp/>rhs.binding();<sp/>});</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Attributes.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Attributes.reserve(inputs.value.size()<sp/>+<sp/>outputs.value.size());</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Attributes.insert(std::end(m_Attributes),<sp/>std::begin(inputs.value),<sp/>std::end(inputs.value));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Attributes.insert(std::end(m_Attributes),<sp/>std::begin(outputs.value),<sp/>std::end(outputs.value));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_InputAttributesSize<sp/>=<sp/>std::size(inputs.value);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;STAGE&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacecore_1_1gfx_1a217cb4e725d207cca042f2b79b1142b5" kindref="member">core::gfx::shader_stage</ref>&gt;<sp/>m_Stage;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::serialization::property&lt;</highlight><highlight class="stringliteral">&quot;DESCRIPTORS&quot;</highlight><highlight class="normal">,<sp/>psl::array&lt;descriptor&gt;&gt;<sp/>m_Descriptors;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psl::array&lt;attribute&gt;<sp/>m_Attributes;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m_InputAttributesSize<sp/>{0};<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>of<sp/>end()<sp/>for<sp/>input<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>psl::string8::view<sp/>polymorphic_name<sp/>{</highlight><highlight class="stringliteral">&quot;SHADER_META&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>polymorphic_id()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>polymorphic_identity;<sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>polymorphic_identity;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>core::meta</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/paradigm/paradigm/core/inc/meta/shader.hpp"/>
  </compounddef>
</doxygen>
