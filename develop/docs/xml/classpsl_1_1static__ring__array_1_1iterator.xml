<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpsl_1_1static__ring__array_1_1iterator" kind="class" language="C++" prot="public">
    <compoundname>psl::static_ring_array::iterator</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classpsl_1_1static__ring__array_1_1iterator_1a0ad29062129c93f220c413b83f5eaea8" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using psl::static_ring_array&lt; T, N &gt;::iterator::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="16" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1static__ring__array_1_1iterator_1a1b7f0a229a087bb7c7ba26f0ee83ec24" prot="public" static="no">
        <type>T</type>
        <definition>using psl::static_ring_array&lt; T, N &gt;::iterator::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="17" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1static__ring__array_1_1iterator_1a6bfa9c397a802853f6065f0d8033cb2f" prot="public" static="no">
        <type>value_type *</type>
        <definition>using psl::static_ring_array&lt; T, N &gt;::iterator::pointer =  value_type*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="18" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1static__ring__array_1_1iterator_1a6a5d24cc2405aa8a76759713813e327c" prot="public" static="no">
        <type>value_type &amp;</type>
        <definition>using psl::static_ring_array&lt; T, N &gt;::iterator::reference =  value_type&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="19" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1static__ring__array_1_1iterator_1aaf26e3cc37711bd4bd5a046aeefa27ff" prot="public" static="no">
        <type>std::random_access_iterator_tag</type>
        <definition>using psl::static_ring_array&lt; T, N &gt;::iterator::iterator_category =  std::random_access_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="20" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpsl_1_1static__ring__array_1_1iterator_1a9e9616894d876fcf93db2da2d2c3a8f0" prot="private" static="no" mutable="no">
        <type>pointer</type>
        <definition>pointer psl::static_ring_array&lt; T, N &gt;::iterator::m_Data</definition>
        <argsstring></argsstring>
        <name>m_Data</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="109" column="9" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1static__ring__array_1_1iterator_1a11de13dc427a1243da134c5e33c41210" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t psl::static_ring_array&lt; T, N &gt;::iterator::m_Begin</definition>
        <argsstring></argsstring>
        <name>m_Begin</name>
        <initializer>{0u}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="110" column="8" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1static__ring__array_1_1iterator_1a686e96625cd411de029acf520740cbe2" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t psl::static_ring_array&lt; T, N &gt;::iterator::m_Index</definition>
        <argsstring></argsstring>
        <name>m_Index</name>
        <initializer>{0u}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="111" column="8" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1a3131cf04b33fcce11619c30f5d1fa28d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::static_ring_array&lt; T, N &gt;::iterator::iterator</definition>
        <argsstring>(T *data, size_t begin=0, size_t index=0) noexcept</argsstring>
        <name>iterator</name>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>begin</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="22" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="22" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1a1ee227e5c19b05db5277bea6c60b8d97" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::static_ring_array&lt; T, N &gt;::iterator::iterator</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1a0b8dfde17e0a6fc1e9a3a4ec0e6fc58c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::static_ring_array&lt; T, N &gt;::iterator::iterator</definition>
        <argsstring>(const iterator &amp;rhs) noexcept=default</argsstring>
        <name>iterator</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1ae62f70fd428a4e0de79c2c5ed34fc892" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::static_ring_array&lt; T, N &gt;::iterator::iterator</definition>
        <argsstring>(iterator &amp;&amp;rhs) noexcept=default</argsstring>
        <name>iterator</name>
        <param>
          <type>iterator &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1a9a6b6e0808d72f9b1a4f5b3199c9924a" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; psl::static_ring_array&lt; T, N &gt;::iterator::operator=</definition>
        <argsstring>(const iterator &amp;rhs) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="27" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1af7dc88b1224a586f67e7e7a647ddb07f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; psl::static_ring_array&lt; T, N &gt;::iterator::operator=</definition>
        <argsstring>(iterator &amp;&amp;rhs) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>iterator &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="28" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1acb1bd4226656458ef3af94b3d9935b99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::static_ring_array&lt; T, N &gt;::iterator::swap</definition>
        <argsstring>(iterator &amp;iter)</argsstring>
        <name>swap</name>
        <param>
          <type>iterator &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="29" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1ab98f0fd99d78b33c451f250c6d26a9dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool psl::static_ring_array&lt; T, N &gt;::iterator::operator==</definition>
        <argsstring>(const iterator &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="34" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1ac91a23abf93f8af5f7a7536cd4a50891" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool psl::static_ring_array&lt; T, N &gt;::iterator::operator!=</definition>
        <argsstring>(const iterator &amp;rhs) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="35" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1a46bda4987954016cc9e8df247e05afba" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool psl::static_ring_array&lt; T, N &gt;::iterator::operator&lt;</definition>
        <argsstring>(const iterator &amp;rhs) const noexcept</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="39" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1a44dac0107dd833d78fccf0820ff8701d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool psl::static_ring_array&lt; T, N &gt;::iterator::operator&lt;=</definition>
        <argsstring>(const iterator &amp;rhs) const noexcept</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="43" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1aa52e30143d0353e69e56a463f9fc3bae" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool psl::static_ring_array&lt; T, N &gt;::iterator::operator&gt;</definition>
        <argsstring>(const iterator &amp;rhs) const noexcept</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="47" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1a60f10b64c28beba3a7ee03961b42d201" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool psl::static_ring_array&lt; T, N &gt;::iterator::operator&gt;=</definition>
        <argsstring>(const iterator &amp;rhs) const noexcept</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="51" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1a74197840e276704efb3f3f409314f872" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference psl::static_ring_array&lt; T, N &gt;::iterator::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="56" column="11" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1a96bfb4fef76b0f18c6f94e9f8c272599" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer psl::static_ring_array&lt; T, N &gt;::iterator::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="57" column="9" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1a808c5ab6d01ed3fa596ce40802f42e4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference psl::static_ring_array&lt; T, N &gt;::iterator::operator[]</definition>
        <argsstring>(difference_type n)</argsstring>
        <name>operator[]</name>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="58" column="11" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1aa3cc58256db301824c7a1669d278c4ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; psl::static_ring_array&lt; T, N &gt;::iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="60" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1a1cd4941e4c5ab66a759b464c0146c512" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator psl::static_ring_array&lt; T, N &gt;::iterator::operator++</definition>
        <argsstring>(int) const</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="65" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="65" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1a2657ba34532c559cdcec4416f68a70e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; psl::static_ring_array&lt; T, N &gt;::iterator::operator+=</definition>
        <argsstring>(difference_type n)</argsstring>
        <name>operator+=</name>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="71" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1af30d56f85fbefe7cd0e0710ac34b9e85" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator psl::static_ring_array&lt; T, N &gt;::iterator::operator+</definition>
        <argsstring>(difference_type n) const</argsstring>
        <name>operator+</name>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="76" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1a1514ee52a0830af0108595a19f60c458" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; psl::static_ring_array&lt; T, N &gt;::iterator::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="82" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1acc02817673bd42f8cae358f10ffb7b3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator psl::static_ring_array&lt; T, N &gt;::iterator::operator--</definition>
        <argsstring>(int) const</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="87" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="87" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1a5dbd04c0d1d5523e14b71640c7b09f6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; psl::static_ring_array&lt; T, N &gt;::iterator::operator-=</definition>
        <argsstring>(difference_type n)</argsstring>
        <name>operator-=</name>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="93" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="93" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1a6fdace07a6ef5693f6f9919147ab2573" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator psl::static_ring_array&lt; T, N &gt;::iterator::operator-</definition>
        <argsstring>(difference_type n) const</argsstring>
        <name>operator-</name>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="99" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="99" bodyend="104"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classpsl_1_1static__ring__array_1_1iterator_1ad18227cb2b4be1ce0b7e49edfdd3f008" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t psl::static_ring_array&lt; T, N &gt;::iterator::offset_of</definition>
        <argsstring>(size_t index) const noexcept</argsstring>
        <name>offset_of</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="107" column="15" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="107" bodyend="107"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" line="14" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/static_ring_array.hpp" bodystart="13" bodyend="112"/>
    <listofallmembers>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a0ad29062129c93f220c413b83f5eaea8" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>difference_type</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a3131cf04b33fcce11619c30f5d1fa28d" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>iterator</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a1ee227e5c19b05db5277bea6c60b8d97" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>iterator</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a0b8dfde17e0a6fc1e9a3a4ec0e6fc58c" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>iterator</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1ae62f70fd428a4e0de79c2c5ed34fc892" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>iterator</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1aaf26e3cc37711bd4bd5a046aeefa27ff" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>iterator_category</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a11de13dc427a1243da134c5e33c41210" prot="private" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>m_Begin</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a9e9616894d876fcf93db2da2d2c3a8f0" prot="private" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>m_Data</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a686e96625cd411de029acf520740cbe2" prot="private" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>m_Index</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1ad18227cb2b4be1ce0b7e49edfdd3f008" prot="private" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>offset_of</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1ac91a23abf93f8af5f7a7536cd4a50891" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator!=</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a74197840e276704efb3f3f409314f872" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator*</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1af30d56f85fbefe7cd0e0710ac34b9e85" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator+</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1aa3cc58256db301824c7a1669d278c4ed" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator++</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a1cd4941e4c5ab66a759b464c0146c512" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator++</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a2657ba34532c559cdcec4416f68a70e1" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator+=</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a6fdace07a6ef5693f6f9919147ab2573" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator-</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a1514ee52a0830af0108595a19f60c458" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator--</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1acc02817673bd42f8cae358f10ffb7b3c" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator--</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a5dbd04c0d1d5523e14b71640c7b09f6e" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator-=</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a96bfb4fef76b0f18c6f94e9f8c272599" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator-&gt;</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a46bda4987954016cc9e8df247e05afba" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator&lt;</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a44dac0107dd833d78fccf0820ff8701d" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator&lt;=</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a9a6b6e0808d72f9b1a4f5b3199c9924a" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator=</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1af7dc88b1224a586f67e7e7a647ddb07f" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator=</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1ab98f0fd99d78b33c451f250c6d26a9dc" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator==</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1aa52e30143d0353e69e56a463f9fc3bae" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator&gt;</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a60f10b64c28beba3a7ee03961b42d201" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator&gt;=</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a808c5ab6d01ed3fa596ce40802f42e4b" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>operator[]</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a6bfa9c397a802853f6065f0d8033cb2f" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>pointer</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a6a5d24cc2405aa8a76759713813e327c" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>reference</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1acb1bd4226656458ef3af94b3d9935b99" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>swap</name></member>
      <member refid="classpsl_1_1static__ring__array_1_1iterator_1a1b7f0a229a087bb7c7ba26f0ee83ec24" prot="public" virt="non-virtual"><scope>psl::static_ring_array::iterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
