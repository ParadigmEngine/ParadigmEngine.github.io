<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcore_1_1gfx_1_1shader" kind="class" language="C++" prot="public">
    <compoundname>core::gfx::shader</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classcore_1_1gfx_1_1shader_1a1a9f611a3328f9adcb095bdaab23628a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class core::resource::cache_t</definition>
        <argsstring></argsstring>
        <name>core::resource::cache_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/shader.hpp" line="11" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/shader.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcore_1_1gfx_1_1shader_1aeee4a2142436c2c7d1b2b9b6c2612501" prot="private" static="no" mutable="no">
        <type>core::gfx::graphics_backend</type>
        <definition>core::gfx::graphics_backend core::gfx::shader::m_Backend</definition>
        <argsstring></argsstring>
        <name>m_Backend</name>
        <initializer>{graphics_backend::undefined}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/shader.hpp" line="47" column="29" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/shader.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcore_1_1gfx_1_1shader_1ad7e4b4e3bdc6c1156eff8859bda990dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shader::shader</definition>
        <argsstring>(core::resource::cache_t &amp;cache, const core::resource::metadata &amp;metaData, core::meta::shader *metaFile, core::resource::handle&lt; core::gfx::context &gt; context)</argsstring>
        <name>shader</name>
        <param>
          <type>core::resource::cache_t &amp;</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const <ref refid="structcore_1_1resource_1_1metadata" kindref="compound">core::resource::metadata</ref> &amp;</type>
          <declname>metaData</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1meta_1_1shader" kindref="compound">core::meta::shader</ref> *</type>
          <declname>metaFile</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; core::gfx::context &gt;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/shader.hpp" line="21" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/shader.cpp" bodystart="28" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1shader_1a36649c2e1f9751d2bffb42eecfe93c37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>shader::~shader</definition>
        <argsstring>()=default</argsstring>
        <name>~shader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/shader.hpp" line="25" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/shader.cpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1shader_1a383ae683b5532aecc34739b1e93061f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::gfx::shader::shader</definition>
        <argsstring>(const shader &amp;other)=default</argsstring>
        <name>shader</name>
        <param>
          <type>const shader &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/shader.hpp" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1shader_1ae7e58b0a1a9ba4b593e3658541f274bc" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>core::gfx::shader::shader</definition>
        <argsstring>(shader &amp;&amp;other) noexcept=default</argsstring>
        <name>shader</name>
        <param>
          <type>shader &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/shader.hpp" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1shader_1ab501abd2d407455c63cf70d6792a2d12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>shader &amp;</type>
        <definition>shader&amp; core::gfx::shader::operator=</definition>
        <argsstring>(const shader &amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const shader &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/shader.hpp" line="29" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1shader_1a6c72b9e8477db2fcb18780b3ebd01cb2" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>shader &amp;</type>
        <definition>shader&amp; core::gfx::shader::operator=</definition>
        <argsstring>(shader &amp;&amp;other) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>shader &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/shader.hpp" line="30" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1shader_1a4a8c96ce1decc32dde68bf99445ddaf4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>core::gfx::graphics_backend</type>
            <declname>backend</declname>
            <defname>backend</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; backend_type_t&lt; shader, backend &gt; &gt;</type>
        <definition>core::resource::handle&lt;backend_type_t&lt;shader, backend&gt; &gt; core::gfx::shader::resource</definition>
        <argsstring>() const noexcept</argsstring>
        <name>resource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/shader.hpp" line="34" column="24" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/shader.hpp" bodystart="34" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1shader_1a73a8fdfe848d97ef14d351ebe8933e65" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classcore_1_1meta_1_1shader" kindref="compound">core::meta::shader</ref> *</type>
        <definition>core::meta::shader * shader::meta</definition>
        <argsstring>() const noexcept</argsstring>
        <name>meta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/shader.hpp" line="44" column="20" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/shader.cpp" bodystart="50" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/shader.hpp" line="10" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/shader.hpp" bodystart="9" bodyend="54"/>
    <listofallmembers>
      <member refid="classcore_1_1gfx_1_1shader_1a1a9f611a3328f9adcb095bdaab23628a" prot="public" virt="non-virtual"><scope>core::gfx::shader</scope><name>core::resource::cache_t</name></member>
      <member refid="classcore_1_1gfx_1_1shader_1aeee4a2142436c2c7d1b2b9b6c2612501" prot="private" virt="non-virtual"><scope>core::gfx::shader</scope><name>m_Backend</name></member>
      <member refid="classcore_1_1gfx_1_1shader_1a73a8fdfe848d97ef14d351ebe8933e65" prot="public" virt="non-virtual"><scope>core::gfx::shader</scope><name>meta</name></member>
      <member refid="classcore_1_1gfx_1_1shader_1ab501abd2d407455c63cf70d6792a2d12" prot="public" virt="non-virtual"><scope>core::gfx::shader</scope><name>operator=</name></member>
      <member refid="classcore_1_1gfx_1_1shader_1a6c72b9e8477db2fcb18780b3ebd01cb2" prot="public" virt="non-virtual"><scope>core::gfx::shader</scope><name>operator=</name></member>
      <member refid="classcore_1_1gfx_1_1shader_1a4a8c96ce1decc32dde68bf99445ddaf4" prot="public" virt="non-virtual"><scope>core::gfx::shader</scope><name>resource</name></member>
      <member refid="classcore_1_1gfx_1_1shader_1ad7e4b4e3bdc6c1156eff8859bda990dc" prot="public" virt="non-virtual"><scope>core::gfx::shader</scope><name>shader</name></member>
      <member refid="classcore_1_1gfx_1_1shader_1a383ae683b5532aecc34739b1e93061f7" prot="public" virt="non-virtual"><scope>core::gfx::shader</scope><name>shader</name></member>
      <member refid="classcore_1_1gfx_1_1shader_1ae7e58b0a1a9ba4b593e3658541f274bc" prot="public" virt="non-virtual"><scope>core::gfx::shader</scope><name>shader</name></member>
      <member refid="classcore_1_1gfx_1_1shader_1a36649c2e1f9751d2bffb42eecfe93c37" prot="public" virt="non-virtual"><scope>core::gfx::shader</scope><name>~shader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
