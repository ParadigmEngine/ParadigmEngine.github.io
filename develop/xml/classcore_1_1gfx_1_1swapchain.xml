<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcore_1_1gfx_1_1swapchain" kind="class" language="C++" prot="public">
    <compoundname>core::gfx::swapchain</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcore_1_1gfx_1_1swapchain_1a1ba0844f06e2566f488c97071c076b25" prot="private" static="no" mutable="no">
        <type>core::gfx::graphics_backend</type>
        <definition>core::gfx::graphics_backend core::gfx::swapchain::m_Backend</definition>
        <argsstring></argsstring>
        <name>m_Backend</name>
        <initializer>{graphics_backend::undefined}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/swapchain.hpp" line="51" column="29" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/swapchain.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcore_1_1gfx_1_1swapchain_1a1f9e804f06f6e39253fb59df9328fcae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>swapchain::swapchain</definition>
        <argsstring>(core::resource::cache_t &amp;cache, const core::resource::metadata &amp;metaData, psl::meta::file *metaFile, core::resource::handle&lt; core::os::surface &gt; surface, core::resource::handle&lt; core::gfx::context &gt; context, bool use_depth=true)</argsstring>
        <name>swapchain</name>
        <param>
          <type>core::resource::cache_t &amp;</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const <ref refid="structcore_1_1resource_1_1metadata" kindref="compound">core::resource::metadata</ref> &amp;</type>
          <declname>metaData</declname>
        </param>
        <param>
          <type><ref refid="classpsl_1_1meta_1_1file" kindref="compound">psl::meta::file</ref> *</type>
          <declname>metaFile</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1os_1_1surface" kindref="compound">core::os::surface</ref> &gt;</type>
          <declname>surface</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; core::gfx::context &gt;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_depth</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/swapchain.hpp" line="25" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/swapchain.cpp" bodystart="27" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1swapchain_1a724e4e5ac6e91441a2202541b8d8e913" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>swapchain::~swapchain</definition>
        <argsstring>()</argsstring>
        <name>~swapchain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/swapchain.hpp" line="32" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/swapchain.hpp" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1swapchain_1af9c2d611ea733a17c4f9b5b6a816c3b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::gfx::swapchain::swapchain</definition>
        <argsstring>(const swapchain &amp;other)=delete</argsstring>
        <name>swapchain</name>
        <param>
          <type>const swapchain &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/swapchain.hpp" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1swapchain_1a6b9d0c9bb85eb78cf4d0a87c7ef49f2f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>core::gfx::swapchain::swapchain</definition>
        <argsstring>(swapchain &amp;&amp;other) noexcept=delete</argsstring>
        <name>swapchain</name>
        <param>
          <type>swapchain &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/swapchain.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1swapchain_1a25840bea73b6f215bf28bd8fa1f27cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>swapchain &amp;</type>
        <definition>swapchain&amp; core::gfx::swapchain::operator=</definition>
        <argsstring>(const swapchain &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const swapchain &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/swapchain.hpp" line="36" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1swapchain_1a63182fcd368c3451196e7da38bd83f33" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>swapchain &amp;</type>
        <definition>swapchain&amp; core::gfx::swapchain::operator=</definition>
        <argsstring>(swapchain &amp;&amp;other) noexcept=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>swapchain &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/swapchain.hpp" line="37" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1swapchain_1aa3bebc0b235052785de93185b102bf35" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>core::gfx::graphics_backend</type>
            <declname>backend</declname>
            <defname>backend</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; backend_type_t&lt; swapchain, backend &gt; &gt;</type>
        <definition>core::resource::handle&lt;backend_type_t&lt;swapchain, backend&gt; &gt; core::gfx::swapchain::resource</definition>
        <argsstring>() const noexcept</argsstring>
        <name>resource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/swapchain.hpp" line="40" column="24" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/swapchain.hpp" bodystart="40" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/swapchain.hpp" line="16" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/swapchain.hpp" bodystart="15" bodyend="58"/>
    <listofallmembers>
      <member refid="classcore_1_1gfx_1_1swapchain_1a1ba0844f06e2566f488c97071c076b25" prot="private" virt="non-virtual"><scope>core::gfx::swapchain</scope><name>m_Backend</name></member>
      <member refid="classcore_1_1gfx_1_1swapchain_1a25840bea73b6f215bf28bd8fa1f27cf5" prot="public" virt="non-virtual"><scope>core::gfx::swapchain</scope><name>operator=</name></member>
      <member refid="classcore_1_1gfx_1_1swapchain_1a63182fcd368c3451196e7da38bd83f33" prot="public" virt="non-virtual"><scope>core::gfx::swapchain</scope><name>operator=</name></member>
      <member refid="classcore_1_1gfx_1_1swapchain_1aa3bebc0b235052785de93185b102bf35" prot="public" virt="non-virtual"><scope>core::gfx::swapchain</scope><name>resource</name></member>
      <member refid="classcore_1_1gfx_1_1swapchain_1a1f9e804f06f6e39253fb59df9328fcae" prot="public" virt="non-virtual"><scope>core::gfx::swapchain</scope><name>swapchain</name></member>
      <member refid="classcore_1_1gfx_1_1swapchain_1af9c2d611ea733a17c4f9b5b6a816c3b3" prot="public" virt="non-virtual"><scope>core::gfx::swapchain</scope><name>swapchain</name></member>
      <member refid="classcore_1_1gfx_1_1swapchain_1a6b9d0c9bb85eb78cf4d0a87c7ef49f2f" prot="public" virt="non-virtual"><scope>core::gfx::swapchain</scope><name>swapchain</name></member>
      <member refid="classcore_1_1gfx_1_1swapchain_1a724e4e5ac6e91441a2202541b8d8e913" prot="public" virt="non-virtual"><scope>core::gfx::swapchain</scope><name>~swapchain</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
