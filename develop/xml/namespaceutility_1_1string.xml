<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespaceutility_1_1string" kind="namespace" language="C++">
    <compoundname>utility::string</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceutility_1_1string_1a3714175bb91ae28a40acdd52367ed675" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>psl::string8_t</type>
        <definition>psl::string8_t utility::string::to_hex</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>to_hex</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>transforms the input value to a psl::string8_t containing the hex characters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to transform </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a string containing the hex value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="33" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1aaf244cedfacacaee9878e1959b0da878" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TOut</type>
          </param>
          <param>
            <type>typename TIn</type>
          </param>
        </templateparamlist>
        <type>TOut</type>
        <definition>TOut utility::string::lexical_cast</definition>
        <argsstring>(const TIn &amp;in)</argsstring>
        <name>lexical_cast</name>
        <param>
          <type>const TIn &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="47" column="13" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="47" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1a2cc2afd7074e14ac8d76f6580abee3c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T utility::string::from_hex</definition>
        <argsstring>(const psl::string8_t &amp;str)</argsstring>
        <name>from_hex</name>
        <param>
          <type>const psl::string8_t &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>cast the input string containing a hex value, to the given type </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>the type to convert the output to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string containing the hex value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an object of type T that has been constructed using the hex value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="63" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1a8f9bf4e4eb0c0d0a66ee60688ebad366" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::string8_t</type>
        <definition>psl::string32_t utility::string::to_upper</definition>
        <argsstring>(psl::string8::view str)</argsstring>
        <name>to_upper</name>
        <param>
          <type>psl::string8::view</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>convert the given input string to capital letters (if possible). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to transform. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the transformed string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="91" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="91" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1ace061715cf87b53afc99cc1c8c8f6412" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::string8_t &amp;</type>
        <definition>psl::string32_t &amp; utility::string::to_upper</definition>
        <argsstring>(psl::string8_t &amp;str)</argsstring>
        <name>to_upper</name>
        <param>
          <type>psl::string8_t &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>convert the given input string to capital letters (if possible). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to transform. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the transformed string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="121" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="121" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1a23a994fac13d018e20bceefe0bebb3d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::string8_t</type>
        <definition>psl::string32_t utility::string::to_lower</definition>
        <argsstring>(psl::string8::view str)</argsstring>
        <name>to_lower</name>
        <param>
          <type>psl::string8::view</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>convert the given input string to lowercase letters (if possible). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to transform. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the transformed string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="148" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="148" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1a8471bf76874b0819b648e6e3c1e15da7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::string8_t &amp;</type>
        <definition>psl::string32_t &amp; utility::string::to_lower</definition>
        <argsstring>(psl::string8_t &amp;str)</argsstring>
        <name>to_lower</name>
        <param>
          <type>psl::string8_t &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>convert the given input string to lowercase letters (if possible). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">str</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to transform. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the transformed string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="179" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="179" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1affb1d501a791030dff68d6eadac11aa1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; psl::string8::view &gt; &amp;</type>
        <definition>std::vector&lt;psl::string8::view&gt;&amp; utility::string::split</definition>
        <argsstring>(psl::string8::view s, psl::string8::view delimiter, std::vector&lt; psl::string8::view &gt; &amp;inout, bool ignore_consecutive=false)</argsstring>
        <name>split</name>
        <param>
          <type>psl::string8::view</type>
          <declname>s</declname>
        </param>
        <param>
          <type>psl::string8::view</type>
          <declname>delimiter</declname>
        </param>
        <param>
          <type>std::vector&lt; psl::string8::view &gt; &amp;</type>
          <declname>inout</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_consecutive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="203" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="203" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1aabbee3e6aadd02f18b5300a5185c081c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; psl::string8::view &gt;</type>
        <definition>std::vector&lt;psl::string8::view&gt; utility::string::split</definition>
        <argsstring>(psl::string8::view s, psl::string8::view delimiter, bool ignore_consecutive=true)</argsstring>
        <name>split</name>
        <param>
          <type>psl::string8::view</type>
          <declname>s</declname>
        </param>
        <param>
          <type>psl::string8::view</type>
          <declname>delimiter</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_consecutive</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="236" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="236" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1a76c2ae0789587df8698bd9cdaeb6f11f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; psl::string16::view &gt; &amp;</type>
        <definition>std::vector&lt; psl::string32::view &gt; &amp; utility::string::split</definition>
        <argsstring>(psl::string16::view s, psl::string16::view delimiter, std::vector&lt; psl::string16::view &gt; &amp;inout)</argsstring>
        <name>split</name>
        <param>
          <type>psl::string16::view</type>
          <declname>s</declname>
        </param>
        <param>
          <type>psl::string16::view</type>
          <declname>delimiter</declname>
        </param>
        <param>
          <type>std::vector&lt; psl::string16::view &gt; &amp;</type>
          <declname>inout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="244" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="244" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1ae26249ccfaa0e7dc951de406f43b18d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; psl::string16::view &gt;</type>
        <definition>std::vector&lt; psl::string32::view &gt; utility::string::split</definition>
        <argsstring>(psl::string16::view s, psl::string16::view delimiter)</argsstring>
        <name>split</name>
        <param>
          <type>psl::string16::view</type>
          <declname>s</declname>
        </param>
        <param>
          <type>psl::string16::view</type>
          <declname>delimiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="258" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="258" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1a2ad7600df5d8065d82bd2b65d82e1032" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t utility::string::size</definition>
        <argsstring>(const std::vector&lt; psl::string8::view &gt; &amp;values)</argsstring>
        <name>size</name>
        <param>
          <type>const std::vector&lt; psl::string8::view &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="288" column="15" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="288" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1a27ab108ad1eceb1dc07813a4a614513d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::string16_t &amp;</type>
        <definition>psl::string32_t &amp; utility::string::erase_consecutive</definition>
        <argsstring>(psl::string16_t &amp;str, psl::string16::view consecutive)</argsstring>
        <name>erase_consecutive</name>
        <param>
          <type>psl::string16_t &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>psl::string16::view</type>
          <declname>consecutive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="319" column="24" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="319" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1aadec6830dc467d71f0c37bc4a486b98f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t utility::string::contains</definition>
        <argsstring>(psl::string8::view s, psl::string8::view search)</argsstring>
        <name>contains</name>
        <param>
          <type>psl::string8::view</type>
          <declname>s</declname>
        </param>
        <param>
          <type>psl::string8::view</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="348" column="15" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="348" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1ad515f82943398fa563e448a33656b06c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t utility::string::count</definition>
        <argsstring>(psl::string8::view s, psl::string8::view search)</argsstring>
        <name>count</name>
        <param>
          <type>psl::string8::view</type>
          <declname>s</declname>
        </param>
        <param>
          <type>psl::string8::view</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="363" column="15" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="363" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1a4af3db6a9e35da01b3ee503bc13c1b51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool utility::string::replace</definition>
        <argsstring>(psl::string8_t &amp;str, psl::string8::view from, psl::string8::view to)</argsstring>
        <name>replace</name>
        <param>
          <type>psl::string8_t &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>psl::string8::view</type>
          <declname>from</declname>
        </param>
        <param>
          <type>psl::string8::view</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="406" column="13" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="406" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1aca19ee433c589a33c2bd6f60c8959036" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool utility::string::replace_all</definition>
        <argsstring>(psl::string8_t &amp;str, psl::string8::view from, psl::string8::view to)</argsstring>
        <name>replace_all</name>
        <param>
          <type>psl::string8_t &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>psl::string8::view</type>
          <declname>from</declname>
        </param>
        <param>
          <type>psl::string8::view</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="429" column="13" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="429" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1a75f46718c4e21540cebd7218f1d12c56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::string8_t</type>
        <definition>psl::string32_t utility::string::replace_all</definition>
        <argsstring>(psl::string8::view str, psl::string8::view from, psl::string8::view to)</argsstring>
        <name>replace_all</name>
        <param>
          <type>psl::string8::view</type>
          <declname>str</declname>
        </param>
        <param>
          <type>psl::string8::view</type>
          <declname>from</declname>
        </param>
        <param>
          <type>psl::string8::view</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="443" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="443" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1a3125d52eade3451fdbecfff46f686ef8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t utility::string::remove_all</definition>
        <argsstring>(psl::string8_t &amp;str, psl::string8::view pattern)</argsstring>
        <name>remove_all</name>
        <param>
          <type>psl::string8_t &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>psl::string8::view</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="492" column="15" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="492" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1a6753ec204adc5bbc590b77a0c8e0e56b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t utility::string::remove_all</definition>
        <argsstring>(psl::string8_t &amp;str, psl::string8::view pattern, size_t startOffset, size_t &amp;endOffset)</argsstring>
        <name>remove_all</name>
        <param>
          <type>psl::string8_t &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>psl::string8::view</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>startOffset</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>endOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="504" column="15" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="504" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1afbba3caafe13dd375091add22086315a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t utility::string::remove_all</definition>
        <argsstring>(psl::string8_t &amp;str, const std::vector&lt; psl::string8::view &gt; &amp;patterns, size_t startOffset, size_t &amp;endOffset)</argsstring>
        <name>remove_all</name>
        <param>
          <type>psl::string8_t &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const std::vector&lt; psl::string8::view &gt; &amp;</type>
          <declname>patterns</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>startOffset</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>endOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="518" column="15" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="518" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1a42106afaa149587b3293c13b15ac579c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; size_t &gt;</type>
        <definition>std::vector&lt; size_t &gt; utility::string::locations</definition>
        <argsstring>(psl::string8::view s, psl::string8::view search)</argsstring>
        <name>locations</name>
        <param>
          <type>psl::string8::view</type>
          <declname>s</declname>
        </param>
        <param>
          <type>psl::string8::view</type>
          <declname>search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="613" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="613" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1a212b6466a542d322867090b3a4c5ba99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::string_view::size_type</type>
        <definition>psl::string_view::size_type utility::string::rfind_first_of</definition>
        <argsstring>(psl::string_view source, psl::string_view tokens, const psl::string_view::size_type offset=psl::string_view::npos)</argsstring>
        <name>rfind_first_of</name>
        <param>
          <type>psl::string_view</type>
          <declname>source</declname>
        </param>
        <param>
          <type>psl::string_view</type>
          <declname>tokens</declname>
        </param>
        <param>
          <type>const psl::string_view::size_type</type>
          <declname>offset</declname>
          <defval>psl::string_view::npos</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="657" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="657" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1a1d298cf2186eda5607b886418f101d7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::string_view::size_type</type>
        <definition>psl::string_view::size_type utility::string::rfind_first_of</definition>
        <argsstring>(psl::string_view source, psl::char_t token, const psl::string_view::size_type offset=psl::string_view::npos)</argsstring>
        <name>rfind_first_of</name>
        <param>
          <type>psl::string_view</type>
          <declname>source</declname>
        </param>
        <param>
          <type>psl::char_t</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const psl::string_view::size_type</type>
          <declname>offset</declname>
          <defval>psl::string_view::npos</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="671" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="671" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1a426a02c9eb32d5616853ccc800e40e3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::string_view::size_type</type>
        <definition>psl::string_view::size_type utility::string::rfind_first_not_of</definition>
        <argsstring>(psl::string_view source, psl::string_view tokens, const psl::string_view::size_type offset=psl::string_view::npos)</argsstring>
        <name>rfind_first_not_of</name>
        <param>
          <type>psl::string_view</type>
          <declname>source</declname>
        </param>
        <param>
          <type>psl::string_view</type>
          <declname>tokens</declname>
        </param>
        <param>
          <type>const psl::string_view::size_type</type>
          <declname>offset</declname>
          <defval>psl::string_view::npos</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="686" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="686" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1a1d66c144cab68189aa0c25f0e0ddc01f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::string_view::size_type</type>
        <definition>psl::string_view::size_type utility::string::rfind_first_not_of</definition>
        <argsstring>(psl::string_view source, psl::char_t token, const psl::string_view::size_type offset=psl::string_view::npos)</argsstring>
        <name>rfind_first_not_of</name>
        <param>
          <type>psl::string_view</type>
          <declname>source</declname>
        </param>
        <param>
          <type>psl::char_t</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const psl::string_view::size_type</type>
          <declname>offset</declname>
          <defval>psl::string_view::npos</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="701" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="701" bodyend="713"/>
      </memberdef>
      <memberdef kind="function" id="namespaceutility_1_1string_1a7ade7e19db1d8cd584fd6d49a9c4b100" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>psl::string8_t</type>
        <definition>psl::string8_t utility::string::format</definition>
        <argsstring>(const psl::string8_t &amp;target, Args... args)</argsstring>
        <name>format</name>
        <param>
          <type>const psl::string8_t &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="717" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" bodystart="717" bodyend="723"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>utility namespace to deal with psl::string operations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/string_utils.hpp" line="28" column="1"/>
  </compounddef>
</doxygen>
