<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="vk_2geometry_8cpp" kind="file" language="C++">
    <compoundname>geometry.cpp</compoundname>
    <includes refid="vk_2geometry_8hpp" local="yes">vk/geometry.hpp</includes>
    <includes refid="core_2inc_2data_2buffer_8hpp" local="yes">data/buffer.hpp</includes>
    <includes refid="data_2geometry_8hpp" local="yes">data/geometry.hpp</includes>
    <includes refid="data_2material_8hpp" local="yes">data/material.hpp</includes>
    <includes refid="gfx_2types_8hpp" local="yes">gfx/types.hpp</includes>
    <includes local="yes">logging.hpp</includes>
    <includes refid="meta_2shader_8hpp" local="yes">meta/shader.hpp</includes>
    <includes local="yes">resource/resource.hpp</includes>
    <includes local="yes">vk/buffer.hpp</includes>
    <includes refid="vk_2material_8hpp" local="yes">vk/material.hpp</includes>
    <includes local="yes">vk/shader.hpp</includes>
    <incdepgraph>
      <node id="52">
        <label>list</label>
      </node>
      <node id="51">
        <label>allocator.hpp</label>
        <link refid="allocator_8hpp_source"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>vk/material.hpp</label>
        <link refid="vk_2material_8hpp_source"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>system_error</label>
      </node>
      <node id="40">
        <label>iomanip</label>
      </node>
      <node id="19">
        <label>functional</label>
      </node>
      <node id="26">
        <label>limits</label>
      </node>
      <node id="48">
        <label>assert.h</label>
      </node>
      <node id="79">
        <label>iterator</label>
      </node>
      <node id="78">
        <label>psl/array_view.hpp</label>
        <link refid="array__view_8hpp_source"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>psl/memory/range.hpp</label>
        <link refid="range_8hpp_source"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>psl/math/vec.hpp</label>
        <link refid="vec_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>cstdint</label>
      </node>
      <node id="84">
        <label>psl/library.hpp</label>
        <link refid="library_8hpp_source"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>variant</label>
      </node>
      <node id="25">
        <label>cmath</label>
      </node>
      <node id="17">
        <label>cassert</label>
      </node>
      <node id="13">
        <label>psl/platform_def.hpp</label>
        <link refid="platform__def_8hpp_source"/>
      </node>
      <node id="89">
        <label>stdexcept</label>
      </node>
      <node id="41">
        <label>numeric</label>
      </node>
      <node id="10">
        <label>psl/template_utils.hpp</label>
        <link refid="template__utils_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>psl/math/AVX2/matrix.hpp</label>
        <link refid="_a_v_x2_2matrix_8hpp_source"/>
      </node>
      <node id="49">
        <label>data/buffer.hpp</label>
        <link refid="core_2inc_2data_2buffer_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>unordered_set</label>
      </node>
      <node id="85">
        <label>vk/buffer.hpp</label>
      </node>
      <node id="2">
        <label>vk/geometry.hpp</label>
        <link refid="vk_2geometry_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>fstream</label>
      </node>
      <node id="76">
        <label>psl/math/SSE/matrix.hpp</label>
        <link refid="_s_s_e_2matrix_8hpp_source"/>
      </node>
      <node id="70">
        <label>data/geometry.hpp</label>
        <link refid="data_2geometry_8hpp_source"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>psl/string_utils.hpp</label>
        <link refid="string__utils_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>psl/details/fixed_astring.hpp</label>
        <link refid="fixed__astring_8hpp_source"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="50">
        <label>psl/memory/region.hpp</label>
        <link refid="region_8hpp_source"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>string_view</label>
      </node>
      <node id="77">
        <label>psl/math/fallback/matrix.hpp</label>
        <link refid="fallback_2matrix_8hpp_source"/>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>psl/binary_utils.hpp</label>
        <link refid="binary__utils_8hpp_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>psl/logging.hpp</label>
        <link refid="psl_2inc_2psl_2logging_8hpp_source"/>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>data/stream.hpp</label>
        <link refid="stream_8hpp_source"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>cstdio</label>
      </node>
      <node id="3">
        <label>fwd/gfx/context.hpp</label>
        <link refid="fwd_2gfx_2context_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>bitset</label>
      </node>
      <node id="87">
        <label>gfx/details/instance.hpp</label>
        <link refid="instance_8hpp_source"/>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/paradigm/paradigm/core/src/vk/geometry.cpp</label>
        <link refid="vk_2geometry_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>psl/crc32.hpp</label>
        <link refid="crc32_8hpp_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>optional</label>
      </node>
      <node id="53">
        <label>stack</label>
      </node>
      <node id="44">
        <label>vector</label>
      </node>
      <node id="18">
        <label>signal.h</label>
      </node>
      <node id="5">
        <label>gfx/types.hpp</label>
        <link refid="gfx_2types_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>psl/format.hpp</label>
        <link refid="format_8hpp_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>utility</label>
      </node>
      <node id="8">
        <label>array</label>
      </node>
      <node id="42">
        <label>sstream</label>
      </node>
      <node id="4">
        <label>fwd/resource/resource.hpp</label>
        <link refid="fwd_2resource_2resource_8hpp_source"/>
      </node>
      <node id="88">
        <label>psl/IDGenerator.hpp</label>
        <link refid="_i_d_generator_8hpp_source"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>psl/math/fallback/vec.hpp</label>
        <link refid="fallback_2vec_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>psl/concepts.hpp</label>
        <link refid="concepts_8hpp_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>psl/math/SSE/vec.hpp</label>
        <link refid="_s_s_e_2vec_8hpp_source"/>
      </node>
      <node id="91">
        <label>cstdlib</label>
      </node>
      <node id="61">
        <label>clocale</label>
      </node>
      <node id="60">
        <label>cctype</label>
      </node>
      <node id="74">
        <label>psl/math/AVX/matrix.hpp</label>
        <link refid="_a_v_x_2matrix_8hpp_source"/>
      </node>
      <node id="36">
        <label>resource/resource.hpp</label>
      </node>
      <node id="9">
        <label>cstddef</label>
      </node>
      <node id="72">
        <label>psl/array.hpp</label>
        <link refid="array_8hpp_source"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>psl/sparse_array.hpp</label>
        <link refid="sparse__array_8hpp_source"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>unordered_map</label>
      </node>
      <node id="7">
        <label>psl/static_array.hpp</label>
        <link refid="static__array_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>psl/platform_utils.hpp</label>
        <link refid="platform__utils_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>psl/math/AVX2/vec.hpp</label>
        <link refid="_a_v_x2_2vec_8hpp_source"/>
      </node>
      <node id="37">
        <label>vk/ivk.hpp</label>
        <link refid="ivk_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>psl/serialization/property.hpp</label>
        <link refid="property_8hpp_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>logging.hpp</label>
      </node>
      <node id="93">
        <label>vk/shader.hpp</label>
      </node>
      <node id="81">
        <label>psl/meta.hpp</label>
        <link refid="meta_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>concepts</label>
      </node>
      <node id="28">
        <label>psl/math/AVX/vec.hpp</label>
        <link refid="_a_v_x_2vec_8hpp_source"/>
      </node>
      <node id="63">
        <label>thread</label>
      </node>
      <node id="20">
        <label>type_traits</label>
      </node>
      <node id="34">
        <label>psl/memory/segment.hpp</label>
        <link refid="segment_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>algorithm</label>
      </node>
      <node id="83">
        <label>meta/shader.hpp</label>
        <link refid="meta_2shader_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdio.h</label>
      </node>
      <node id="15">
        <label>cstring</label>
      </node>
      <node id="45">
        <label>vulkan/vulkan.hpp</label>
      </node>
      <node id="73">
        <label>psl/math/matrix.hpp</label>
        <link refid="matrix_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>memory</label>
      </node>
      <node id="56">
        <label>psl/serialization/serializer.hpp</label>
        <link refid="serializer_8hpp_source"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>psl/assertions.hpp</label>
        <link refid="assertions_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>psl/expected.hpp</label>
        <link refid="expected_8hpp_source"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>experimental/filesystem</label>
      </node>
      <node id="80">
        <label>data/material.hpp</label>
        <link refid="data_2material_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>psl/ustring.hpp</label>
        <link refid="ustring_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="vk_2geometry_8cpp_1ad886a6478dcdf068f0e66b7040cc9168" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr const vk::IndexType</type>
        <definition>constexpr const vk::IndexType INDEX_TYPE</definition>
        <argsstring></argsstring>
        <name>INDEX_TYPE</name>
        <initializer>=
  sizeof(core::data::geometry_t::index_size_t) == 2 ? vk::IndexType::eUint16 : vk::IndexType::eUint32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/src/vk/geometry.cpp" line="18" column="31" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/geometry.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;vk/geometry.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;data/buffer.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;data/geometry.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;data/material.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gfx/types.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;logging.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;meta/shader.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;resource/resource.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vk/buffer.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vk/material.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;vk/shader.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacepsl" kindref="compound">psl</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecore_1_1resource" kindref="compound">core::resource</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecore" kindref="compound">core</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecore_1_1ivk" kindref="compound">core::ivk</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">constexpr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vk::IndexType<sp/>INDEX_TYPE<sp/>=</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(core::data::geometry_t::index_size_t)<sp/>==<sp/>2<sp/>?<sp/>vk::IndexType::eUint16<sp/>:<sp/>vk::IndexType::eUint32;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classcore_1_1ivk_1_1geometry__t_1ae04c926f9676756b5cdf72f614b72791" refkind="member"><highlight class="normal">geometry_t::geometry_t(core::resource::cache_t&amp;<sp/>cache,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcore_1_1resource_1_1metadata" kindref="compound">core::resource::metadata</ref>&amp;<sp/>metaData,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpsl_1_1meta_1_1file" kindref="compound">psl::meta::file</ref>*<sp/>metaFile,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcore_1_1resource_1_1handle" kindref="compound">handle&lt;core::ivk::context&gt;</ref><sp/><ref refid="classcore_1_1ivk_1_1context" kindref="compound">context</ref>,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle&lt;core::data::geometry_t&gt;</ref><sp/><ref refid="namespacecore_1_1data" kindref="compound">data</ref>,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle&lt;core::ivk::buffer_t&gt;</ref><sp/>geometryBuffer,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle&lt;core::ivk::buffer_t&gt;</ref><sp/>indicesBuffer)<sp/>:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Context(<ref refid="classcore_1_1ivk_1_1context" kindref="compound">context</ref>),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Data(<ref refid="namespacecore_1_1data" kindref="compound">data</ref>),<sp/>m_GeometryBuffer(geometryBuffer),<sp/>m_IndicesBuffer(indicesBuffer),<sp/>m_UID(metaData.uid)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>recreate(m_Data);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">geometry_t::~geometry_t()</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!m_GeometryBuffer)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>geometry_t::clear()</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>binding<sp/>:<sp/>m_Bindings)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>check<sp/>makes<sp/>sure<sp/>this<sp/>is<sp/>the<sp/>owner<sp/>of<sp/>the<sp/>memory<sp/>segment.<sp/>if<sp/>there&apos;s<sp/>a<sp/>local<sp/>offset<sp/>it<sp/>means<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>binding<sp/>has<sp/>a<sp/>shared<sp/>memory::segment<sp/>and<sp/>we<sp/>should<sp/>only<sp/>clear<sp/>the<sp/>first<sp/>one<sp/>who<sp/>coincidentally<sp/>starts<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>begin<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(binding.sub_range.begin<sp/>==<sp/>0)<sp/>m_GeometryBuffer-&gt;deallocate(binding.segment);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Bindings.clear();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>the<sp/>earlier<sp/>comment<sp/>for<sp/>geometry<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_IndicesBuffer<sp/>&amp;&amp;<sp/>m_IndicesSubRange.begin<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>m_IndicesSubRange.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_IndicesBuffer-&gt;deallocate(m_IndicesSegment);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Data<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>geometry_t::recreate(<ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle&lt;core::data::geometry_t&gt;</ref><sp/><ref refid="namespacecore_1_1data" kindref="compound">data</ref>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;vk::DeviceSize&gt;<sp/>sizeRequests;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>sizeRequests.reserve(<ref refid="namespacecore_1_1data" kindref="compound">data</ref>-&gt;vertex_streams().size()<sp/>+<sp/>((m_GeometryBuffer<sp/>==<sp/>m_IndicesBuffer)<sp/>?<sp/>1<sp/>:<sp/>0));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>std::for_each(std::begin(<ref refid="namespacecore_1_1data" kindref="compound">data</ref>-&gt;vertex_streams()),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::end(<ref refid="namespacecore_1_1data" kindref="compound">data</ref>-&gt;vertex_streams()),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;sizeRequests](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;psl::string,<sp/>core::stream&gt;&amp;<sp/>element)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeRequests.emplace_back((uint32_t)element.second.bytesize());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_GeometryBuffer<sp/>==<sp/>m_IndicesBuffer)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeRequests.emplace_back((uint32_t)(<ref refid="namespacecore_1_1data" kindref="compound">data</ref>-&gt;indices().size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(core::data::geometry_t::index_size_t)));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>segments<sp/>=<sp/>m_GeometryBuffer-&gt;reserve(sizeRequests,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(segments.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>core::ivk::log-&gt;critical(</highlight><highlight class="stringliteral">&quot;ran<sp/>out<sp/>of<sp/>memory,<sp/>could<sp/>not<sp/>allocate<sp/>enough<sp/>in<sp/>the<sp/>buffer<sp/>to<sp/>accomodate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacecore_1_1data" kindref="compound">data</ref>-&gt;vertex_streams().size()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Vertices<sp/>=<sp/>std::begin(<ref refid="namespacecore_1_1data" kindref="compound">data</ref>-&gt;vertex_streams())-&gt;second.size();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;core::gfx::commit_instruction&gt;<sp/>instructions;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="classcore_1_1stream" kindref="compound">stream</ref><sp/>:<sp/><ref refid="namespacecore_1_1data" kindref="compound">data</ref>-&gt;vertex_streams())</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(m_Vertices<sp/>==<sp/><ref refid="classcore_1_1stream" kindref="compound">stream</ref>.second.<ref refid="classcore_1_1stream_1a729c8f7d00b72a61343ec38b3db8a0fa" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>instr<sp/><sp/><sp/>=<sp/>instructions.emplace_back();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instr.size<sp/><sp/><sp/><sp/>=<sp/><ref refid="classcore_1_1stream" kindref="compound">stream</ref>.second.<ref refid="classcore_1_1stream_1a626f602096bc9a46cba61422d2ef4141" kindref="member">bytesize</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instr.source<sp/><sp/>=<sp/>(std::uintptr_t)(<ref refid="classcore_1_1stream" kindref="compound">stream</ref>.second.<ref refid="classcore_1_1stream_1ad8c75154b08fbd2e84f9efba17aefb61" kindref="member">cdata</ref>());</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instr.segment<sp/>=<sp/>segments[i].first;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(segments[i].first.range()<sp/>!=<sp/>segments[i].second)<sp/>instr.sub_range<sp/>=<sp/>segments[i].second;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>b<sp/><sp/><sp/><sp/><sp/>=<sp/>m_Bindings.emplace_back();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.name<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classcore_1_1stream" kindref="compound">stream</ref>.first;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.segment<sp/><sp/><sp/>=<sp/>segments[i].first;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b.sub_range<sp/>=<sp/>segments[i].second;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_GeometryBuffer<sp/>!=<sp/>m_IndicesBuffer)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indiceSegment<sp/>=</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_IndicesBuffer-&gt;reserve((uint32_t)(<ref refid="namespacecore_1_1data" kindref="compound">data</ref>-&gt;indices().size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(core::data::geometry_t::index_size_t)));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indiceSegment)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_IndicesSegment<sp/><sp/>=<sp/>indiceSegment.value();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_IndicesSubRange<sp/>=<sp/><ref refid="classmemory_1_1range__t" kindref="compound">memory::range_t</ref><sp/>{0,<sp/>m_IndicesSegment.range().size()};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>core::ivk::log-&gt;critical(</highlight><highlight class="stringliteral">&quot;index<sp/>buffer<sp/>was<sp/>out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>todo<sp/>error<sp/>condition<sp/>could<sp/>not<sp/>allocate<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcore_1_1gfx_1_1commit__instruction" kindref="compound">gfx::commit_instruction</ref><sp/>instr;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instr.<ref refid="structcore_1_1gfx_1_1commit__instruction_1adbf728d7a790a4b913ac402655eac6dc" kindref="member">size</ref><sp/><sp/><sp/><sp/>=<sp/>m_IndicesSegment.range().size();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instr.<ref refid="structcore_1_1gfx_1_1commit__instruction_1ae4a9bb2d1864f00916e25d867ce45f5d" kindref="member">source</ref><sp/><sp/>=<sp/>(std::uintptr_t)<ref refid="namespacecore_1_1data" kindref="compound">data</ref>-&gt;indices().data();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instr.<ref refid="structcore_1_1gfx_1_1commit__instruction_1a7f1f1fa56e849d8f1962a8717b95da46" kindref="member">segment</ref><sp/>=<sp/>m_IndicesSegment;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_IndicesBuffer-&gt;commit({instr});</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>segments.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>instr<sp/><sp/><sp/>=<sp/>instructions.emplace_back();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instr.<ref refid="structcore_1_1gfx_1_1commit__instruction_1adbf728d7a790a4b913ac402655eac6dc" kindref="member">size</ref><sp/><sp/><sp/><sp/>=<sp/>segments[i].second.size();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instr.<ref refid="structcore_1_1gfx_1_1commit__instruction_1ae4a9bb2d1864f00916e25d867ce45f5d" kindref="member">source</ref><sp/><sp/>=<sp/>(std::uintptr_t)<ref refid="namespacecore_1_1data" kindref="compound">data</ref>-&gt;indices().data();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instr.<ref refid="structcore_1_1gfx_1_1commit__instruction_1a7f1f1fa56e849d8f1962a8717b95da46" kindref="member">segment</ref><sp/>=<sp/>segments[i].first;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(segments[i].first.range()<sp/>!=<sp/>segments[i].second)<sp/>instr.<ref refid="structcore_1_1gfx_1_1commit__instruction_1a0e31e7fdd90196dc94a61d7e29cc7895" kindref="member">sub_range</ref><sp/>=<sp/>segments[i].second;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_IndicesSegment<sp/><sp/>=<sp/>segments[i].first;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_IndicesSubRange<sp/>=<sp/>segments[i].second;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Triangles<sp/>=<sp/>(m_IndicesSubRange.size()<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(core::data::geometry_t::index_size_t))<sp/>/<sp/>3u;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>m_GeometryBuffer-&gt;commit(instructions);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Data<sp/>=<sp/><ref refid="classcore_1_1ivk_1_1geometry__t_1ae80f4ae36a39252896cb7c27dcf5e450" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>geometry_t::recreate(<ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle&lt;core::data::geometry_t&gt;</ref><sp/><ref refid="namespacecore_1_1data" kindref="compound">data</ref>,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle&lt;core::ivk::buffer_t&gt;</ref><sp/>geometryBuffer,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle&lt;core::ivk::buffer_t&gt;</ref><sp/>indicesBuffer)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>m_GeometryBuffer<sp/>=<sp/>geometryBuffer;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>m_IndicesBuffer<sp/><sp/>=<sp/>indicesBuffer;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>recreate(<ref refid="namespacecore_1_1data" kindref="compound">data</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="classcore_1_1ivk_1_1geometry__t_1add50ca4c415f04dd841cf3bd27cb3f5c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcore_1_1ivk_1_1geometry__t_1add50ca4c415f04dd841cf3bd27cb3f5c" kindref="member">geometry_t::compatible</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcore_1_1ivk_1_1material__t" kindref="compound">core::ivk::material_t</ref>&amp;<sp/>material)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>stage<sp/>:<sp/>material.data()-&gt;stages())</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>attribute<sp/>:<sp/>stage.attributes())</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!attribute.input_rate()<sp/>||<sp/>attribute.input_rate()<sp/>!=<sp/>core::gfx::vertex_input_rate::vertex)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>b<sp/>:<sp/>m_Bindings)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="namespacepsl_1a5ad1017fc6d07ed98ea6dfb33b63f62c" kindref="member">psl::to_string8_t</ref>(b.name)<sp/>==<sp/>attribute.tag())</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>core::ivk::log-&gt;error(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;missing<sp/>ATTRIBUTE<sp/>[{0}]<sp/>in<sp/>GEOMETRY<sp/>[{1}]&quot;</highlight><highlight class="normal">,<sp/>attribute.tag(),<sp/>utility::to_string(m_UID));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="classcore_1_1ivk_1_1geometry__t_1a5243b6bd1d230f6909dcb09b642ed9bb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcore_1_1ivk_1_1geometry__t_1a5243b6bd1d230f6909dcb09b642ed9bb" kindref="member">geometry_t::bind</ref>(vk::CommandBuffer&amp;<sp/>buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcore_1_1ivk_1_1material__t" kindref="compound">core::ivk::material_t</ref>&amp;<sp/>material)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>stage<sp/>:<sp/>material.data()-&gt;stages())</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>attribute<sp/>:<sp/>stage.attributes())</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!attribute.input_rate()<sp/>||<sp/>attribute.input_rate()<sp/>!=<sp/>core::gfx::vertex_input_rate::vertex)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>binding<sp/>=<sp/>std::find_if(</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::begin(m_Bindings),<sp/>std::end(m_Bindings),<sp/>[tag<sp/>=<sp/>attribute.tag()](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>binding)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>binding.name<sp/>==<sp/>tag.data();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>vk::DeviceSize<sp/>{binding-&gt;segment.range().begin<sp/>+<sp/>binding-&gt;sub_range.begin};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer.bindVertexBuffers(attribute.location(),<sp/>1,<sp/>&amp;m_GeometryBuffer-&gt;gpu_buffer(),<sp/>&amp;offset);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer.bindIndexBuffer(</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_IndicesBuffer-&gt;gpu_buffer(),<sp/>m_IndicesSegment.range().begin<sp/>+<sp/>m_IndicesSubRange.begin,<sp/>INDEX_TYPE);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>geometry_t::vertices()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Vertices;<sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>geometry_t::triangles()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Vertices;<sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>geometry_t::indices()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Vertices<sp/>*<sp/>3;<sp/>}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/paradigm/paradigm/core/src/vk/geometry.cpp"/>
  </compounddef>
</doxygen>
