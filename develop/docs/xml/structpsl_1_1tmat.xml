<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structpsl_1_1tmat" kind="struct" language="C++" prot="public">
    <compoundname>psl::tmat</compoundname>
    <templateparamlist>
      <param>
        <type>typename precision_t</type>
      </param>
      <param>
        <type>size_t</type>
        <declname>columns_n</declname>
        <defname>columns_n</defname>
      </param>
      <param>
        <type>size_t</type>
        <declname>rows_n</declname>
        <defname>rows_n</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structpsl_1_1tmat_1a8479976f13f00a2feb1cee9fd2e92ce7" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto psl::tmat&lt; precision_t, columns_n, rows_n &gt;::column_length</definition>
        <argsstring></argsstring>
        <name>column_length</name>
        <initializer>= rows_n</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="14" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpsl_1_1tmat_1a1a23bb5f9b75b4fe3f0e22c67d334831" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto psl::tmat&lt; precision_t, columns_n, rows_n &gt;::row_length</definition>
        <argsstring></argsstring>
        <name>row_length</name>
        <initializer>= columns_n</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="15" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structpsl_1_1tmat_1a919ca0af1d4f3e70e0846ca7a34100e7" prot="public" static="no" mutable="no">
        <type>std::array&lt; precision_t, columns_n *rows_n &gt;</type>
        <definition>std::array&lt;precision_t, columns_n * rows_n&gt; psl::tmat&lt; precision_t, columns_n, rows_n &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="153" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structpsl_1_1tmat_1ada328ebe38e341372ca3c608a9400ee1" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto psl::tmat&lt; precision_t, columns_n, rows_n &gt;::index_of</definition>
        <argsstring>(size_t row, size_t column) const noexcept</argsstring>
        <name>index_of</name>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>column</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="18" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="18" bodyend="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structpsl_1_1tmat_1ad653d8bf6e60fa4af2d470ee0ba49255" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr psl::tmat&lt; precision_t, columns_n, rows_n &gt;::tmat</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>tmat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="21" column="11"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1ac74039342eb1dc8d8b22eddf565c07de" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;sizeof...(Args) == columns_n * rows_n&gt;::type</defval>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr psl::tmat&lt; precision_t, columns_n, rows_n &gt;::tmat</definition>
        <argsstring>(Args &amp;&amp;... args) noexcept</argsstring>
        <name>tmat</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="23" column="11" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1aed703754304efcafeeefd49e8e1a4cff" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr psl::tmat&lt; precision_t, columns_n, rows_n &gt;::tmat</definition>
        <argsstring>(const precision_t &amp;val) noexcept</argsstring>
        <name>tmat</name>
        <param>
          <type>const precision_t &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="25" column="11" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="25" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1a976934696cca9542f1322e21eb654071" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>columns2_n</declname>
            <defname>columns2_n</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>rows2_n</declname>
            <defname>rows2_n</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr psl::tmat&lt; precision_t, columns_n, rows_n &gt;::tmat</definition>
        <argsstring>(const tmat&lt; precision_t, columns2_n, rows2_n &gt; &amp;val) noexcept</argsstring>
        <name>tmat</name>
        <param>
          <type>const tmat&lt; precision_t, columns2_n, rows2_n &gt; &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="34" column="11" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="34" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1a1f6b21c1f29b99635b605f309280b6d7" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr precision_t &amp;</type>
        <definition>constexpr precision_t&amp; psl::tmat&lt; precision_t, columns_n, rows_n &gt;::operator[]</definition>
        <argsstring>(size_t index) noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="48" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1aea293c8a0541f10896e4c6e18b5a1a00" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const precision_t &amp;</type>
        <definition>constexpr const precision_t&amp; psl::tmat&lt; precision_t, columns_n, rows_n &gt;::operator[]</definition>
        <argsstring>(size_t index) const noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="49" column="29" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1a783d8401a8e5daf0e500bf815427ef02" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr precision_t &amp;</type>
        <definition>constexpr precision_t&amp; psl::tmat&lt; precision_t, columns_n, rows_n &gt;::operator[]</definition>
        <argsstring>(const size_t(&amp;index)[2]) noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type>const size_t(&amp;)</type>
          <declname>index</declname>
          <array>[2]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="52" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1a0e376771a2c83f04af1f447db03d7a62" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const precision_t &amp;</type>
        <definition>constexpr const precision_t&amp; psl::tmat&lt; precision_t, columns_n, rows_n &gt;::operator[]</definition>
        <argsstring>(const size_t(&amp;index)[2]) const noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type>const size_t(&amp;)</type>
          <declname>index</declname>
          <array>[2]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="56" column="29" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1a2908927b2b60cfcf229db5706299653e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr precision_t &amp;</type>
        <definition>constexpr precision_t&amp; psl::tmat&lt; precision_t, columns_n, rows_n &gt;::operator()</definition>
        <argsstring>(size_t row, size_t column) noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>column</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="61" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1a4bd982ce788037c1dec7a4ac586fe2a7" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const precision_t &amp;</type>
        <definition>constexpr const precision_t&amp; psl::tmat&lt; precision_t, columns_n, rows_n &gt;::operator()</definition>
        <argsstring>(size_t row, size_t column) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>column</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="62" column="29" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1aedbcb751124151460fa4d562b48998b8" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr precision_t &amp;</type>
        <definition>constexpr precision_t&amp; psl::tmat&lt; precision_t, columns_n, rows_n &gt;::operator()</definition>
        <argsstring>(size_t index)</argsstring>
        <name>operator()</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="67" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1ad32ad6db43376cd969bc80d8eae0450f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>row</declname>
            <defname>row</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>column</declname>
            <defname>column</defname>
          </param>
        </templateparamlist>
        <type>constexpr precision_t &amp;</type>
        <definition>constexpr precision_t&amp; psl::tmat&lt; precision_t, columns_n, rows_n &gt;::at</definition>
        <argsstring>() noexcept</argsstring>
        <name>at</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="70" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1a5450a2f01ef05e1b8115e0002387e958" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>row</declname>
            <defname>row</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>column</declname>
            <defname>column</defname>
          </param>
        </templateparamlist>
        <type>constexpr const precision_t &amp;</type>
        <definition>constexpr const precision_t&amp; psl::tmat&lt; precision_t, columns_n, rows_n &gt;::at</definition>
        <argsstring>() const noexcept</argsstring>
        <name>at</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="76" column="29" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1a272ea7a37f3822b2c91266d0b6d51b70" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>index</declname>
            <defname>index</defname>
          </param>
        </templateparamlist>
        <type>constexpr tvec&lt; precision_t, column_length &gt;</type>
        <definition>constexpr tvec&lt;precision_t, column_length&gt; psl::tmat&lt; precision_t, columns_n, rows_n &gt;::column</definition>
        <argsstring>() const noexcept</argsstring>
        <name>column</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="83" column="16" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="83" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1ab26e74166959f0ff4e12928e1a1d6aa7" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr tvec&lt; precision_t, column_length &gt;</type>
        <definition>constexpr tvec&lt;precision_t, column_length&gt; psl::tmat&lt; precision_t, columns_n, rows_n &gt;::column</definition>
        <argsstring>(size_t index) const noexcept</argsstring>
        <name>column</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="91" column="16" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="91" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1ad4fae69402f7156cf13e0a9db7e1e296" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>index</declname>
            <defname>index</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void psl::tmat&lt; precision_t, columns_n, rows_n &gt;::column</definition>
        <argsstring>(const tvec&lt; precision_t, column_length &gt; &amp;vector) noexcept</argsstring>
        <name>column</name>
        <param>
          <type>const tvec&lt; precision_t, column_length &gt; &amp;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="100" column="16" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1a3b2864fd678ab6f222e5d80cfdfe7893" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void psl::tmat&lt; precision_t, columns_n, rows_n &gt;::column</definition>
        <argsstring>(size_t index, const tvec&lt; precision_t, column_length &gt; &amp;vector) noexcept</argsstring>
        <name>column</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const tvec&lt; precision_t, column_length &gt; &amp;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="106" column="16" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="106" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1aee5c997421052e60bd949825c1a72b4c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>index</declname>
            <defname>index</defname>
          </param>
        </templateparamlist>
        <type>constexpr tvec&lt; precision_t, columns_n &gt;</type>
        <definition>constexpr tvec&lt;precision_t, columns_n&gt; psl::tmat&lt; precision_t, columns_n, rows_n &gt;::row</definition>
        <argsstring>() const noexcept</argsstring>
        <name>row</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="113" column="16" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="113" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1adcf4f5c0c39e7227940367364ccc6da6" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr tvec&lt; precision_t, columns_n &gt;</type>
        <definition>constexpr tvec&lt;precision_t, columns_n&gt; psl::tmat&lt; precision_t, columns_n, rows_n &gt;::row</definition>
        <argsstring>(size_t index) const noexcept</argsstring>
        <name>row</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="121" column="16" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="121" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1af7ee207a548731d4cc3d19bcdcbc7a6d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>index</declname>
            <defname>index</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void psl::tmat&lt; precision_t, columns_n, rows_n &gt;::row</definition>
        <argsstring>(const tvec&lt; precision_t, row_length &gt; &amp;vector) noexcept</argsstring>
        <name>row</name>
        <param>
          <type>const tvec&lt; precision_t, row_length &gt; &amp;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="130" column="16" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1a05546586b8f99ebc5ffc2cd60a8d5eff" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void psl::tmat&lt; precision_t, columns_n, rows_n &gt;::row</definition>
        <argsstring>(size_t index, const tvec&lt; precision_t, row_length &gt; &amp;vector) noexcept</argsstring>
        <name>row</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const tvec&lt; precision_t, row_length &gt; &amp;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="136" column="16" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="136" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="structpsl_1_1tmat_1ab134b9d511d3d2ae42255b53f5beb8b0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr psl::tvec&lt; precision_t, column_length &gt;</type>
        <definition>constexpr psl::tvec&lt;precision_t, column_length&gt; psl::tmat&lt; precision_t, columns_n, rows_n &gt;::operator*</definition>
        <argsstring>(const tvec&lt; precision_t, column_length &gt; &amp;target) const noexcept</argsstring>
        <name>operator*</name>
        <param>
          <type>const tvec&lt; precision_t, column_length &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="144" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="144" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" line="13" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/math/matrix.hpp" bodystart="12" bodyend="154"/>
    <listofallmembers>
      <member refid="structpsl_1_1tmat_1ad32ad6db43376cd969bc80d8eae0450f" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>at</name></member>
      <member refid="structpsl_1_1tmat_1a5450a2f01ef05e1b8115e0002387e958" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>at</name></member>
      <member refid="structpsl_1_1tmat_1a272ea7a37f3822b2c91266d0b6d51b70" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>column</name></member>
      <member refid="structpsl_1_1tmat_1ab26e74166959f0ff4e12928e1a1d6aa7" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>column</name></member>
      <member refid="structpsl_1_1tmat_1ad4fae69402f7156cf13e0a9db7e1e296" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>column</name></member>
      <member refid="structpsl_1_1tmat_1a3b2864fd678ab6f222e5d80cfdfe7893" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>column</name></member>
      <member refid="structpsl_1_1tmat_1a8479976f13f00a2feb1cee9fd2e92ce7" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>column_length</name></member>
      <member refid="structpsl_1_1tmat_1ada328ebe38e341372ca3c608a9400ee1" prot="private" virt="non-virtual"><scope>psl::tmat</scope><name>index_of</name></member>
      <member refid="structpsl_1_1tmat_1a2908927b2b60cfcf229db5706299653e" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>operator()</name></member>
      <member refid="structpsl_1_1tmat_1a4bd982ce788037c1dec7a4ac586fe2a7" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>operator()</name></member>
      <member refid="structpsl_1_1tmat_1aedbcb751124151460fa4d562b48998b8" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>operator()</name></member>
      <member refid="structpsl_1_1tmat_1ab134b9d511d3d2ae42255b53f5beb8b0" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>operator*</name></member>
      <member refid="structpsl_1_1tmat_1a1f6b21c1f29b99635b605f309280b6d7" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>operator[]</name></member>
      <member refid="structpsl_1_1tmat_1aea293c8a0541f10896e4c6e18b5a1a00" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>operator[]</name></member>
      <member refid="structpsl_1_1tmat_1a783d8401a8e5daf0e500bf815427ef02" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>operator[]</name></member>
      <member refid="structpsl_1_1tmat_1a0e376771a2c83f04af1f447db03d7a62" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>operator[]</name></member>
      <member refid="structpsl_1_1tmat_1aee5c997421052e60bd949825c1a72b4c" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>row</name></member>
      <member refid="structpsl_1_1tmat_1adcf4f5c0c39e7227940367364ccc6da6" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>row</name></member>
      <member refid="structpsl_1_1tmat_1af7ee207a548731d4cc3d19bcdcbc7a6d" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>row</name></member>
      <member refid="structpsl_1_1tmat_1a05546586b8f99ebc5ffc2cd60a8d5eff" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>row</name></member>
      <member refid="structpsl_1_1tmat_1a1a23bb5f9b75b4fe3f0e22c67d334831" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>row_length</name></member>
      <member refid="structpsl_1_1tmat_1ad653d8bf6e60fa4af2d470ee0ba49255" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>tmat</name></member>
      <member refid="structpsl_1_1tmat_1ac74039342eb1dc8d8b22eddf565c07de" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>tmat</name></member>
      <member refid="structpsl_1_1tmat_1aed703754304efcafeeefd49e8e1a4cff" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>tmat</name></member>
      <member refid="structpsl_1_1tmat_1a976934696cca9542f1322e21eb654071" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>tmat</name></member>
      <member refid="structpsl_1_1tmat_1a919ca0af1d4f3e70e0846ca7a34100e7" prot="public" virt="non-virtual"><scope>psl::tmat</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
