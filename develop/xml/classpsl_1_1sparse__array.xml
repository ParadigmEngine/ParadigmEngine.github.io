<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpsl_1_1sparse__array" kind="class" language="C++" prot="public">
    <compoundname>psl::sparse_array</compoundname>
    <includes refid="sparse__array_8hpp" local="no">sparse_array.hpp</includes>
    <innerclass refid="classpsl_1_1sparse__array_1_1iterator" prot="public">psl::sparse_array::iterator</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename Key</type>
        <defval>size_t</defval>
      </param>
      <param>
        <type>Key</type>
        <declname>chunks_size</declname>
        <defname>chunks_size</defname>
        <defval>4096</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classpsl_1_1sparse__array_1a2d4dbda3f84cb629d04121c6b55ddc1d" prot="private" static="no">
        <type>T</type>
        <definition>using psl::sparse_array&lt; T, Key, chunks_size &gt;::type_t =  T</definition>
        <argsstring></argsstring>
        <name>type_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="13" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1sparse__array_1a2ddee3898a09adb7034a13d2498d50d1" prot="private" static="no">
        <type>Key</type>
        <definition>using psl::sparse_array&lt; T, Key, chunks_size &gt;::index_type =  Key</definition>
        <argsstring></argsstring>
        <name>index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="14" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classpsl_1_1sparse__array_1a19e63578b0eff2d98b3739423ea2cd58" prot="public" static="no">
        <type>typename psl::array&lt; index_type &gt;::size_type</type>
        <definition>using psl::sparse_array&lt; T, Key, chunks_size &gt;::size_type =  typename psl::array&lt;index_type&gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="86" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1sparse__array_1a64d4e83ac573fec23cc1ffab7744adc9" prot="public" static="no">
        <type>typename psl::array&lt; index_type &gt;::difference_type</type>
        <definition>using psl::sparse_array&lt; T, Key, chunks_size &gt;::difference_type =  typename psl::array&lt;index_type&gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="87" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1sparse__array_1aea15eb1824d2c5a1ee605aec41fef176" prot="public" static="no">
        <type>T</type>
        <definition>using psl::sparse_array&lt; T, Key, chunks_size &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="88" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1sparse__array_1afcde3bf8ff1ecef6f4e6f3f72254fdae" prot="public" static="no">
        <type>value_type *</type>
        <definition>using psl::sparse_array&lt; T, Key, chunks_size &gt;::pointer =  value_type*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="89" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1sparse__array_1a6635bc78415a5efd554bb703aebdee23" prot="public" static="no">
        <type>value_type *const</type>
        <definition>using psl::sparse_array&lt; T, Key, chunks_size &gt;::const_pointer =  value_type* const</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="90" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1sparse__array_1ac02f961a22cf2dacb5fd59243e6f8d50" prot="public" static="no">
        <type>value_type &amp;</type>
        <definition>using psl::sparse_array&lt; T, Key, chunks_size &gt;::reference =  value_type&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="91" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1sparse__array_1ad0f0e2f684bfe6208f649d9ec563d207" prot="public" static="no">
        <type>const value_type &amp;</type>
        <definition>using psl::sparse_array&lt; T, Key, chunks_size &gt;::const_reference =  const value_type&amp;</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="92" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1sparse__array_1adfab2ca9a747a0fe8ff39b827acfea4b" prot="public" static="no">
        <type>std::random_access_iterator_tag</type>
        <definition>using psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator_category =  std::random_access_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="93" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classpsl_1_1sparse__array_1a3d836f559b505aa353b627d710b6f068" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool psl::sparse_array&lt; T, Key, chunks_size &gt;::is_power_of_two</definition>
        <argsstring></argsstring>
        <name>is_power_of_two</name>
        <initializer>{chunks_size &amp;&amp; ((chunks_size &amp; (chunks_size - 1)) == 0)}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="16" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1sparse__array_1a9addaf71acf2e1d407843ad86914d516" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr Key</type>
        <definition>constexpr Key psl::sparse_array&lt; T, Key, chunks_size &gt;::mod_val</definition>
        <argsstring></argsstring>
        <name>mod_val</name>
        <initializer>{(is_power_of_two) ? chunks_size - 1 : chunks_size}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="17" column="22" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpsl_1_1sparse__array_1a9f674084797cf02509bac5253f04661d" prot="private" static="no" mutable="no">
        <type>psl::array&lt; value_type &gt;</type>
        <definition>psl::array&lt;value_type&gt; psl::sparse_array&lt; T, Key, chunks_size &gt;::m_Dense</definition>
        <argsstring></argsstring>
        <name>m_Dense</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="504" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1sparse__array_1ae3e75389f4868e8c1d1a5f74ad381432" prot="private" static="no" mutable="no">
        <type>psl::array&lt; index_type &gt;</type>
        <definition>psl::array&lt;index_type&gt; psl::sparse_array&lt; T, Key, chunks_size &gt;::m_Reverse</definition>
        <argsstring></argsstring>
        <name>m_Reverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="505" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1sparse__array_1a0143bfd43ca869eaf5cd8c7e4a702113" prot="private" static="no" mutable="no">
        <type>psl::array&lt; psl::array&lt; index_type &gt; &gt;</type>
        <definition>psl::array&lt;psl::array&lt;index_type&gt; &gt; psl::sparse_array&lt; T, Key, chunks_size &gt;::m_Sparse</definition>
        <argsstring></argsstring>
        <name>m_Sparse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="506" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="506" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a199d59eb30609027e919573055049b1e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::sparse_array&lt; T, Key, chunks_size &gt;::sparse_array</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>sparse_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a7bb28ea255a77b400152f188ff020fe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>psl::sparse_array&lt; T, Key, chunks_size &gt;::~sparse_array</definition>
        <argsstring>()=default</argsstring>
        <name>~sparse_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1ab4e9b587de90bb9cef7a86c9fcdb1af3" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::sparse_array&lt; T, Key, chunks_size &gt;::sparse_array</definition>
        <argsstring>(const sparse_array &amp;other) noexcept</argsstring>
        <name>sparse_array</name>
        <param>
          <type>const <ref refid="classpsl_1_1sparse__array" kindref="compound">sparse_array</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="97" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="97" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1aac4ff0e3986da7d8feafe65371cae653" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::sparse_array&lt; T, Key, chunks_size &gt;::sparse_array</definition>
        <argsstring>(sparse_array &amp;&amp;other) noexcept</argsstring>
        <name>sparse_array</name>
        <param>
          <type><ref refid="classpsl_1_1sparse__array" kindref="compound">sparse_array</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="99" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1ad462426ec4b2b5dcc29cc4702cfd873d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classpsl_1_1sparse__array" kindref="compound">sparse_array</ref> &amp;</type>
        <definition>sparse_array&amp; psl::sparse_array&lt; T, Key, chunks_size &gt;::operator=</definition>
        <argsstring>(const sparse_array &amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classpsl_1_1sparse__array" kindref="compound">sparse_array</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="102" column="14" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="102" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1afbf7f61cbe375bc4c63be41b814ca3f0" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classpsl_1_1sparse__array" kindref="compound">sparse_array</ref> &amp;</type>
        <definition>sparse_array&amp; psl::sparse_array&lt; T, Key, chunks_size &gt;::operator=</definition>
        <argsstring>(sparse_array &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classpsl_1_1sparse__array" kindref="compound">sparse_array</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="112" column="14" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="112" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a5ede32bfc6a2fd4a621fd96a5779d76b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type psl::sparse_array&lt; T, Key, chunks_size &gt;::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="122" column="11" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a722b60853a2e4ddbf89f2c3bd7d3d473" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type psl::sparse_array&lt; T, Key, chunks_size &gt;::capacity</definition>
        <argsstring>() const noexcept</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="123" column="11" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a36ad7642957b67666a1fd8aff44372b7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator psl::sparse_array&lt; T, Key, chunks_size &gt;::begin</definition>
        <argsstring>() noexcept</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="125" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1ad4595881900a5225efd9d5d7c9df57ae" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator psl::sparse_array&lt; T, Key, chunks_size &gt;::end</definition>
        <argsstring>() noexcept</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="126" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a1b3d0be9981830a898ab4ae699eac1a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference psl::sparse_array&lt; T, Key, chunks_size &gt;::operator[]</definition>
        <argsstring>(index_type index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="131" column="11" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="131" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1af3a4eb9e2eb832d10ad4c3f3a8f40750" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference psl::sparse_array&lt; T, Key, chunks_size &gt;::at</definition>
        <argsstring>(index_type index)</argsstring>
        <name>at</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="145" column="11" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="145" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a707b0df50329c5b5f989cd4129f5b4d8" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const_reference</type>
        <definition>const_reference psl::sparse_array&lt; T, Key, chunks_size &gt;::at</definition>
        <argsstring>(index_type index) const noexcept</argsstring>
        <name>at</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="159" column="17" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="159" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a78c550435c4ffebab726099ace9e3c2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::sparse_array&lt; T, Key, chunks_size &gt;::resize</definition>
        <argsstring>(index_type size)</argsstring>
        <name>resize</name>
        <param>
          <type>index_type</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="167" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="167" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a94d1fe68320d70930a5337af62da11ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::sparse_array&lt; T, Key, chunks_size &gt;::insert</definition>
        <argsstring>(index_type index)</argsstring>
        <name>insert</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="180" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="180" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a1c2d80c696836ab4123d983c24ab2ea9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::sparse_array&lt; T, Key, chunks_size &gt;::insert</definition>
        <argsstring>(index_type index, const_reference value)</argsstring>
        <name>insert</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const_reference</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="187" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="187" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a2d0e73b2c1b9c95d906aead688f3008c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ItF</type>
          </param>
          <param>
            <type>typename ItL</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void psl::sparse_array&lt; T, Key, chunks_size &gt;::insert</definition>
        <argsstring>(index_type index, ItF &amp;&amp;first, ItL &amp;&amp;last)</argsstring>
        <name>insert</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <param>
          <type>ItF &amp;&amp;</type>
          <declname>first</declname>
        </param>
        <param>
          <type>ItL &amp;&amp;</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="197" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="197" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1afb252b82555346e530389ee1382afe41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::sparse_array&lt; T, Key, chunks_size &gt;::emplace</definition>
        <argsstring>(index_type index, value_type &amp;&amp;value)</argsstring>
        <name>emplace</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <param>
          <type>value_type &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="241" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="241" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a67964b7265117537ce3411193654af74" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr value_type *</type>
        <definition>constexpr value_type* psl::sparse_array&lt; T, Key, chunks_size &gt;::try_get</definition>
        <argsstring>(index_type index) noexcept</argsstring>
        <name>try_get</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="250" column="22" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="250" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a2faf0b40d6953df8da9ce496275491b5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr value_type const  *</type>
        <definition>constexpr value_type const* psl::sparse_array&lt; T, Key, chunks_size &gt;::try_get</definition>
        <argsstring>(index_type index) const noexcept</argsstring>
        <name>try_get</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="276" column="28" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="276" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a706f2deb224f5489b578edf04d217a79" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool psl::sparse_array&lt; T, Key, chunks_size &gt;::has</definition>
        <argsstring>(index_type index) const noexcept</argsstring>
        <name>has</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="302" column="16" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="302" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1ae688ba1bbe6b9912481e2ad90b4022d9" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool psl::sparse_array&lt; T, Key, chunks_size &gt;::empty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="323" column="16" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="323" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1abebbd857846f59162d1ad4f728b91879" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* psl::sparse_array&lt; T, Key, chunks_size &gt;::data</definition>
        <argsstring>() noexcept</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="325" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="325" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1af525bd0f70908333e0ff484efe133e9a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::sparse_array&lt; T, Key, chunks_size &gt;::erase</definition>
        <argsstring>(index_type index) noexcept</argsstring>
        <name>erase</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="327" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="327" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1aa169a89c09bc86838840e55387649078" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::sparse_array&lt; T, Key, chunks_size &gt;::erase</definition>
        <argsstring>(index_type first, index_type last) noexcept</argsstring>
        <name>erase</name>
        <param>
          <type>index_type</type>
          <declname>first</declname>
        </param>
        <param>
          <type>index_type</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="353" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="353" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a78a8e5af4e71adb35e36edfd30b3090f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::sparse_array&lt; T, Key, chunks_size &gt;::reserve</definition>
        <argsstring>(size_t capacity)</argsstring>
        <name>reserve</name>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="447" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="447" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a501fb3b76d37e812646b02f01f704af8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::sparse_array&lt; T, Key, chunks_size &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="455" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="455" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a09b4a6df930ef28c78eb7aa22c6f9337" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>psl::array_view&lt; index_type &gt;</type>
        <definition>psl::array_view&lt;index_type&gt; psl::sparse_array&lt; T, Key, chunks_size &gt;::indices</definition>
        <argsstring>() const noexcept</argsstring>
        <name>indices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="462" column="17" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="462" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a40ebd8a5ffbaf6be953359425f9cf78c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>psl::array_view&lt; value_type &gt;</type>
        <definition>psl::array_view&lt;value_type&gt; psl::sparse_array&lt; T, Key, chunks_size &gt;::dense</definition>
        <argsstring>() const noexcept</argsstring>
        <name>dense</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="463" column="17" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="463" bodyend="463"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classpsl_1_1sparse__array_1ac94723fa8ae64260d1d30f4faec6286e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::array&lt; index_type &gt; &amp;</type>
        <definition>psl::array&lt;index_type&gt;&amp; psl::sparse_array&lt; T, Key, chunks_size &gt;::chunk_for</definition>
        <argsstring>(index_type &amp;index)</argsstring>
        <name>chunk_for</name>
        <param>
          <type>index_type &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="466" column="19" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="466" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1a5a796dc8e93ea80d26b6f8f244217862" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::sparse_array&lt; T, Key, chunks_size &gt;::chunk_info_for</definition>
        <argsstring>(index_type index, index_type &amp;element_index, index_type &amp;chunk_index) const noexcept</argsstring>
        <name>chunk_info_for</name>
        <param>
          <type>index_type</type>
          <declname>index</declname>
        </param>
        <param>
          <type>index_type &amp;</type>
          <declname>element_index</declname>
        </param>
        <param>
          <type>index_type &amp;</type>
          <declname>chunk_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="490" column="13" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="490" bodyend="502"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>container type that is fast to iterate, but has non-continuous interface </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="12" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="11" bodyend="507"/>
    <listofallmembers>
      <member refid="classpsl_1_1sparse__array_1af3a4eb9e2eb832d10ad4c3f3a8f40750" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>at</name></member>
      <member refid="classpsl_1_1sparse__array_1a707b0df50329c5b5f989cd4129f5b4d8" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>at</name></member>
      <member refid="classpsl_1_1sparse__array_1a36ad7642957b67666a1fd8aff44372b7" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>begin</name></member>
      <member refid="classpsl_1_1sparse__array_1a722b60853a2e4ddbf89f2c3bd7d3d473" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>capacity</name></member>
      <member refid="classpsl_1_1sparse__array_1ac94723fa8ae64260d1d30f4faec6286e" prot="private" virt="non-virtual"><scope>psl::sparse_array</scope><name>chunk_for</name></member>
      <member refid="classpsl_1_1sparse__array_1a5a796dc8e93ea80d26b6f8f244217862" prot="private" virt="non-virtual"><scope>psl::sparse_array</scope><name>chunk_info_for</name></member>
      <member refid="classpsl_1_1sparse__array_1a501fb3b76d37e812646b02f01f704af8" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>clear</name></member>
      <member refid="classpsl_1_1sparse__array_1a6635bc78415a5efd554bb703aebdee23" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>const_pointer</name></member>
      <member refid="classpsl_1_1sparse__array_1ad0f0e2f684bfe6208f649d9ec563d207" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>const_reference</name></member>
      <member refid="classpsl_1_1sparse__array_1abebbd857846f59162d1ad4f728b91879" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>data</name></member>
      <member refid="classpsl_1_1sparse__array_1a40ebd8a5ffbaf6be953359425f9cf78c" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>dense</name></member>
      <member refid="classpsl_1_1sparse__array_1a64d4e83ac573fec23cc1ffab7744adc9" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>difference_type</name></member>
      <member refid="classpsl_1_1sparse__array_1afb252b82555346e530389ee1382afe41" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>emplace</name></member>
      <member refid="classpsl_1_1sparse__array_1ae688ba1bbe6b9912481e2ad90b4022d9" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>empty</name></member>
      <member refid="classpsl_1_1sparse__array_1ad4595881900a5225efd9d5d7c9df57ae" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>end</name></member>
      <member refid="classpsl_1_1sparse__array_1af525bd0f70908333e0ff484efe133e9a" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>erase</name></member>
      <member refid="classpsl_1_1sparse__array_1aa169a89c09bc86838840e55387649078" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>erase</name></member>
      <member refid="classpsl_1_1sparse__array_1a706f2deb224f5489b578edf04d217a79" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>has</name></member>
      <member refid="classpsl_1_1sparse__array_1a2ddee3898a09adb7034a13d2498d50d1" prot="private" virt="non-virtual"><scope>psl::sparse_array</scope><name>index_type</name></member>
      <member refid="classpsl_1_1sparse__array_1a09b4a6df930ef28c78eb7aa22c6f9337" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>indices</name></member>
      <member refid="classpsl_1_1sparse__array_1a94d1fe68320d70930a5337af62da11ab" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>insert</name></member>
      <member refid="classpsl_1_1sparse__array_1a1c2d80c696836ab4123d983c24ab2ea9" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>insert</name></member>
      <member refid="classpsl_1_1sparse__array_1a2d0e73b2c1b9c95d906aead688f3008c" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>insert</name></member>
      <member refid="classpsl_1_1sparse__array_1a3d836f559b505aa353b627d710b6f068" prot="private" virt="non-virtual"><scope>psl::sparse_array</scope><name>is_power_of_two</name></member>
      <member refid="classpsl_1_1sparse__array_1adfab2ca9a747a0fe8ff39b827acfea4b" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>iterator_category</name></member>
      <member refid="classpsl_1_1sparse__array_1a9f674084797cf02509bac5253f04661d" prot="private" virt="non-virtual"><scope>psl::sparse_array</scope><name>m_Dense</name></member>
      <member refid="classpsl_1_1sparse__array_1ae3e75389f4868e8c1d1a5f74ad381432" prot="private" virt="non-virtual"><scope>psl::sparse_array</scope><name>m_Reverse</name></member>
      <member refid="classpsl_1_1sparse__array_1a0143bfd43ca869eaf5cd8c7e4a702113" prot="private" virt="non-virtual"><scope>psl::sparse_array</scope><name>m_Sparse</name></member>
      <member refid="classpsl_1_1sparse__array_1a9addaf71acf2e1d407843ad86914d516" prot="private" virt="non-virtual"><scope>psl::sparse_array</scope><name>mod_val</name></member>
      <member refid="classpsl_1_1sparse__array_1ad462426ec4b2b5dcc29cc4702cfd873d" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>operator=</name></member>
      <member refid="classpsl_1_1sparse__array_1afbf7f61cbe375bc4c63be41b814ca3f0" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>operator=</name></member>
      <member refid="classpsl_1_1sparse__array_1a1b3d0be9981830a898ab4ae699eac1a4" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>operator[]</name></member>
      <member refid="classpsl_1_1sparse__array_1afcde3bf8ff1ecef6f4e6f3f72254fdae" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>pointer</name></member>
      <member refid="classpsl_1_1sparse__array_1ac02f961a22cf2dacb5fd59243e6f8d50" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>reference</name></member>
      <member refid="classpsl_1_1sparse__array_1a78a8e5af4e71adb35e36edfd30b3090f" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>reserve</name></member>
      <member refid="classpsl_1_1sparse__array_1a78c550435c4ffebab726099ace9e3c2b" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>resize</name></member>
      <member refid="classpsl_1_1sparse__array_1a5ede32bfc6a2fd4a621fd96a5779d76b" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>size</name></member>
      <member refid="classpsl_1_1sparse__array_1a19e63578b0eff2d98b3739423ea2cd58" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>size_type</name></member>
      <member refid="classpsl_1_1sparse__array_1a199d59eb30609027e919573055049b1e" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>sparse_array</name></member>
      <member refid="classpsl_1_1sparse__array_1ab4e9b587de90bb9cef7a86c9fcdb1af3" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>sparse_array</name></member>
      <member refid="classpsl_1_1sparse__array_1aac4ff0e3986da7d8feafe65371cae653" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>sparse_array</name></member>
      <member refid="classpsl_1_1sparse__array_1a67964b7265117537ce3411193654af74" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>try_get</name></member>
      <member refid="classpsl_1_1sparse__array_1a2faf0b40d6953df8da9ce496275491b5" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>try_get</name></member>
      <member refid="classpsl_1_1sparse__array_1a2d4dbda3f84cb629d04121c6b55ddc1d" prot="private" virt="non-virtual"><scope>psl::sparse_array</scope><name>type_t</name></member>
      <member refid="classpsl_1_1sparse__array_1aea15eb1824d2c5a1ee605aec41fef176" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>value_type</name></member>
      <member refid="classpsl_1_1sparse__array_1a7bb28ea255a77b400152f188ff020fe8" prot="public" virt="non-virtual"><scope>psl::sparse_array</scope><name>~sparse_array</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
