<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcore_1_1resource_1_1handle" kind="class" language="C++" prot="public">
    <compoundname>core::resource::handle</compoundname>
    <includes refid="handle_8hpp" local="no">handle.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classcore_1_1resource_1_1handle_1aacf4cfb1413686d0c97d3ecf792fc9a3" prot="public" static="no">
        <type>std::remove_cv_t&lt; std::remove_const_t&lt; T &gt; &gt;</type>
        <definition>using core::resource::handle&lt; T &gt;::value_type =  std::remove_cv_t&lt;std::remove_const_t&lt;T&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="20" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcore_1_1resource_1_1handle_1a18d3587a0882e8391a4604d60292b75b" prot="public" static="no">
        <type>typename resource_traits&lt; value_type &gt;::meta_type</type>
        <definition>using core::resource::handle&lt; T &gt;::meta_type =  typename resource_traits&lt;value_type&gt;::meta_type</definition>
        <argsstring></argsstring>
        <name>meta_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="22" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcore_1_1resource_1_1handle_1a1815d9f93712f03ec3f6dea86919aff1" prot="public" static="no">
        <type>typename details::alias_type&lt; value_type &gt;::type</type>
        <definition>using core::resource::handle&lt; T &gt;::alias_type =  typename details::alias_type&lt;value_type&gt;::type</definition>
        <argsstring></argsstring>
        <name>alias_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="23" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classcore_1_1resource_1_1handle_1a248bd0c4cead53c420012a02066927fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class cache_t</definition>
        <argsstring></argsstring>
        <name>cache_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="26" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classcore_1_1resource_1_1handle_1aad9607d7305b118fb8da77768b5c20bc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class weak_handle&lt; T &gt;</definition>
        <argsstring></argsstring>
        <name>weak_handle&lt; T &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="26" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classcore_1_1resource_1_1handle_1a09563db836b1abb27abbd07b38d77cf7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Y</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="29" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcore_1_1resource_1_1handle_1a7012574dc63570cd7c1011737641ae00" prot="private" static="no" mutable="no">
        <type>value_type *</type>
        <definition>value_type* core::resource::handle&lt; T &gt;::m_Resource</definition>
        <argsstring></argsstring>
        <name>m_Resource</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="175" column="12" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1resource_1_1handle_1a57ddc4f2c9c25261d25a13e0b153261e" prot="private" static="no" mutable="no">
        <type>core::resource::cache_t *</type>
        <definition>core::resource::cache_t* core::resource::handle&lt; T &gt;::m_Cache</definition>
        <argsstring></argsstring>
        <name>m_Cache</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="176" column="25" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1resource_1_1handle_1a8e5f36fefd84f15f916e01344a0da483" prot="private" static="no" mutable="no">
        <type><ref refid="structcore_1_1resource_1_1metadata" kindref="compound">metadata</ref> *</type>
        <definition>metadata* core::resource::handle&lt; T &gt;::m_MetaData</definition>
        <argsstring></argsstring>
        <name>m_MetaData</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="177" column="10" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1resource_1_1handle_1a4fdb80ca1784727b18b53a97f4539f8a" prot="private" static="no" mutable="no">
        <type>meta_type *</type>
        <definition>meta_type* core::resource::handle&lt; T &gt;::m_MetaFile</definition>
        <argsstring></argsstring>
        <name>m_MetaFile</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="178" column="11" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1a4e362e4f81977f027555a1d976972647" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>core::resource::handle&lt; T &gt;::handle</definition>
        <argsstring>(void *resource, cache_t *cache, metadata *metaData, psl::meta::file *meta) noexcept</argsstring>
        <name>handle</name>
        <param>
          <type>void *</type>
          <declname>resource</declname>
        </param>
        <param>
          <type>cache_t *</type>
          <declname>cache</declname>
        </param>
        <param>
          <type><ref refid="structcore_1_1resource_1_1metadata" kindref="compound">metadata</ref> *</type>
          <declname>metaData</declname>
        </param>
        <param>
          <type><ref refid="classpsl_1_1meta_1_1file" kindref="compound">psl::meta::file</ref> *</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="31" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="31" bodyend="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1aadb1bdb709775486858adf32605ab725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::resource::handle&lt; T &gt;::handle</definition>
        <argsstring>()=default</argsstring>
        <name>handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1ab7e32e4b3ad150938e66c511f8bf9944" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>core::resource::handle&lt; T &gt;::~handle</definition>
        <argsstring>()</argsstring>
        <name>~handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="40" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="40" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1afa3b83edad0ce031760d8408c860cc1b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>core::resource::handle&lt; T &gt;::handle</definition>
        <argsstring>(const handle&lt; alias&lt; Ts... &gt;&gt; &amp;other) noexcept</argsstring>
        <name>handle</name>
        <param>
          <type>const <ref refid="classcore_1_1resource_1_1handle" kindref="compound">handle</ref>&lt; alias&lt; Ts... &gt;&gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="54" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1ad114aaa9ae89c74707bbda8fa54ab8dc" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Y</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>core::resource::handle&lt; T &gt;::handle</definition>
        <argsstring>(const handle&lt; Y &gt; &amp;other) noexcept</argsstring>
        <name>handle</name>
        <param>
          <type>const <ref refid="classcore_1_1resource_1_1handle" kindref="compound">handle</ref>&lt; Y &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="58" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="58" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1a8e1364b6a755dd8fed225b74c6330c28" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>core::resource::handle&lt; T &gt;::handle</definition>
        <argsstring>(const handle &amp;other) noexcept</argsstring>
        <name>handle</name>
        <param>
          <type>const <ref refid="classcore_1_1resource_1_1handle" kindref="compound">handle</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="70" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="70" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1af1f032c944fd958e0b5b90ed69aa67ee" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>core::resource::handle&lt; T &gt;::handle</definition>
        <argsstring>(handle &amp;&amp;other) noexcept</argsstring>
        <name>handle</name>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">handle</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="77" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1aa078209b727b8537655cf5c4c1eb2577" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">handle</ref> &amp;</type>
        <definition>handle&amp; core::resource::handle&lt; T &gt;::operator=</definition>
        <argsstring>(const handle &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classcore_1_1resource_1_1handle" kindref="compound">handle</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="83" column="8" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="83" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1ab51bfeb5164a46c6345e898abf835dc2" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">handle</ref> &amp;</type>
        <definition>handle&amp; core::resource::handle&lt; T &gt;::operator=</definition>
        <argsstring>(handle &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">handle</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="96" column="8" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="96" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1a6816fd39deb241ca64b92d18d7328844" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacecore_1_1resource_1a8726bf09cf08e4532f29a70dd14400bf" kindref="member">status</ref></type>
        <definition>status core::resource::handle&lt; T &gt;::state</definition>
        <argsstring>() const noexcept</argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="111" column="15" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1a12bcbd7140cdbaab9f90377ca99d361c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>value_type &amp;</type>
        <definition>value_type&amp; core::resource::handle&lt; T &gt;::value</definition>
        <argsstring>() noexcept</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="113" column="19" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="113" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1ac39d8fb8bebaf28b9b4eab79c14802fe" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const value_type &amp;</type>
        <definition>const value_type&amp; core::resource::handle&lt; T &gt;::value</definition>
        <argsstring>() const noexcept</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="119" column="25" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="119" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1a948f61cfec306dc810a2ed7e7b721e92" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool core::resource::handle&lt; T &gt;::try_get</definition>
        <argsstring>(value_type &amp;out) const noexcept</argsstring>
        <name>try_get</name>
        <param>
          <type>value_type &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="125" column="13" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="125" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1a2661705463eac2c82c174575ed735f83" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Y</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool core::resource::handle&lt; T &gt;::operator==</definition>
        <argsstring>(const handle&lt; Y &gt; &amp;other) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classcore_1_1resource_1_1handle" kindref="compound">handle</ref>&lt; Y &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="136" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1af88868117926006f48a7f0b44a9db7eb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Y</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool core::resource::handle&lt; T &gt;::operator!=</definition>
        <argsstring>(const handle&lt; Y &gt; &amp;other) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classcore_1_1resource_1_1handle" kindref="compound">handle</ref>&lt; Y &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="141" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1ab7a24df13efccad29983af92f79b0a63" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Y</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool core::resource::handle&lt; T &gt;::operator==</definition>
        <argsstring>(const weak_handle&lt; Y &gt; &amp;other) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const weak_handle&lt; Y &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="147" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1a7f44dde41408053686d7205345de4d41" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Y</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool core::resource::handle&lt; T &gt;::operator!=</definition>
        <argsstring>(const weak_handle&lt; Y &gt; &amp;other) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const weak_handle&lt; Y &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="152" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1acf00fcc01ba145c31c2163ee647be256" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>core::resource::handle&lt; T &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="157" column="8" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1abba42e0728189be8544132157cf27db1" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>meta_type *</type>
        <definition>meta_type* core::resource::handle&lt; T &gt;::meta</definition>
        <argsstring>() const noexcept</argsstring>
        <name>meta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="159" column="18" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1a97cb020df4356b3e44ef2f5829fdd6b1" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="structcore_1_1resource_1_1metadata" kindref="compound">metadata</ref> const  *</type>
        <definition>metadata const* core::resource::handle&lt; T &gt;::resource_metadata</definition>
        <argsstring>() const noexcept</argsstring>
        <name>resource_metadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="160" column="23" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1a2b7e496c28aaa6b8521f2c9f52e6bdd3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>cache_t *</type>
        <definition>cache_t* core::resource::handle&lt; T &gt;::cache</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="161" column="16" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1afc8bc22ed03125fa820b2b4b557f5d33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>value_type const  *</type>
        <definition>value_type const* core::resource::handle&lt; T &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="163" column="25" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1a054d60ef3420777f2c0b70fb16a4d9ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>value_type *</type>
        <definition>value_type* core::resource::handle&lt; T &gt;::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="164" column="19" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1aece1af7d18e0455246122fc85033e4c6" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="structpsl_1_1_u_i_d" kindref="compound">psl::UID</ref></type>
        <definition>psl::UID core::resource::handle&lt; T &gt;::uid</definition>
        <argsstring>() const noexcept</argsstring>
        <name>uid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="166" column="17" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1aa2415d85296662c0d7c18e36c5ce1e0f" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="structpsl_1_1_u_i_d" kindref="compound">psl::UID</ref> &amp;</type>
        <definition>const psl::UID&amp; core::resource::handle&lt; T &gt;::uid</definition>
        <argsstring>() noexcept</argsstring>
        <name>uid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="167" column="23" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1aacaea9f656731fc83050aa996772fcfd" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>core::resource::handle&lt; T &gt;::operator const psl::UID &amp;</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator const psl::UID &amp;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="170" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1a625b602feb1ef9cd2419153dbbdf3383" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>core::resource::handle&lt; T &gt;::operator psl::view_ptr&lt; meta_type &gt;</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator psl::view_ptr&lt; meta_type &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="171" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1resource_1_1handle_1aba4cf065279eed39b837dafdd1fadb02" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>core::resource::handle&lt; T &gt;::operator tag&lt; T &gt;</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator tag&lt; T &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" line="172" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/resource/handle.hpp" bodystart="172" bodyend="172"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>wraps around a resource for sharing and management purposes. </para>
    </briefdescription>
    <detaileddescription>
<para>resource handles are used to manage the lifetime of resources, and tracking dependencies (i.e. who uses what). It is supposed to be used with a core::resource::cache_t. </para>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/core/inc/fwd/resource/resource.hpp" line="31" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/fwd/resource/resource.hpp" bodystart="31" bodyend="-1"/>
    <listofallmembers>
      <member refid="classcore_1_1resource_1_1handle_1a1815d9f93712f03ec3f6dea86919aff1" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>alias_type</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a2b7e496c28aaa6b8521f2c9f52e6bdd3" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>cache</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a248bd0c4cead53c420012a02066927fd" prot="private" virt="non-virtual"><scope>core::resource::handle</scope><name>cache_t</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a09563db836b1abb27abbd07b38d77cf7" prot="private" virt="non-virtual"><scope>core::resource::handle</scope><name>handle</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a4e362e4f81977f027555a1d976972647" prot="private" virt="non-virtual"><scope>core::resource::handle</scope><name>handle</name></member>
      <member refid="classcore_1_1resource_1_1handle_1aadb1bdb709775486858adf32605ab725" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>handle</name></member>
      <member refid="classcore_1_1resource_1_1handle_1afa3b83edad0ce031760d8408c860cc1b" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>handle</name></member>
      <member refid="classcore_1_1resource_1_1handle_1ad114aaa9ae89c74707bbda8fa54ab8dc" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>handle</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a8e1364b6a755dd8fed225b74c6330c28" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>handle</name></member>
      <member refid="classcore_1_1resource_1_1handle_1af1f032c944fd958e0b5b90ed69aa67ee" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>handle</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a57ddc4f2c9c25261d25a13e0b153261e" prot="private" virt="non-virtual"><scope>core::resource::handle</scope><name>m_Cache</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a8e5f36fefd84f15f916e01344a0da483" prot="private" virt="non-virtual"><scope>core::resource::handle</scope><name>m_MetaData</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a4fdb80ca1784727b18b53a97f4539f8a" prot="private" virt="non-virtual"><scope>core::resource::handle</scope><name>m_MetaFile</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a7012574dc63570cd7c1011737641ae00" prot="private" virt="non-virtual"><scope>core::resource::handle</scope><name>m_Resource</name></member>
      <member refid="classcore_1_1resource_1_1handle_1abba42e0728189be8544132157cf27db1" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>meta</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a18d3587a0882e8391a4604d60292b75b" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>meta_type</name></member>
      <member refid="classcore_1_1resource_1_1handle_1acf00fcc01ba145c31c2163ee647be256" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>operator bool</name></member>
      <member refid="classcore_1_1resource_1_1handle_1aacaea9f656731fc83050aa996772fcfd" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>operator const psl::UID &amp;</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a625b602feb1ef9cd2419153dbbdf3383" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>operator psl::view_ptr&lt; meta_type &gt;</name></member>
      <member refid="classcore_1_1resource_1_1handle_1aba4cf065279eed39b837dafdd1fadb02" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>operator tag&lt; T &gt;</name></member>
      <member refid="classcore_1_1resource_1_1handle_1af88868117926006f48a7f0b44a9db7eb" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>operator!=</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a7f44dde41408053686d7205345de4d41" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>operator!=</name></member>
      <member refid="classcore_1_1resource_1_1handle_1afc8bc22ed03125fa820b2b4b557f5d33" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>operator-&gt;</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a054d60ef3420777f2c0b70fb16a4d9ea" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>operator-&gt;</name></member>
      <member refid="classcore_1_1resource_1_1handle_1aa078209b727b8537655cf5c4c1eb2577" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>operator=</name></member>
      <member refid="classcore_1_1resource_1_1handle_1ab51bfeb5164a46c6345e898abf835dc2" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>operator=</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a2661705463eac2c82c174575ed735f83" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>operator==</name></member>
      <member refid="classcore_1_1resource_1_1handle_1ab7a24df13efccad29983af92f79b0a63" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>operator==</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a97cb020df4356b3e44ef2f5829fdd6b1" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>resource_metadata</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a6816fd39deb241ca64b92d18d7328844" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>state</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a948f61cfec306dc810a2ed7e7b721e92" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>try_get</name></member>
      <member refid="classcore_1_1resource_1_1handle_1aece1af7d18e0455246122fc85033e4c6" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>uid</name></member>
      <member refid="classcore_1_1resource_1_1handle_1aa2415d85296662c0d7c18e36c5ce1e0f" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>uid</name></member>
      <member refid="classcore_1_1resource_1_1handle_1a12bcbd7140cdbaab9f90377ca99d361c" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>value</name></member>
      <member refid="classcore_1_1resource_1_1handle_1ac39d8fb8bebaf28b9b4eab79c14802fe" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>value</name></member>
      <member refid="classcore_1_1resource_1_1handle_1aacf4cfb1413686d0c97d3ecf792fc9a3" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>value_type</name></member>
      <member refid="classcore_1_1resource_1_1handle_1aad9607d7305b118fb8da77768b5c20bc" prot="private" virt="non-virtual"><scope>core::resource::handle</scope><name>weak_handle&lt; T &gt;</name></member>
      <member refid="classcore_1_1resource_1_1handle_1ab7e32e4b3ad150938e66c511f8bf9944" prot="public" virt="non-virtual"><scope>core::resource::handle</scope><name>~handle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
