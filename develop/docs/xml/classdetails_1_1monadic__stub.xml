<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classdetails_1_1monadic__stub" kind="class" language="C++" prot="public">
    <compoundname>details::monadic_stub</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdetails_1_1monadic__stub_1a52c52d3cba937c969dc06bbe6dd226d2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool details::monadic_stub::m_Return</definition>
        <argsstring></argsstring>
        <name>m_Return</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="194" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="194" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1a36276dab922a5cf70834d8d3e1bb0277" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>details::monadic_stub::monadic_stub</definition>
        <argsstring>(bool success=true)</argsstring>
        <name>monadic_stub</name>
        <param>
          <type>bool</type>
          <declname>success</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="19" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1a66ec9b3c0b191e5009cdd072c3adc706" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>details::monadic_stub::monadic_stub</definition>
        <argsstring>(T &amp;&amp;target)</argsstring>
        <name>monadic_stub</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="22" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1a9492232e3ad1e63a6b9c8b22166ba6df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Comparator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>details::monadic_stub::monadic_stub</definition>
        <argsstring>(T &amp;&amp;target, Comparator &amp;&amp;comparator)</argsstring>
        <name>monadic_stub</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>Comparator &amp;&amp;</type>
          <declname>comparator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="28" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1ad80e6f941f659a17973dab777cb54c05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>monadic_stub &amp;</type>
        <definition>monadic_stub&amp; details::monadic_stub::then</definition>
        <argsstring>(T &amp;&amp;target)</argsstring>
        <name>then</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="34" column="14" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="34" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1a26bb27499510e9087b259a61934442c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Comparator</type>
          </param>
        </templateparamlist>
        <type>monadic_stub &amp;</type>
        <definition>monadic_stub&amp; details::monadic_stub::then</definition>
        <argsstring>(T &amp;&amp;target, Comparator &amp;&amp;comparator)</argsstring>
        <name>then</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>Comparator &amp;&amp;</type>
          <declname>comparator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="43" column="14" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="43" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1ae935bfdf0ff60f929cc4b255e15cceb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T0</type>
          </param>
          <param>
            <type>typename T1</type>
          </param>
        </templateparamlist>
        <type>monadic_stub &amp;</type>
        <definition>monadic_stub&amp; details::monadic_stub::then_or</definition>
        <argsstring>(T0 &amp;&amp;target0, T1 &amp;&amp;target1)</argsstring>
        <name>then_or</name>
        <param>
          <type>T0 &amp;&amp;</type>
          <declname>target0</declname>
        </param>
        <param>
          <type>T1 &amp;&amp;</type>
          <declname>target1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="52" column="14" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="52" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1a2d4377586986ce0a337007f7cd2a42fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T0</type>
          </param>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename Comparator</type>
          </param>
        </templateparamlist>
        <type>monadic_stub &amp;</type>
        <definition>monadic_stub&amp; details::monadic_stub::then_or</definition>
        <argsstring>(T0 &amp;&amp;target0, T1 &amp;&amp;target1, Comparator &amp;&amp;comparator)</argsstring>
        <name>then_or</name>
        <param>
          <type>T0 &amp;&amp;</type>
          <declname>target0</declname>
        </param>
        <param>
          <type>T1 &amp;&amp;</type>
          <declname>target1</declname>
        </param>
        <param>
          <type>Comparator &amp;&amp;</type>
          <declname>comparator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="62" column="14" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="62" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1a70a184f7bdb74b8878a3033a68184725" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T0</type>
          </param>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename Comparator0</type>
          </param>
          <param>
            <type>typename Comparator1</type>
          </param>
        </templateparamlist>
        <type>monadic_stub &amp;</type>
        <definition>monadic_stub&amp; details::monadic_stub::then_or</definition>
        <argsstring>(T0 &amp;&amp;target0, T1 &amp;&amp;target1, Comparator0 &amp;&amp;comparator0, Comparator1 &amp;&amp;comparator1)</argsstring>
        <name>then_or</name>
        <param>
          <type>T0 &amp;&amp;</type>
          <declname>target0</declname>
        </param>
        <param>
          <type>T1 &amp;&amp;</type>
          <declname>target1</declname>
        </param>
        <param>
          <type>Comparator0 &amp;&amp;</type>
          <declname>comparator0</declname>
        </param>
        <param>
          <type>Comparator1 &amp;&amp;</type>
          <declname>comparator1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="72" column="14" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="72" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1a045ca816e540f62413af0247eb82079c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>monadic_stub &amp;</type>
        <definition>monadic_stub&amp; details::monadic_stub::all</definition>
        <argsstring>(Ts &amp;&amp;... targets)</argsstring>
        <name>all</name>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>targets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="83" column="14" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="83" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1a4794e1de9f504bd234d358732e1d4f60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>monadic_stub &amp;</type>
        <definition>monadic_stub&amp; details::monadic_stub::any</definition>
        <argsstring>(Ts &amp;&amp;... targets)</argsstring>
        <name>any</name>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>targets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="95" column="14" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="95" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1a17d2c3f935e91e2269aff1681fd9dfe1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>monadic_stub &amp;</type>
        <definition>monadic_stub&amp; details::monadic_stub::at_least</definition>
        <argsstring>(size_t count, Ts &amp;&amp;... targets)</argsstring>
        <name>at_least</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>targets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="111" column="14" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="111" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1a9584d9b959d78be9f6a44dd106ae01c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>monadic_stub &amp;</type>
        <definition>monadic_stub&amp; details::monadic_stub::at_most</definition>
        <argsstring>(size_t count, Ts &amp;&amp;... targets)</argsstring>
        <name>at_most</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>targets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="129" column="14" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="129" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1a9bf9f81411286c246f0c319aa6ec9773" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool details::monadic_stub::success</definition>
        <argsstring>() const noexcept</argsstring>
        <name>success</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="145" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="145" bodyend="145"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1a74bb6e798fcbf71136e1cc4859e7eca2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Fn</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void details::monadic_stub::call</definition>
        <argsstring>(T &amp;&amp;target, Fn &amp;&amp;comparator)</argsstring>
        <name>call</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>Fn &amp;&amp;</type>
          <declname>comparator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="149" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="149" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1a1a8e6049c1655b4fe1335dd8512f08e0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void details::monadic_stub::call</definition>
        <argsstring>(T &amp;&amp;target)</argsstring>
        <name>call</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="163" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="163" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1a4365224f584bb4a8188fd1696fe4e2c1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void details::monadic_stub::call</definition>
        <argsstring>(monadic_stub &amp;&amp;target)</argsstring>
        <name>call</name>
        <param>
          <type>monadic_stub &amp;&amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="177" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1a87de30b5fee362734eee48da0d34e7af" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void details::monadic_stub::call</definition>
        <argsstring>(monadic_stub &amp;target)</argsstring>
        <name>call</name>
        <param>
          <type>monadic_stub &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="183" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="183" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classdetails_1_1monadic__stub_1a1e54d01f68135f80b98901c713a98ffb" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void details::monadic_stub::call</definition>
        <argsstring>(const monadic_stub &amp;target)</argsstring>
        <name>call</name>
        <param>
          <type>const monadic_stub &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="189" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="189" bodyend="192"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" line="17" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/monads.hpp" bodystart="16" bodyend="195"/>
    <listofallmembers>
      <member refid="classdetails_1_1monadic__stub_1a045ca816e540f62413af0247eb82079c" prot="public" virt="non-virtual"><scope>details::monadic_stub</scope><name>all</name></member>
      <member refid="classdetails_1_1monadic__stub_1a4794e1de9f504bd234d358732e1d4f60" prot="public" virt="non-virtual"><scope>details::monadic_stub</scope><name>any</name></member>
      <member refid="classdetails_1_1monadic__stub_1a17d2c3f935e91e2269aff1681fd9dfe1" prot="public" virt="non-virtual"><scope>details::monadic_stub</scope><name>at_least</name></member>
      <member refid="classdetails_1_1monadic__stub_1a9584d9b959d78be9f6a44dd106ae01c4" prot="public" virt="non-virtual"><scope>details::monadic_stub</scope><name>at_most</name></member>
      <member refid="classdetails_1_1monadic__stub_1a74bb6e798fcbf71136e1cc4859e7eca2" prot="private" virt="non-virtual"><scope>details::monadic_stub</scope><name>call</name></member>
      <member refid="classdetails_1_1monadic__stub_1a1a8e6049c1655b4fe1335dd8512f08e0" prot="private" virt="non-virtual"><scope>details::monadic_stub</scope><name>call</name></member>
      <member refid="classdetails_1_1monadic__stub_1a4365224f584bb4a8188fd1696fe4e2c1" prot="private" virt="non-virtual"><scope>details::monadic_stub</scope><name>call</name></member>
      <member refid="classdetails_1_1monadic__stub_1a87de30b5fee362734eee48da0d34e7af" prot="private" virt="non-virtual"><scope>details::monadic_stub</scope><name>call</name></member>
      <member refid="classdetails_1_1monadic__stub_1a1e54d01f68135f80b98901c713a98ffb" prot="private" virt="non-virtual"><scope>details::monadic_stub</scope><name>call</name></member>
      <member refid="classdetails_1_1monadic__stub_1a52c52d3cba937c969dc06bbe6dd226d2" prot="private" virt="non-virtual"><scope>details::monadic_stub</scope><name>m_Return</name></member>
      <member refid="classdetails_1_1monadic__stub_1a36276dab922a5cf70834d8d3e1bb0277" prot="public" virt="non-virtual"><scope>details::monadic_stub</scope><name>monadic_stub</name></member>
      <member refid="classdetails_1_1monadic__stub_1a66ec9b3c0b191e5009cdd072c3adc706" prot="public" virt="non-virtual"><scope>details::monadic_stub</scope><name>monadic_stub</name></member>
      <member refid="classdetails_1_1monadic__stub_1a9492232e3ad1e63a6b9c8b22166ba6df" prot="public" virt="non-virtual"><scope>details::monadic_stub</scope><name>monadic_stub</name></member>
      <member refid="classdetails_1_1monadic__stub_1a9bf9f81411286c246f0c319aa6ec9773" prot="public" virt="non-virtual"><scope>details::monadic_stub</scope><name>success</name></member>
      <member refid="classdetails_1_1monadic__stub_1ad80e6f941f659a17973dab777cb54c05" prot="public" virt="non-virtual"><scope>details::monadic_stub</scope><name>then</name></member>
      <member refid="classdetails_1_1monadic__stub_1a26bb27499510e9087b259a61934442c9" prot="public" virt="non-virtual"><scope>details::monadic_stub</scope><name>then</name></member>
      <member refid="classdetails_1_1monadic__stub_1ae935bfdf0ff60f929cc4b255e15cceb2" prot="public" virt="non-virtual"><scope>details::monadic_stub</scope><name>then_or</name></member>
      <member refid="classdetails_1_1monadic__stub_1a2d4377586986ce0a337007f7cd2a42fb" prot="public" virt="non-virtual"><scope>details::monadic_stub</scope><name>then_or</name></member>
      <member refid="classdetails_1_1monadic__stub_1a70a184f7bdb74b8878a3033a68184725" prot="public" virt="non-virtual"><scope>details::monadic_stub</scope><name>then_or</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
