<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcommon_1_1event__listener__t" kind="class" language="C++" prot="public">
    <compoundname>common::event_listener_t</compoundname>
    <derivedcompoundref refid="classcommon_1_1event" prot="public" virt="non-virtual">common::event&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classcommon_1_1event_3_01void_01_4" prot="public" virt="non-virtual">common::event&lt; void &gt;</derivedcompoundref>
    <derivedcompoundref refid="classcommon_1_1event" prot="public" virt="non-virtual">common::event&lt; core::systems::input::mouse_coordinate &gt;</derivedcompoundref>
    <derivedcompoundref refid="classcommon_1_1event" prot="public" virt="non-virtual">common::event&lt; core::systems::input::mouse_delta &gt;</derivedcompoundref>
    <derivedcompoundref refid="classcommon_1_1event" prot="public" virt="non-virtual">common::event&lt; core::systems::input::scroll_delta &gt;</derivedcompoundref>
    <derivedcompoundref refid="classcommon_1_1event" prot="public" virt="non-virtual">common::event&lt; keycode &gt;</derivedcompoundref>
    <derivedcompoundref refid="classcommon_1_1event" prot="public" virt="non-virtual">common::event&lt; mousecode &gt;</derivedcompoundref>
    <innerclass refid="structcommon_1_1event__listener__t_1_1internal__event__t" prot="protected">common::event_listener_t::internal_event_t</innerclass>
    <templateparamlist>
      <param>
        <type>typename...</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcommon_1_1event__listener__t_1aa8f0ad921a29259822804c11bf6f95b1" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; internal_event_t &gt;</type>
        <definition>std::vector&lt;internal_event_t&gt; common::event_listener_t&lt; T &gt;::m_Listeners</definition>
        <argsstring></argsstring>
        <name>m_Listeners</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="192" column="13" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcommon_1_1event__listener__t_1a7bc603b6b956d75a050b2ac17c6d4a15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>common::event_listener_t&lt; T &gt;::event_listener_t</definition>
        <argsstring>()=default</argsstring>
        <name>event_listener_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcommon_1_1event__listener__t_1ac4ad31671f8b0def603f5b987542c93a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual common::event_listener_t&lt; T &gt;::~event_listener_t</definition>
        <argsstring>()=default</argsstring>
        <name>~event_listener_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="116" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classcommon_1_1event__listener__t_1a5d50ea8bb0a7000a73b94cb5a3892a57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>common::event_listener_t&lt; T &gt;::event_listener_t</definition>
        <argsstring>(const event_listener_t &amp;)=default</argsstring>
        <name>event_listener_t</name>
        <param>
          <type>const event_listener_t &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcommon_1_1event__listener__t_1aaf2b00adf89727c8be929576f05b1ca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>common::event_listener_t&lt; T &gt;::event_listener_t</definition>
        <argsstring>(event_listener_t &amp;&amp;)=default</argsstring>
        <name>event_listener_t</name>
        <param>
          <type>event_listener_t &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcommon_1_1event__listener__t_1a375ff2eeb3823e1efee28fb36137981b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>event_listener_t &amp;</type>
        <definition>event_listener_t&amp; common::event_listener_t&lt; T &gt;::operator=</definition>
        <argsstring>(const event_listener_t &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const event_listener_t &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="119" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classcommon_1_1event__listener__t_1af1d97831c626559dd80aadf9326a2347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>event_listener_t &amp;</type>
        <definition>event_listener_t&amp; common::event_listener_t&lt; T &gt;::operator=</definition>
        <argsstring>(event_listener_t &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>event_listener_t &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="120" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classcommon_1_1event__listener__t_1ae1c21b6ecdbd9dd407d53be446f75210" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Function</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void common::event_listener_t&lt; T &gt;::Subscribe</definition>
        <argsstring>(Function &amp;&amp;func)</argsstring>
        <name>Subscribe</name>
        <param>
          <type>Function &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="124" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classcommon_1_1event__listener__t_1ab10ba4c1579e8f3dea843607b84a7d7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Function</type>
          </param>
          <param>
            <type>typename Class</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void common::event_listener_t&lt; T &gt;::Subscribe</definition>
        <argsstring>(Class *mThis, Function &amp;&amp;func)</argsstring>
        <name>Subscribe</name>
        <param>
          <type>Class *</type>
          <declname>mThis</declname>
        </param>
        <param>
          <type>Function &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="130" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classcommon_1_1event__listener__t_1a1f1f9906e5b4660b1257aa1f7bd9d346" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Function</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void common::event_listener_t&lt; T &gt;::Unsubscribe</definition>
        <argsstring>(Function &amp;&amp;func)</argsstring>
        <name>Unsubscribe</name>
        <param>
          <type>Function &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="136" column="13" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="136" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classcommon_1_1event__listener__t_1a06118ffec916d0010553ca6b6708994e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Function</type>
          </param>
          <param>
            <type>typename Class</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void common::event_listener_t&lt; T &gt;::Unsubscribe</definition>
        <argsstring>(Class *mThis, Function Class::*func)</argsstring>
        <name>Unsubscribe</name>
        <param>
          <type>Class *</type>
          <declname>mThis</declname>
        </param>
        <param>
          <type>Function Class::*</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="150" column="13" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="150" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classcommon_1_1event__listener__t_1a469fa43d0a12f145a752466b75ad6ef1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Function</type>
          </param>
          <param>
            <type>typename Class</type>
          </param>
        </templateparamlist>
        <type>event_listener_t &amp;</type>
        <definition>event_listener_t&amp; common::event_listener_t&lt; T &gt;::operator+=</definition>
        <argsstring>(std::pair&lt; Class *, Function Class::* &gt; pair)</argsstring>
        <name>operator+=</name>
        <param>
          <type>std::pair&lt; Class *, Function Class::* &gt;</type>
          <declname>pair</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="164" column="18" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="164" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classcommon_1_1event__listener__t_1a9e03c7b90ee5289a1d861f7749b861db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Function</type>
          </param>
        </templateparamlist>
        <type>event_listener_t &amp;</type>
        <definition>event_listener_t&amp; common::event_listener_t&lt; T &gt;::operator+=</definition>
        <argsstring>(Function *func)</argsstring>
        <name>operator+=</name>
        <param>
          <type>Function *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="171" column="18" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="171" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classcommon_1_1event__listener__t_1af7fea3c3e9d47aa9bed824db80d30167" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Function</type>
          </param>
          <param>
            <type>typename Class</type>
          </param>
        </templateparamlist>
        <type>event_listener_t &amp;</type>
        <definition>event_listener_t&amp; common::event_listener_t&lt; T &gt;::operator-=</definition>
        <argsstring>(std::pair&lt; Class *, Function Class::* &gt; pair)</argsstring>
        <name>operator-=</name>
        <param>
          <type>std::pair&lt; Class *, Function Class::* &gt;</type>
          <declname>pair</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="178" column="18" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="178" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classcommon_1_1event__listener__t_1adb66fc29687a7525667ef35db2030023" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Function</type>
          </param>
        </templateparamlist>
        <type>event_listener_t &amp;</type>
        <definition>event_listener_t&amp; common::event_listener_t&lt; T &gt;::operator-=</definition>
        <argsstring>(Function *func)</argsstring>
        <name>operator-=</name>
        <param>
          <type>Function *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="185" column="18" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="185" bodyend="189"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classcommon_1_1event__listener__t_1a49290cceafa181b1f0d17a7bb5038ecf" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Function</type>
          </param>
          <param>
            <type>int...</type>
            <declname>indices</declname>
            <defname>indices</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void common::event_listener_t&lt; T &gt;::InternalSubscribe</definition>
        <argsstring>(Function &amp;&amp;func, std::integer_sequence&lt; int, indices... &gt;)</argsstring>
        <name>InternalSubscribe</name>
        <param>
          <type>Function &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <param>
          <type>std::integer_sequence&lt; int, indices... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="196" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="196" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classcommon_1_1event__listener__t_1a79677ae360061061a3fd8e64c2de3109" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Function</type>
          </param>
          <param>
            <type>typename Class</type>
          </param>
          <param>
            <type>int...</type>
            <declname>indices</declname>
            <defname>indices</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void common::event_listener_t&lt; T &gt;::InternalSubscribe</definition>
        <argsstring>(Class *mThis, Function &amp;&amp;func, std::integer_sequence&lt; int, indices... &gt;)</argsstring>
        <name>InternalSubscribe</name>
        <param>
          <type>Class *</type>
          <declname>mThis</declname>
        </param>
        <param>
          <type>Function &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <param>
          <type>std::integer_sequence&lt; int, indices... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="203" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="203" bodyend="208"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" line="92" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/event.hpp" bodystart="91" bodyend="209"/>
    <listofallmembers>
      <member refid="classcommon_1_1event__listener__t_1a7bc603b6b956d75a050b2ac17c6d4a15" prot="public" virt="non-virtual"><scope>common::event_listener_t</scope><name>event_listener_t</name></member>
      <member refid="classcommon_1_1event__listener__t_1a5d50ea8bb0a7000a73b94cb5a3892a57" prot="public" virt="non-virtual"><scope>common::event_listener_t</scope><name>event_listener_t</name></member>
      <member refid="classcommon_1_1event__listener__t_1aaf2b00adf89727c8be929576f05b1ca6" prot="public" virt="non-virtual"><scope>common::event_listener_t</scope><name>event_listener_t</name></member>
      <member refid="classcommon_1_1event__listener__t_1a49290cceafa181b1f0d17a7bb5038ecf" prot="private" virt="non-virtual"><scope>common::event_listener_t</scope><name>InternalSubscribe</name></member>
      <member refid="classcommon_1_1event__listener__t_1a79677ae360061061a3fd8e64c2de3109" prot="private" virt="non-virtual"><scope>common::event_listener_t</scope><name>InternalSubscribe</name></member>
      <member refid="classcommon_1_1event__listener__t_1aa8f0ad921a29259822804c11bf6f95b1" prot="protected" virt="non-virtual"><scope>common::event_listener_t</scope><name>m_Listeners</name></member>
      <member refid="classcommon_1_1event__listener__t_1a469fa43d0a12f145a752466b75ad6ef1" prot="public" virt="non-virtual"><scope>common::event_listener_t</scope><name>operator+=</name></member>
      <member refid="classcommon_1_1event__listener__t_1a9e03c7b90ee5289a1d861f7749b861db" prot="public" virt="non-virtual"><scope>common::event_listener_t</scope><name>operator+=</name></member>
      <member refid="classcommon_1_1event__listener__t_1af7fea3c3e9d47aa9bed824db80d30167" prot="public" virt="non-virtual"><scope>common::event_listener_t</scope><name>operator-=</name></member>
      <member refid="classcommon_1_1event__listener__t_1adb66fc29687a7525667ef35db2030023" prot="public" virt="non-virtual"><scope>common::event_listener_t</scope><name>operator-=</name></member>
      <member refid="classcommon_1_1event__listener__t_1a375ff2eeb3823e1efee28fb36137981b" prot="public" virt="non-virtual"><scope>common::event_listener_t</scope><name>operator=</name></member>
      <member refid="classcommon_1_1event__listener__t_1af1d97831c626559dd80aadf9326a2347" prot="public" virt="non-virtual"><scope>common::event_listener_t</scope><name>operator=</name></member>
      <member refid="classcommon_1_1event__listener__t_1ae1c21b6ecdbd9dd407d53be446f75210" prot="public" virt="non-virtual"><scope>common::event_listener_t</scope><name>Subscribe</name></member>
      <member refid="classcommon_1_1event__listener__t_1ab10ba4c1579e8f3dea843607b84a7d7e" prot="public" virt="non-virtual"><scope>common::event_listener_t</scope><name>Subscribe</name></member>
      <member refid="classcommon_1_1event__listener__t_1a1f1f9906e5b4660b1257aa1f7bd9d346" prot="public" virt="non-virtual"><scope>common::event_listener_t</scope><name>Unsubscribe</name></member>
      <member refid="classcommon_1_1event__listener__t_1a06118ffec916d0010553ca6b6708994e" prot="public" virt="non-virtual"><scope>common::event_listener_t</scope><name>Unsubscribe</name></member>
      <member refid="classcommon_1_1event__listener__t_1ac4ad31671f8b0def603f5b987542c93a" prot="public" virt="virtual"><scope>common::event_listener_t</scope><name>~event_listener_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
