<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpsl_1_1serialization_1_1accessor" kind="class" language="C++" prot="public">
    <compoundname>psl::serialization::accessor</compoundname>
    <innerclass refid="structpsl_1_1serialization_1_1accessor_1_1is__polymorphic" prot="private">psl::serialization::accessor::is_polymorphic</innerclass>
    <innerclass refid="structpsl_1_1serialization_1_1accessor_1_1is__polymorphic_3_01_t_00_01std_1_1void__t_3_01decltypf455af72fab7b46683cbb97df4f2211c" prot="private">psl::serialization::accessor::is_polymorphic&lt; T, std::void_t&lt; decltype(std::declval&lt; T &gt;().polymorphic_id())&gt; &gt;</innerclass>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classpsl_1_1serialization_1_1accessor_1a93d8cf6b4d57f3be369b454a6cd2a704" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto psl::serialization::accessor::test_has_name</definition>
        <argsstring>() noexcept -&gt; void</argsstring>
        <name>test_has_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="96" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1accessor_1aea4e8fe6df2a63694b916ac08646e17d" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto psl::serialization::accessor::test_has_polymorphic_name</definition>
        <argsstring>() noexcept -&gt; void</argsstring>
        <name>test_has_polymorphic_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="101" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1accessor_1acdd19f13c3626f89b99bf1a22c58acf0" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto psl::serialization::accessor::test_is_polymorphic</definition>
        <argsstring>() noexcept -&gt; typename is_polymorphic&lt; T &gt;::type</argsstring>
        <name>test_is_polymorphic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="107" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1accessor_1a9204ca06d55dfd2fefd61af9813f7c2b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto psl::serialization::accessor::serialize_fn</definition>
        <argsstring>(S &amp;s, T &amp;obj)</argsstring>
        <name>serialize_fn</name>
        <param>
          <type>S &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="113" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="1046" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1accessor_1a7283d6d56db4140fa361c667cdef8136" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto psl::serialization::accessor::to_string</definition>
        <argsstring>(T &amp;t, psl::format::container &amp;container, psl::format::data &amp;parent) -&gt; decltype(t.to_string(container, parent))</argsstring>
        <name>to_string</name>
        <param>
          <type>T &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>psl::format::container &amp;</type>
          <declname>container</declname>
        </param>
        <param>
          <type>psl::format::data &amp;</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="116" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="116" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1accessor_1a4ad8eda64951b238b9e00fe0d80e1ee4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto psl::serialization::accessor::serialize</definition>
        <argsstring>(S &amp;s, T &amp;obj) -&gt; decltype(obj.serialize(s))</argsstring>
        <name>serialize</name>
        <param>
          <type>S &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="124" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="1060" bodyend="1078"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1accessor_1a099217585feaf8bfd748df0f2abc610b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto psl::serialization::accessor::serialize_directly</definition>
        <argsstring>(S &amp;s, T &amp;obj) -&gt; decltype(obj.serialize(s))</argsstring>
        <name>serialize_directly</name>
        <param>
          <type>S &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="127" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1accessor_1aafaf05f63588d7895e965d85b203fc98" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr psl::string8::view</type>
        <definition>constexpr psl::string8::view psl::serialization::accessor::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="133" column="44" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="198" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1accessor_1a617209cd094c25022ca72f83b2ba17d9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>consteval uint64_t</type>
        <definition>consteval uint64_t psl::serialization::accessor::id</definition>
        <argsstring>()</argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="136" column="34" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="209" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1accessor_1a491a4d925dfff88f8d06fef1d348da01" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>uint64_t</type>
        <definition>static uint64_t psl::serialization::accessor::polymorphic_id</definition>
        <argsstring>(T &amp;obj)</argsstring>
        <name>polymorphic_id</name>
        <param>
          <type>T &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="139" column="24" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="139" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1accessor_1a1c050a39470dd8ecfd787a1ee8afb1b2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>uint64_t</type>
        <definition>static uint64_t psl::serialization::accessor::polymorphic_id</definition>
        <argsstring>(T *obj)</argsstring>
        <name>polymorphic_id</name>
        <param>
          <type>T *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="151" column="24" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="151" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1accessor_1a9dd7723676806919073d11b3e9a55979" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>constexpr static bool</type>
        <definition>constexpr static bool psl::serialization::accessor::supports_polymorphism</definition>
        <argsstring>()</argsstring>
        <name>supports_polymorphism</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="163" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1serialization_1_1accessor_1a9c17d46458bc3171d69ebba8856d764a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; uint64_t, polymorphic_data_t * &gt; &amp;</type>
        <definition>std::unordered_map&lt; uint64_t, psl::serialization::polymorphic_data_t * &gt; &amp; psl::serialization::accessor::polymorphic_data</definition>
        <argsstring>()</argsstring>
        <name>polymorphic_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="169" column="27" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/serialization/serializer.cpp" bodystart="5" bodyend="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" line="81" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/serialization/serializer.hpp" bodystart="80" bodyend="172"/>
    <listofallmembers>
      <member refid="classpsl_1_1serialization_1_1accessor_1a617209cd094c25022ca72f83b2ba17d9" prot="public" virt="non-virtual"><scope>psl::serialization::accessor</scope><name>id</name></member>
      <member refid="classpsl_1_1serialization_1_1accessor_1aafaf05f63588d7895e965d85b203fc98" prot="public" virt="non-virtual"><scope>psl::serialization::accessor</scope><name>name</name></member>
      <member refid="classpsl_1_1serialization_1_1accessor_1a9c17d46458bc3171d69ebba8856d764a" prot="public" virt="non-virtual"><scope>psl::serialization::accessor</scope><name>polymorphic_data</name></member>
      <member refid="classpsl_1_1serialization_1_1accessor_1a491a4d925dfff88f8d06fef1d348da01" prot="public" virt="non-virtual"><scope>psl::serialization::accessor</scope><name>polymorphic_id</name></member>
      <member refid="classpsl_1_1serialization_1_1accessor_1a1c050a39470dd8ecfd787a1ee8afb1b2" prot="public" virt="non-virtual"><scope>psl::serialization::accessor</scope><name>polymorphic_id</name></member>
      <member refid="classpsl_1_1serialization_1_1accessor_1a4ad8eda64951b238b9e00fe0d80e1ee4" prot="public" virt="non-virtual"><scope>psl::serialization::accessor</scope><name>serialize</name></member>
      <member refid="classpsl_1_1serialization_1_1accessor_1a099217585feaf8bfd748df0f2abc610b" prot="public" virt="non-virtual"><scope>psl::serialization::accessor</scope><name>serialize_directly</name></member>
      <member refid="classpsl_1_1serialization_1_1accessor_1a9204ca06d55dfd2fefd61af9813f7c2b" prot="public" virt="non-virtual"><scope>psl::serialization::accessor</scope><name>serialize_fn</name></member>
      <member refid="classpsl_1_1serialization_1_1accessor_1a9dd7723676806919073d11b3e9a55979" prot="public" virt="non-virtual"><scope>psl::serialization::accessor</scope><name>supports_polymorphism</name></member>
      <member refid="classpsl_1_1serialization_1_1accessor_1a93d8cf6b4d57f3be369b454a6cd2a704" prot="public" virt="non-virtual"><scope>psl::serialization::accessor</scope><name>test_has_name</name></member>
      <member refid="classpsl_1_1serialization_1_1accessor_1aea4e8fe6df2a63694b916ac08646e17d" prot="public" virt="non-virtual"><scope>psl::serialization::accessor</scope><name>test_has_polymorphic_name</name></member>
      <member refid="classpsl_1_1serialization_1_1accessor_1acdd19f13c3626f89b99bf1a22c58acf0" prot="public" virt="non-virtual"><scope>psl::serialization::accessor</scope><name>test_is_polymorphic</name></member>
      <member refid="classpsl_1_1serialization_1_1accessor_1a7283d6d56db4140fa361c667cdef8136" prot="public" virt="non-virtual"><scope>psl::serialization::accessor</scope><name>to_string</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
