<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcore_1_1gfx_1_1buffer__t" kind="class" language="C++" prot="public">
    <compoundname>core::gfx::buffer_t</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcore_1_1gfx_1_1buffer__t_1a0999c77b61a6e4ce6389aa36f0e3fa20" prot="private" static="no" mutable="no">
        <type>core::gfx::graphics_backend</type>
        <definition>core::gfx::graphics_backend core::gfx::buffer_t::m_Backend</definition>
        <argsstring></argsstring>
        <name>m_Backend</name>
        <initializer>{graphics_backend::undefined}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" line="73" column="29" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcore_1_1gfx_1_1buffer__t_1a3edbb047a3b3f72bf8dbc14eea3a2545" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>buffer_t::buffer_t</definition>
        <argsstring>(core::resource::cache_t &amp;cache, const core::resource::metadata &amp;metaData, psl::meta::file *metaFile, core::resource::handle&lt; core::gfx::context &gt; context, core::resource::handle&lt; core::data::buffer_t &gt; data)</argsstring>
        <name>buffer_t</name>
        <param>
          <type>core::resource::cache_t &amp;</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const <ref refid="structcore_1_1resource_1_1metadata" kindref="compound">core::resource::metadata</ref> &amp;</type>
          <declname>metaData</declname>
        </param>
        <param>
          <type><ref refid="classpsl_1_1meta_1_1file" kindref="compound">psl::meta::file</ref> *</type>
          <declname>metaFile</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; core::gfx::context &gt;</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1data_1_1buffer__t" kindref="compound">core::data::buffer_t</ref> &gt;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" line="29" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/buffer.cpp" bodystart="28" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1buffer__t_1a17814b54ec0c13ba75fa1e8edfdd7de7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>buffer_t::buffer_t</definition>
        <argsstring>(core::resource::cache_t &amp;cache, const core::resource::metadata &amp;metaData, psl::meta::file *metaFile, core::resource::handle&lt; core::gfx::context &gt; context, core::resource::handle&lt; core::data::buffer_t &gt; data, core::resource::handle&lt; core::gfx::buffer_t &gt; staging)</argsstring>
        <name>buffer_t</name>
        <param>
          <type>core::resource::cache_t &amp;</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const <ref refid="structcore_1_1resource_1_1metadata" kindref="compound">core::resource::metadata</ref> &amp;</type>
          <declname>metaData</declname>
        </param>
        <param>
          <type><ref refid="classpsl_1_1meta_1_1file" kindref="compound">psl::meta::file</ref> *</type>
          <declname>metaFile</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; core::gfx::context &gt;</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1data_1_1buffer__t" kindref="compound">core::data::buffer_t</ref> &gt;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; core::gfx::buffer_t &gt;</type>
          <declname>staging</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" line="35" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/buffer.cpp" bodystart="51" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1buffer__t_1af2767cb7e3ecdb7e5d01cd6621d896a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>buffer_t::~buffer_t</definition>
        <argsstring>()</argsstring>
        <name>~buffer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" line="41" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/buffer.cpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1buffer__t_1a7dcb641a00c3b32cb7322fe728a1bdc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::gfx::buffer_t::buffer_t</definition>
        <argsstring>(const buffer_t &amp;other)=delete</argsstring>
        <name>buffer_t</name>
        <param>
          <type>const buffer_t &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1buffer__t_1a2448bd2a772dad5b4e5e5179383bd3a1" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>core::gfx::buffer_t::buffer_t</definition>
        <argsstring>(buffer_t &amp;&amp;other) noexcept=delete</argsstring>
        <name>buffer_t</name>
        <param>
          <type>buffer_t &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1buffer__t_1a234091451e6077eb23831d85f391e472" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>buffer_t &amp;</type>
        <definition>buffer_t&amp; core::gfx::buffer_t::operator=</definition>
        <argsstring>(const buffer_t &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const buffer_t &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" line="45" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1buffer__t_1a13a28ce38660000cd30f00024ab78ff7" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>buffer_t &amp;</type>
        <definition>buffer_t&amp; core::gfx::buffer_t::operator=</definition>
        <argsstring>(buffer_t &amp;&amp;other) noexcept=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>buffer_t &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" line="46" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1buffer__t_1aebc026ce3f167b34fde1dd84be7e99f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classcore_1_1data_1_1buffer__t" kindref="compound">core::data::buffer_t</ref> &amp;</type>
        <definition>core::resource::handle&lt; core::data::buffer_t &gt; buffer_t::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" line="49" column="28" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/buffer.cpp" bodystart="79" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1buffer__t_1a489e866a1f932e3c967c24b1aae6fbba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classmemory_1_1segment" kindref="compound">memory::segment</ref> &gt;</type>
        <definition>std::optional&lt; memory::segment &gt; buffer_t::reserve</definition>
        <argsstring>(uint64_t size)</argsstring>
        <name>reserve</name>
        <param>
          <type>uint64_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" line="51" column="16" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/buffer.cpp" bodystart="98" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1buffer__t_1ad7f0ad7e7e7cc84187ae6dabbb120fac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>psl::array&lt; std::pair&lt; <ref refid="classmemory_1_1segment" kindref="compound">memory::segment</ref>, <ref refid="classmemory_1_1range__t" kindref="compound">memory::range_t</ref> &gt; &gt;</type>
        <definition>psl::array&lt; std::pair&lt; memory::segment, memory::range_t &gt; &gt; buffer_t::reserve</definition>
        <argsstring>(psl::array&lt; uint64_t &gt; sizes, bool optimize=false)</argsstring>
        <name>reserve</name>
        <param>
          <type>psl::array&lt; uint64_t &gt;</type>
          <declname>sizes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>optimize</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" line="52" column="13" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/buffer.cpp" bodystart="114" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1buffer__t_1a01649f11bfc58ff4dce167f39c4a5ff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool buffer_t::deallocate</definition>
        <argsstring>(memory::segment &amp;segment)</argsstring>
        <name>deallocate</name>
        <param>
          <type><ref refid="classmemory_1_1segment" kindref="compound">memory::segment</ref> &amp;</type>
          <declname>segment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" line="54" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/buffer.cpp" bodystart="132" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1buffer__t_1ada775adbd3fc29afb492a3b8b0918225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool buffer_t::copy_from</definition>
        <argsstring>(const buffer_t &amp;other, psl::array&lt; core::gfx::memory_copy &gt; ranges)</argsstring>
        <name>copy_from</name>
        <param>
          <type>const buffer_t &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>psl::array&lt; core::gfx::memory_copy &gt;</type>
          <declname>ranges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" line="56" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/buffer.cpp" bodystart="148" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1buffer__t_1a5de2744d4d9ed988da7c18b1d83b9ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool buffer_t::commit</definition>
        <argsstring>(const psl::array&lt; core::gfx::commit_instruction &gt; &amp;instructions)</argsstring>
        <name>commit</name>
        <param>
          <type>const psl::array&lt; <ref refid="structcore_1_1gfx_1_1commit__instruction" kindref="compound">core::gfx::commit_instruction</ref> &gt; &amp;</type>
          <declname>instructions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" line="57" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/buffer.cpp" bodystart="171" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1buffer__t_1a2419bdefd5f50a9c0674f8295c4700ca" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t buffer_t::free_size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>free_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" line="59" column="8" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gfx/buffer.cpp" bodystart="188" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1gfx_1_1buffer__t_1a282fc91d918d8370812f6693420c1ff8" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>core::gfx::graphics_backend</type>
            <declname>backend</declname>
            <defname>backend</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; backend_type_t&lt; buffer_t, backend &gt; &gt;</type>
        <definition>core::resource::handle&lt;backend_type_t&lt;buffer_t, backend&gt; &gt; core::gfx::buffer_t::resource</definition>
        <argsstring>() const noexcept</argsstring>
        <name>resource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" line="62" column="24" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" bodystart="62" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" line="20" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gfx/buffer.hpp" bodystart="19" bodyend="80"/>
    <listofallmembers>
      <member refid="classcore_1_1gfx_1_1buffer__t_1a3edbb047a3b3f72bf8dbc14eea3a2545" prot="public" virt="non-virtual"><scope>core::gfx::buffer_t</scope><name>buffer_t</name></member>
      <member refid="classcore_1_1gfx_1_1buffer__t_1a17814b54ec0c13ba75fa1e8edfdd7de7" prot="public" virt="non-virtual"><scope>core::gfx::buffer_t</scope><name>buffer_t</name></member>
      <member refid="classcore_1_1gfx_1_1buffer__t_1a7dcb641a00c3b32cb7322fe728a1bdc6" prot="public" virt="non-virtual"><scope>core::gfx::buffer_t</scope><name>buffer_t</name></member>
      <member refid="classcore_1_1gfx_1_1buffer__t_1a2448bd2a772dad5b4e5e5179383bd3a1" prot="public" virt="non-virtual"><scope>core::gfx::buffer_t</scope><name>buffer_t</name></member>
      <member refid="classcore_1_1gfx_1_1buffer__t_1a5de2744d4d9ed988da7c18b1d83b9ee1" prot="public" virt="non-virtual"><scope>core::gfx::buffer_t</scope><name>commit</name></member>
      <member refid="classcore_1_1gfx_1_1buffer__t_1ada775adbd3fc29afb492a3b8b0918225" prot="public" virt="non-virtual"><scope>core::gfx::buffer_t</scope><name>copy_from</name></member>
      <member refid="classcore_1_1gfx_1_1buffer__t_1aebc026ce3f167b34fde1dd84be7e99f5" prot="public" virt="non-virtual"><scope>core::gfx::buffer_t</scope><name>data</name></member>
      <member refid="classcore_1_1gfx_1_1buffer__t_1a01649f11bfc58ff4dce167f39c4a5ff7" prot="public" virt="non-virtual"><scope>core::gfx::buffer_t</scope><name>deallocate</name></member>
      <member refid="classcore_1_1gfx_1_1buffer__t_1a2419bdefd5f50a9c0674f8295c4700ca" prot="public" virt="non-virtual"><scope>core::gfx::buffer_t</scope><name>free_size</name></member>
      <member refid="classcore_1_1gfx_1_1buffer__t_1a0999c77b61a6e4ce6389aa36f0e3fa20" prot="private" virt="non-virtual"><scope>core::gfx::buffer_t</scope><name>m_Backend</name></member>
      <member refid="classcore_1_1gfx_1_1buffer__t_1a234091451e6077eb23831d85f391e472" prot="public" virt="non-virtual"><scope>core::gfx::buffer_t</scope><name>operator=</name></member>
      <member refid="classcore_1_1gfx_1_1buffer__t_1a13a28ce38660000cd30f00024ab78ff7" prot="public" virt="non-virtual"><scope>core::gfx::buffer_t</scope><name>operator=</name></member>
      <member refid="classcore_1_1gfx_1_1buffer__t_1a489e866a1f932e3c967c24b1aae6fbba" prot="public" virt="non-virtual"><scope>core::gfx::buffer_t</scope><name>reserve</name></member>
      <member refid="classcore_1_1gfx_1_1buffer__t_1ad7f0ad7e7e7cc84187ae6dabbb120fac" prot="public" virt="non-virtual"><scope>core::gfx::buffer_t</scope><name>reserve</name></member>
      <member refid="classcore_1_1gfx_1_1buffer__t_1a282fc91d918d8370812f6693420c1ff8" prot="public" virt="non-virtual"><scope>core::gfx::buffer_t</scope><name>resource</name></member>
      <member refid="classcore_1_1gfx_1_1buffer__t_1af2767cb7e3ecdb7e5d01cd6621d896a3" prot="public" virt="non-virtual"><scope>core::gfx::buffer_t</scope><name>~buffer_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
