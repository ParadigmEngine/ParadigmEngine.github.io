<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcore_1_1igles_1_1buffer__t" kind="class" language="C++" prot="public">
    <compoundname>core::igles::buffer_t</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcore_1_1igles_1_1buffer__t_1a02f645bd1a04d88d751aed7906b5a9e0" prot="private" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint core::igles::buffer_t::m_Buffer</definition>
        <argsstring></argsstring>
        <name>m_Buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="76" column="8" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1igles_1_1buffer__t_1aad7783f64dd81e0438fd3463d20a1a54" prot="private" static="no" mutable="no">
        <type>GLint</type>
        <definition>GLint core::igles::buffer_t::m_BufferType</definition>
        <argsstring></argsstring>
        <name>m_BufferType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="77" column="7" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1igles_1_1buffer__t_1a0adeb03d65001ebcac816a3b4b7502d4" prot="private" static="no" mutable="no">
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1data_1_1buffer__t" kindref="compound">core::data::buffer_t</ref> &gt;</type>
        <definition>core::resource::handle&lt;core::data::buffer_t&gt; core::igles::buffer_t::m_BufferDataHandle</definition>
        <argsstring></argsstring>
        <name>m_BufferDataHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="78" column="24" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1igles_1_1buffer__t_1ae50c5e075f4f0d4ff2cc7a8bd7d37a94" prot="private" static="no" mutable="no">
        <type><ref refid="structpsl_1_1_u_i_d" kindref="compound">psl::UID</ref></type>
        <definition>psl::UID core::igles::buffer_t::m_UID</definition>
        <argsstring></argsstring>
        <name>m_UID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="79" column="10" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcore_1_1igles_1_1buffer__t_1afe16cc6c66b74aba4dc2b9d418e9d292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>buffer_t::buffer_t</definition>
        <argsstring>(core::resource::cache_t &amp;cache, const core::resource::metadata &amp;metaData, psl::meta::file *metaFile, core::resource::handle&lt; core::data::buffer_t &gt; buffer_data)</argsstring>
        <name>buffer_t</name>
        <param>
          <type>core::resource::cache_t &amp;</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const <ref refid="structcore_1_1resource_1_1metadata" kindref="compound">core::resource::metadata</ref> &amp;</type>
          <declname>metaData</declname>
        </param>
        <param>
          <type><ref refid="classpsl_1_1meta_1_1file" kindref="compound">psl::meta::file</ref> *</type>
          <declname>metaFile</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1data_1_1buffer__t" kindref="compound">core::data::buffer_t</ref> &gt;</type>
          <declname>buffer_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="19" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gles/buffer.cpp" bodystart="13" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1igles_1_1buffer__t_1ac4ee80ad0ef2a6dc4540ab15554a8c8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::igles::buffer_t::~buffer_t</definition>
        <argsstring>()</argsstring>
        <name>~buffer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1igles_1_1buffer__t_1a83b689dca284b895a902023b13a37185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::igles::buffer_t::buffer_t</definition>
        <argsstring>(const buffer_t &amp;)=delete</argsstring>
        <name>buffer_t</name>
        <param>
          <type>const buffer_t &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1igles_1_1buffer__t_1acd498c25a15bb1fd340c1cfd2fc6d54e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::igles::buffer_t::buffer_t</definition>
        <argsstring>(buffer_t &amp;&amp;)=delete</argsstring>
        <name>buffer_t</name>
        <param>
          <type>buffer_t &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1igles_1_1buffer__t_1a6a1f1c2076ec60b0a9c1ae4e0aa4382d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>buffer_t &amp;</type>
        <definition>buffer_t&amp; core::igles::buffer_t::operator=</definition>
        <argsstring>(const buffer_t)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const</type>
          <declname>buffer_t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="27" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1igles_1_1buffer__t_1a0ef4ffc052b852d47378e4c22830a271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>buffer_t &amp;</type>
        <definition>buffer_t&amp; core::igles::buffer_t::operator=</definition>
        <argsstring>(buffer_t &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>buffer_t &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="28" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1igles_1_1buffer__t_1a7c996815ad74225cb47804786892213b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool buffer_t::set</definition>
        <argsstring>(const void *data, std::vector&lt; core::gfx::memory_copy &gt; commands)</argsstring>
        <name>set</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::vector&lt; core::gfx::memory_copy &gt;</type>
          <declname>commands</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="30" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gles/buffer.cpp" bodystart="57" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1igles_1_1buffer__t_1afd62eee1d49043783ebf2e0a38b5df78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool buffer_t::set</definition>
        <argsstring>(std::vector&lt; core::gfx::memory_copy &gt; commands)</argsstring>
        <name>set</name>
        <param>
          <type>std::vector&lt; core::gfx::memory_copy &gt;</type>
          <declname>commands</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="31" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gles/buffer.cpp" bodystart="80" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1igles_1_1buffer__t_1a91273c423ee5ec4cbdf789adca7d6568" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>GLuint</type>
        <definition>GLuint core::igles::buffer_t::id</definition>
        <argsstring>() const noexcept</argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="33" column="15" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1igles_1_1buffer__t_1aa7cc819b973c19ab38cafdfbf8d04b16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="classmemory_1_1segment" kindref="compound">memory::segment</ref> &gt;</type>
        <definition>std::optional&lt; memory::segment &gt; buffer_t::allocate</definition>
        <argsstring>(size_t size)</argsstring>
        <name>allocate</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>tries to reserve a region of memory of <emphasis>at least</emphasis> the given size in the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>the minimum size to allocate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classmemory_1_1segment" kindref="compound">memory::segment</ref> on success. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="42" column="16" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gles/buffer.cpp" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1igles_1_1buffer__t_1a1fa6bcdb2e2e60b85d2f43e9e3beef1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::pair&lt; <ref refid="classmemory_1_1segment" kindref="compound">memory::segment</ref>, <ref refid="classmemory_1_1range__t" kindref="compound">memory::range_t</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;memory::segment, memory::range_t&gt; &gt; core::igles::buffer_t::allocate</definition>
        <argsstring>(psl::array&lt; size_t &gt; sizes, bool optimize=false)</argsstring>
        <name>allocate</name>
        <param>
          <type>psl::array&lt; size_t &gt;</type>
          <declname>sizes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>optimize</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>tries to reserve all requested sizes in the <ref refid="classmemory_1_1region" kindref="compound">memory::region</ref> of this buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>optmized version of reserve() that works on a batch of data. It will try to satisfy allocating regions of memory of atleast the given accumulative size. Depending on the optimize boolean parameter&apos;s value this can be in one optimized <ref refid="classmemory_1_1segment" kindref="compound">memory::segment</ref> (true), or in equal amount of memory::segments as there were elements in the sizes requested container (false). when optimize is true, the returned <ref refid="classmemory_1_1range__t" kindref="compound">memory::range_t</ref> in the pair signifies the offset from the start of the segment (where the actual memory you requested resides). when optimize is false, range always starts at 0, and ends at the actual allocated size. <simplesect kind="return"><para>a vector with as many contained elements as the requested sizes container has.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sizes</parametername>
</parameternamelist>
<parameterdescription>
<para>a container with minimum sizes you want to request.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">optimize</parametername>
</parameternamelist>
<parameterdescription>
<para>signifies if we should we try to collapse multiple memory::segments into one segment if possible, avoiding fragmentation and overhead. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="56" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1igles_1_1buffer__t_1a440af7cf14eb46f9ccbd5400cd4a3272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool core::igles::buffer_t::deallocate</definition>
        <argsstring>(memory::segment &amp;segment)</argsstring>
        <name>deallocate</name>
        <param>
          <type><ref refid="classmemory_1_1segment" kindref="compound">memory::segment</ref> &amp;</type>
          <declname>segment</declname>
        </param>
        <briefdescription>
<para>marks the specific region of memory available again. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">segment</parametername>
</parameternamelist>
<parameterdescription>
<para>the region you wish to free up. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>success in case the region was freed. note that in case the buffer was not the owner of the <ref refid="classmemory_1_1segment" kindref="compound">memory::segment</ref>, false will be returned. </para>
</simplesect>
<simplesect kind="note"><para>no actual memory will be freed. driver resources are created at the start (constructor) and can only be freed completely (destructor). there is no intermediate unless you copy over the resources to a new, smaller buffer. Check copy_from() for that. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="66" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1igles_1_1buffer__t_1a34e57db8a012a29a52fa39fae1a47877" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classcore_1_1data_1_1buffer__t" kindref="compound">core::data::buffer_t</ref> &amp;</type>
        <definition>const core::data::buffer_t&amp; core::igles::buffer_t::data</definition>
        <argsstring>() const noexcept</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="68" column="28" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1igles_1_1buffer__t_1a268678a3a849c144fc01aa6982692853" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool buffer_t::copy_from</definition>
        <argsstring>(const buffer_t &amp;other, const psl::array&lt; core::gfx::memory_copy &gt; &amp;ranges)</argsstring>
        <name>copy_from</name>
        <param>
          <type>const buffer_t &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const psl::array&lt; core::gfx::memory_copy &gt; &amp;</type>
          <declname>ranges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="70" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/gles/buffer.cpp" bodystart="159" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1igles_1_1buffer__t_1a97eee29b2dd3f1287a39095b6cbcd1cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool core::igles::buffer_t::commit</definition>
        <argsstring>(const psl::array&lt; core::gfx::commit_instruction &gt; &amp;instructions)</argsstring>
        <name>commit</name>
        <param>
          <type>const psl::array&lt; <ref refid="structcore_1_1gfx_1_1commit__instruction" kindref="compound">core::gfx::commit_instruction</ref> &gt; &amp;</type>
          <declname>instructions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="72" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1igles_1_1buffer__t_1af24874901a278e6f967d80520ea33790" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t core::igles::buffer_t::free_size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>free_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="73" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" line="17" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/gles/buffer.hpp" bodystart="16" bodyend="80"/>
    <listofallmembers>
      <member refid="classcore_1_1igles_1_1buffer__t_1aa7cc819b973c19ab38cafdfbf8d04b16" prot="public" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>allocate</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1a1fa6bcdb2e2e60b85d2f43e9e3beef1a" prot="public" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>allocate</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1afe16cc6c66b74aba4dc2b9d418e9d292" prot="public" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>buffer_t</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1a83b689dca284b895a902023b13a37185" prot="public" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>buffer_t</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1acd498c25a15bb1fd340c1cfd2fc6d54e" prot="public" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>buffer_t</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1a97eee29b2dd3f1287a39095b6cbcd1cc" prot="public" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>commit</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1a268678a3a849c144fc01aa6982692853" prot="public" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>copy_from</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1a34e57db8a012a29a52fa39fae1a47877" prot="public" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>data</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1a440af7cf14eb46f9ccbd5400cd4a3272" prot="public" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>deallocate</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1af24874901a278e6f967d80520ea33790" prot="public" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>free_size</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1a91273c423ee5ec4cbdf789adca7d6568" prot="public" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>id</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1a02f645bd1a04d88d751aed7906b5a9e0" prot="private" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>m_Buffer</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1a0adeb03d65001ebcac816a3b4b7502d4" prot="private" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>m_BufferDataHandle</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1aad7783f64dd81e0438fd3463d20a1a54" prot="private" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>m_BufferType</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1ae50c5e075f4f0d4ff2cc7a8bd7d37a94" prot="private" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>m_UID</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1a6a1f1c2076ec60b0a9c1ae4e0aa4382d" prot="public" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>operator=</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1a0ef4ffc052b852d47378e4c22830a271" prot="public" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>operator=</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1a7c996815ad74225cb47804786892213b" prot="public" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>set</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1afd62eee1d49043783ebf2e0a38b5df78" prot="public" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>set</name></member>
      <member refid="classcore_1_1igles_1_1buffer__t_1ac4ee80ad0ef2a6dc4540ab15554a8c8b" prot="public" virt="non-virtual"><scope>core::igles::buffer_t</scope><name>~buffer_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
