<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpsl_1_1meta_1_1file" kind="class" language="C++" prot="public">
    <compoundname>psl::meta::file</compoundname>
    <derivedcompoundref refid="classcore_1_1meta_1_1shader" prot="public" virt="non-virtual">core::meta::shader</derivedcompoundref>
    <derivedcompoundref refid="classcore_1_1meta_1_1texture__t" prot="public" virt="non-virtual">core::meta::texture_t</derivedcompoundref>
    <includes refid="library_8hpp" local="no">library.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classpsl_1_1meta_1_1file_1ae6e4002148765f114da9fe1b5c64547d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class psl::serialization::accessor</definition>
        <argsstring></argsstring>
        <name>psl::serialization::accessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="33" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classpsl_1_1meta_1_1file_1aff99cd87960d60b2d7cd59526d91398a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class psl::meta::library</definition>
        <argsstring></argsstring>
        <name>psl::meta::library</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="34" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpsl_1_1meta_1_1file_1ad40109597018c48d16493d7e4b9c46d6" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;UID&quot;, psl::UID &gt;</type>
        <definition>psl::serialization::property&lt;&quot;UID&quot;, psl::UID&gt; psl::meta::file::m_ID</definition>
        <argsstring></argsstring>
        <name>m_ID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="74" column="30" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1meta_1_1file_1aae05057682fff9a0b775bc30954c2de9" prot="private" static="no" mutable="no">
        <type>psl::serialization::property&lt;&quot;TAGS&quot;, std::vector&lt; psl::string8_t &gt; &gt;</type>
        <definition>psl::serialization::property&lt;&quot;TAGS&quot;, std::vector&lt;psl::string8_t&gt; &gt; psl::meta::file::m_Tags</definition>
        <argsstring></argsstring>
        <name>m_Tags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="75" column="30" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classpsl_1_1meta_1_1file_1a828385fbebc169cc2c144e099f3dc8a0" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr psl::string8::view</type>
        <definition>constexpr psl::string8::view psl::meta::file::serialization_name</definition>
        <argsstring></argsstring>
        <name>serialization_name</name>
        <initializer>{&quot;META&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="77" column="37" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1meta_1_1file_1a7decbcc3de4c6f524df222f0dad614cb" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr psl::string8::view</type>
        <definition>constexpr psl::string8::view psl::meta::file::polymorphic_name</definition>
        <argsstring></argsstring>
        <name>polymorphic_name</name>
        <initializer>{&quot;META&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="78" column="37" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1meta_1_1file_1a0956bf907b7c98c4747959a8d55e0e01" prot="private" static="yes" mutable="no">
        <type>const uint64_t</type>
        <definition>const uint64_t file::polymorphic_identity</definition>
        <argsstring></argsstring>
        <name>polymorphic_identity</name>
        <initializer>{register_polymorphic&lt;<ref refid="classpsl_1_1meta_1_1file" kindref="compound">file</ref>&gt;()}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="80" column="23" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpsl_1_1meta_1_1file_1a9dd6ad47b1a46c01c0195e1f7feaea66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>psl::meta::file::file</definition>
        <argsstring>(const psl::UID &amp;key)</argsstring>
        <name>file</name>
        <param>
          <type>const <ref refid="structpsl_1_1_u_i_d" kindref="compound">psl::UID</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">key</parametername>
</parameternamelist>
<parameterdescription>
<para>the unique <ref refid="structpsl_1_1_u_i_d" kindref="compound">psl::UID</ref> associated with this <ref refid="classpsl_1_1meta_1_1file" kindref="compound">meta::file</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="38" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1meta_1_1file_1aa8ba3e3715bfb8ffb1956414093cecff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>psl::meta::file::file</definition>
        <argsstring>(S &amp;s, const psl::string8_t &amp;filename)</argsstring>
        <name>file</name>
        <param>
          <type>S &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const psl::string8_t &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="41" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" bodystart="41" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1meta_1_1file_1add07f982eb38df2274a1146be5c057d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>psl::meta::file::file</definition>
        <argsstring>()</argsstring>
        <name>file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="48" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1meta_1_1file_1a5dd34d73b5a8df3de9f3076cbb727047" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual psl::meta::file::~file</definition>
        <argsstring>()=default</argsstring>
        <name>~file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="49" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1meta_1_1file_1ab2bcf7b6e0c00bf8441de0d6bccde949" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>psl::meta::file::file</definition>
        <argsstring>(const file &amp;)=delete</argsstring>
        <name>file</name>
        <param>
          <type>const <ref refid="classpsl_1_1meta_1_1file" kindref="compound">file</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1meta_1_1file_1a1ba2901274565fa94ef76b19465cc4c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>psl::meta::file::file</definition>
        <argsstring>(file &amp;&amp;)=delete</argsstring>
        <name>file</name>
        <param>
          <type><ref refid="classpsl_1_1meta_1_1file" kindref="compound">file</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1meta_1_1file_1aa9ee8e8b9e867bbaf3dbcdfad83530a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpsl_1_1meta_1_1file" kindref="compound">file</ref> &amp;</type>
        <definition>file&amp; psl::meta::file::operator=</definition>
        <argsstring>(const file &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classpsl_1_1meta_1_1file" kindref="compound">file</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="53" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1meta_1_1file_1a5ed845814586f964ccc5f3c268c0861e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpsl_1_1meta_1_1file" kindref="compound">file</ref> &amp;</type>
        <definition>file&amp; psl::meta::file::operator=</definition>
        <argsstring>(file &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classpsl_1_1meta_1_1file" kindref="compound">file</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="54" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1meta_1_1file_1abea97c4747d4e435033ec7b73270c103" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structpsl_1_1_u_i_d" kindref="compound">psl::UID</ref> &amp;</type>
        <definition>const psl::UID&amp; psl::meta::file::ID</definition>
        <argsstring>() const</argsstring>
        <name>ID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the <ref refid="structpsl_1_1_u_i_d" kindref="compound">psl::UID</ref> associated with this instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="57" column="16" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1meta_1_1file_1a80e158a6feeaef638312d8298d47761d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>psl::string8::view</type>
        <definition>psl::string8::view psl::meta::file::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the serialization name. </para>
</simplesect>
<simplesect kind="see"><para>serialization for more information. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="61" column="20" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1meta_1_1file_1a7d22ecc9d15e6203af4a77bc86cebcdb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; psl::string8_t &gt; &amp;</type>
        <definition>const std::vector&lt;psl::string8_t&gt;&amp; psl::meta::file::tags</definition>
        <argsstring>() const</argsstring>
        <name>tags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>all associated tags with this instance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="64" column="19" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classpsl_1_1meta_1_1file_1a104550819654af8e74ee648c709564c5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename S</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void psl::meta::file::serialize</definition>
        <argsstring>(S &amp;serializer)</argsstring>
        <name>serialize</name>
        <param>
          <type>S &amp;</type>
          <declname>serializer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="68" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" bodystart="68" bodyend="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classpsl_1_1meta_1_1file_1a2938e3799ca254316fcf0b2220911d85" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>const uint64_t</type>
        <definition>virtual const uint64_t psl::meta::file::polymorphic_id</definition>
        <argsstring>()</argsstring>
        <name>polymorphic_id</name>
        <reimplementedby refid="classcore_1_1meta_1_1texture__t_1add1359ef0d5904f7682609b3b2f90f13">polymorphic_id</reimplementedby>
        <reimplementedby refid="classcore_1_1meta_1_1shader_1affdc4728024114c84271c4cffcccee3b">polymorphic_id</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="79" column="24" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>disk-based representation of a runtime instance. </para>
    </briefdescription>
    <detaileddescription>
<para>This class contains associated helper data for a runtime instance, by default atleast a <ref refid="structpsl_1_1_u_i_d" kindref="compound">psl::UID</ref>, polymorphic information, and all associated tags are stored. You can extend <ref refid="classpsl_1_1meta_1_1file" kindref="compound">meta::file</ref> to add additional information that might be needed. See the &quot;see also&quot; section for examples. <simplesect kind="see"><para><ref refid="classcore_1_1meta_1_1shader" kindref="compound">core::meta::shader</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classcore_1_1meta_1_1texture__t" kindref="compound">core::meta::texture_t</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>core::meta::shader</label>
        <link refid="classcore_1_1meta_1_1shader"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>psl::meta::file</label>
        <link refid="classpsl_1_1meta_1_1file"/>
      </node>
      <node id="3">
        <label>core::meta::texture_t</label>
        <link refid="classcore_1_1meta_1_1texture__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" line="32" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/library.hpp" bodystart="31" bodyend="81"/>
    <listofallmembers>
      <member refid="classpsl_1_1meta_1_1file_1a9dd6ad47b1a46c01c0195e1f7feaea66" prot="public" virt="non-virtual"><scope>psl::meta::file</scope><name>file</name></member>
      <member refid="classpsl_1_1meta_1_1file_1aa8ba3e3715bfb8ffb1956414093cecff" prot="public" virt="non-virtual"><scope>psl::meta::file</scope><name>file</name></member>
      <member refid="classpsl_1_1meta_1_1file_1add07f982eb38df2274a1146be5c057d0" prot="public" virt="non-virtual"><scope>psl::meta::file</scope><name>file</name></member>
      <member refid="classpsl_1_1meta_1_1file_1ab2bcf7b6e0c00bf8441de0d6bccde949" prot="public" virt="non-virtual"><scope>psl::meta::file</scope><name>file</name></member>
      <member refid="classpsl_1_1meta_1_1file_1a1ba2901274565fa94ef76b19465cc4c2" prot="public" virt="non-virtual"><scope>psl::meta::file</scope><name>file</name></member>
      <member refid="classpsl_1_1meta_1_1file_1abea97c4747d4e435033ec7b73270c103" prot="public" virt="non-virtual"><scope>psl::meta::file</scope><name>ID</name></member>
      <member refid="classpsl_1_1meta_1_1file_1ad40109597018c48d16493d7e4b9c46d6" prot="private" virt="non-virtual"><scope>psl::meta::file</scope><name>m_ID</name></member>
      <member refid="classpsl_1_1meta_1_1file_1aae05057682fff9a0b775bc30954c2de9" prot="private" virt="non-virtual"><scope>psl::meta::file</scope><name>m_Tags</name></member>
      <member refid="classpsl_1_1meta_1_1file_1a80e158a6feeaef638312d8298d47761d" prot="public" virt="non-virtual"><scope>psl::meta::file</scope><name>name</name></member>
      <member refid="classpsl_1_1meta_1_1file_1aa9ee8e8b9e867bbaf3dbcdfad83530a0" prot="public" virt="non-virtual"><scope>psl::meta::file</scope><name>operator=</name></member>
      <member refid="classpsl_1_1meta_1_1file_1a5ed845814586f964ccc5f3c268c0861e" prot="public" virt="non-virtual"><scope>psl::meta::file</scope><name>operator=</name></member>
      <member refid="classpsl_1_1meta_1_1file_1a2938e3799ca254316fcf0b2220911d85" prot="private" virt="virtual"><scope>psl::meta::file</scope><name>polymorphic_id</name></member>
      <member refid="classpsl_1_1meta_1_1file_1a0956bf907b7c98c4747959a8d55e0e01" prot="private" virt="non-virtual"><scope>psl::meta::file</scope><name>polymorphic_identity</name></member>
      <member refid="classpsl_1_1meta_1_1file_1a7decbcc3de4c6f524df222f0dad614cb" prot="private" virt="non-virtual"><scope>psl::meta::file</scope><name>polymorphic_name</name></member>
      <member refid="classpsl_1_1meta_1_1file_1aff99cd87960d60b2d7cd59526d91398a" prot="public" virt="non-virtual"><scope>psl::meta::file</scope><name>psl::meta::library</name></member>
      <member refid="classpsl_1_1meta_1_1file_1ae6e4002148765f114da9fe1b5c64547d" prot="public" virt="non-virtual"><scope>psl::meta::file</scope><name>psl::serialization::accessor</name></member>
      <member refid="classpsl_1_1meta_1_1file_1a828385fbebc169cc2c144e099f3dc8a0" prot="private" virt="non-virtual"><scope>psl::meta::file</scope><name>serialization_name</name></member>
      <member refid="classpsl_1_1meta_1_1file_1a104550819654af8e74ee648c709564c5" prot="protected" virt="non-virtual"><scope>psl::meta::file</scope><name>serialize</name></member>
      <member refid="classpsl_1_1meta_1_1file_1a7d22ecc9d15e6203af4a77bc86cebcdb" prot="public" virt="non-virtual"><scope>psl::meta::file</scope><name>tags</name></member>
      <member refid="classpsl_1_1meta_1_1file_1a5dd34d73b5a8df3de9f3076cbb727047" prot="public" virt="virtual"><scope>psl::meta::file</scope><name>~file</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
