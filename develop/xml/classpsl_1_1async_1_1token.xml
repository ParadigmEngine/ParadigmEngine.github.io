<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpsl_1_1async_1_1token" kind="class" language="C++" prot="public" final="yes">
    <compoundname>psl::async::token</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classpsl_1_1async_1_1token_1a9dd9637c2a7c64b8b482570cd90169f7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class scheduler</definition>
        <argsstring></argsstring>
        <name>scheduler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="13" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpsl_1_1async_1_1token_1a3a800908d2f00a8f58e1f87afcf9dd00" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t psl::async::token::m_Token</definition>
        <argsstring></argsstring>
        <name>m_Token</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="39" column="8" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1async_1_1token_1abee187ba18ac21eaad75deb37322cb75" prot="private" static="no" mutable="no">
        <type><ref refid="classpsl_1_1view__ptr" kindref="compound">psl::view_ptr</ref>&lt; scheduler &gt;</type>
        <definition>psl::view_ptr&lt;scheduler&gt; psl::async::token::m_Scheduler</definition>
        <argsstring></argsstring>
        <name>m_Scheduler</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="40" column="15" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1ae70d407503e36fd104f2df294256328b" prot="private" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::async::token::token</definition>
        <argsstring>(size_t value, psl::view_ptr&lt; scheduler &gt; scheduler) noexcept</argsstring>
        <name>token</name>
        <param>
          <type>size_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classpsl_1_1view__ptr" kindref="compound">psl::view_ptr</ref>&lt; scheduler &gt;</type>
          <declname>scheduler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="14" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" bodystart="14" bodyend="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1a1ed7cecea86f7c57555147c4a80f6e5f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::async::token::token</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1a5376a20d1d76a3ab86ea5b0c63e1f84c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>psl::async::token::~token</definition>
        <argsstring>()=default</argsstring>
        <name>~token</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1a583a0987eb83db980a967bcb389a96fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>psl::async::token::token</definition>
        <argsstring>(const token &amp;other)=default</argsstring>
        <name>token</name>
        <param>
          <type>const token &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1a66a80da933c97c4c82abb636d60bc5bb" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::async::token::token</definition>
        <argsstring>(token &amp;&amp;other) noexcept=default</argsstring>
        <name>token</name>
        <param>
          <type>token &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1a8d1ed2bbd2c8ac3599e400b496a61122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>token &amp;</type>
        <definition>token&amp; psl::async::token::operator=</definition>
        <argsstring>(const token &amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const token &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="21" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1acb592114f19d7f0d33a174a31a71028d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>token &amp;</type>
        <definition>token&amp; psl::async::token::operator=</definition>
        <argsstring>(token &amp;&amp;other) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>token &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="22" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1a4d7ec942ca0c47c387d1f6ea4e5c4258" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::async::token::operator size_t</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator size_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="24" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1a08e5eaf4b8a4373cdea90c96c52f9a39" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void token::after</definition>
        <argsstring>(const token &amp;other) noexcept</argsstring>
        <name>after</name>
        <param>
          <type>const token &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="26" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/token.cpp" bodystart="6" bodyend="6"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1a28faa494daaa5daf11b11d110880ea48" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void token::after</definition>
        <argsstring>(const psl::array&lt; token &gt; &amp;others) noexcept</argsstring>
        <name>after</name>
        <param>
          <type>const psl::array&lt; token &gt; &amp;</type>
          <declname>others</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="27" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/token.cpp" bodystart="7" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1a815da52d88fc397a455f378aed585915" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void token::before</definition>
        <argsstring>(const token &amp;other) noexcept</argsstring>
        <name>before</name>
        <param>
          <type>const token &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="28" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/token.cpp" bodystart="8" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1ac6447fbda767af168178fbd65f895b41" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void token::before</definition>
        <argsstring>(const psl::array&lt; token &gt; &amp;others) noexcept</argsstring>
        <name>before</name>
        <param>
          <type>const psl::array&lt; token &gt; &amp;</type>
          <declname>others</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="29" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/token.cpp" bodystart="9" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1a4c8b1414bd41f7d1540e8d05fc2f0f3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void token::barriers</definition>
        <argsstring>(const psl::array&lt; barrier &gt; &amp;barriers)</argsstring>
        <name>barriers</name>
        <param>
          <type>const psl::array&lt; barrier &gt; &amp;</type>
          <declname>barriers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="31" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/token.cpp" bodystart="11" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1a643378b138a16aa8f852c5b03464bd5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void token::barriers</definition>
        <argsstring>(psl::array&lt; std::future&lt; barrier &gt;&gt; &amp;&amp;barriers)</argsstring>
        <name>barriers</name>
        <param>
          <type>psl::array&lt; std::future&lt; barrier &gt;&gt; &amp;&amp;</type>
          <declname>barriers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="32" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/token.cpp" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1aa8d7f8a2d04650ccc94e8770882bbed3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void token::barriers</definition>
        <argsstring>(std::future&lt; barrier &gt; &amp;&amp;barrier)</argsstring>
        <name>barriers</name>
        <param>
          <type>std::future&lt; barrier &gt; &amp;&amp;</type>
          <declname>barrier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="33" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/token.cpp" bodystart="13" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1af3a2625f9726265746a4e9c9ae309df0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void token::barriers</definition>
        <argsstring>(const psl::array&lt; std::shared_future&lt; barrier &gt;&gt; &amp;barriers)</argsstring>
        <name>barriers</name>
        <param>
          <type>const psl::array&lt; std::shared_future&lt; barrier &gt;&gt; &amp;</type>
          <declname>barriers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="34" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/token.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1abefbf6124514c1e2c923f839bdeded56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void token::barriers</definition>
        <argsstring>(std::shared_future&lt; barrier &gt; &amp;barrier)</argsstring>
        <name>barriers</name>
        <param>
          <type>std::shared_future&lt; barrier &gt; &amp;</type>
          <declname>barrier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="35" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/token.cpp" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1async_1_1token_1a3fa414ae2a413db5be7a77d70f79a696" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void token::consecutive</definition>
        <argsstring>(psl::array&lt; token &gt; others)</argsstring>
        <name>consecutive</name>
        <param>
          <type>psl::array&lt; token &gt;</type>
          <declname>others</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="36" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/src/async/token.cpp" bodystart="19" bodyend="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" line="12" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/async/token.hpp" bodystart="11" bodyend="41"/>
    <listofallmembers>
      <member refid="classpsl_1_1async_1_1token_1a08e5eaf4b8a4373cdea90c96c52f9a39" prot="public" virt="non-virtual"><scope>psl::async::token</scope><name>after</name></member>
      <member refid="classpsl_1_1async_1_1token_1a28faa494daaa5daf11b11d110880ea48" prot="public" virt="non-virtual"><scope>psl::async::token</scope><name>after</name></member>
      <member refid="classpsl_1_1async_1_1token_1a4c8b1414bd41f7d1540e8d05fc2f0f3f" prot="public" virt="non-virtual"><scope>psl::async::token</scope><name>barriers</name></member>
      <member refid="classpsl_1_1async_1_1token_1a643378b138a16aa8f852c5b03464bd5e" prot="public" virt="non-virtual"><scope>psl::async::token</scope><name>barriers</name></member>
      <member refid="classpsl_1_1async_1_1token_1aa8d7f8a2d04650ccc94e8770882bbed3" prot="public" virt="non-virtual"><scope>psl::async::token</scope><name>barriers</name></member>
      <member refid="classpsl_1_1async_1_1token_1af3a2625f9726265746a4e9c9ae309df0" prot="public" virt="non-virtual"><scope>psl::async::token</scope><name>barriers</name></member>
      <member refid="classpsl_1_1async_1_1token_1abefbf6124514c1e2c923f839bdeded56" prot="public" virt="non-virtual"><scope>psl::async::token</scope><name>barriers</name></member>
      <member refid="classpsl_1_1async_1_1token_1a815da52d88fc397a455f378aed585915" prot="public" virt="non-virtual"><scope>psl::async::token</scope><name>before</name></member>
      <member refid="classpsl_1_1async_1_1token_1ac6447fbda767af168178fbd65f895b41" prot="public" virt="non-virtual"><scope>psl::async::token</scope><name>before</name></member>
      <member refid="classpsl_1_1async_1_1token_1a3fa414ae2a413db5be7a77d70f79a696" prot="public" virt="non-virtual"><scope>psl::async::token</scope><name>consecutive</name></member>
      <member refid="classpsl_1_1async_1_1token_1abee187ba18ac21eaad75deb37322cb75" prot="private" virt="non-virtual"><scope>psl::async::token</scope><name>m_Scheduler</name></member>
      <member refid="classpsl_1_1async_1_1token_1a3a800908d2f00a8f58e1f87afcf9dd00" prot="private" virt="non-virtual"><scope>psl::async::token</scope><name>m_Token</name></member>
      <member refid="classpsl_1_1async_1_1token_1a4d7ec942ca0c47c387d1f6ea4e5c4258" prot="public" virt="non-virtual"><scope>psl::async::token</scope><name>operator size_t</name></member>
      <member refid="classpsl_1_1async_1_1token_1a8d1ed2bbd2c8ac3599e400b496a61122" prot="public" virt="non-virtual"><scope>psl::async::token</scope><name>operator=</name></member>
      <member refid="classpsl_1_1async_1_1token_1acb592114f19d7f0d33a174a31a71028d" prot="public" virt="non-virtual"><scope>psl::async::token</scope><name>operator=</name></member>
      <member refid="classpsl_1_1async_1_1token_1a9dd9637c2a7c64b8b482570cd90169f7" prot="private" virt="non-virtual"><scope>psl::async::token</scope><name>scheduler</name></member>
      <member refid="classpsl_1_1async_1_1token_1ae70d407503e36fd104f2df294256328b" prot="private" virt="non-virtual"><scope>psl::async::token</scope><name>token</name></member>
      <member refid="classpsl_1_1async_1_1token_1a1ed7cecea86f7c57555147c4a80f6e5f" prot="public" virt="non-virtual"><scope>psl::async::token</scope><name>token</name></member>
      <member refid="classpsl_1_1async_1_1token_1a583a0987eb83db980a967bcb389a96fa" prot="public" virt="non-virtual"><scope>psl::async::token</scope><name>token</name></member>
      <member refid="classpsl_1_1async_1_1token_1a66a80da933c97c4c82abb636d60bc5bb" prot="public" virt="non-virtual"><scope>psl::async::token</scope><name>token</name></member>
      <member refid="classpsl_1_1async_1_1token_1a5376a20d1d76a3ab86ea5b0c63e1f84c" prot="public" virt="non-virtual"><scope>psl::async::token</scope><name>~token</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
