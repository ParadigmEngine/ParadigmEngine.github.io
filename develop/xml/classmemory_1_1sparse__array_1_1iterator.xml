<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classmemory_1_1sparse__array_1_1iterator" kind="class" language="C++" prot="public">
    <compoundname>memory::sparse_array::iterator</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classmemory_1_1sparse__array_1_1iterator_1ab0ca00b3e1be45d78008ad16c7ab1b73" prot="public" static="no">
        <type>index_type</type>
        <definition>using memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::difference_type =  index_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="27" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmemory_1_1sparse__array_1_1iterator_1a31e319b714d79e68def45ff9579ed3f7" prot="public" static="no">
        <type>T</type>
        <definition>using memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="28" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmemory_1_1sparse__array_1_1iterator_1adbb786555e6503f11027ac78b03c3b1b" prot="public" static="no">
        <type>value_type *</type>
        <definition>using memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::pointer =  value_type*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="29" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmemory_1_1sparse__array_1_1iterator_1ac266aa4e3c881a15f701b146d1b1ccd2" prot="public" static="no">
        <type>value_type *const</type>
        <definition>using memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::const_pointer =  value_type* const</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="30" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmemory_1_1sparse__array_1_1iterator_1a45e75177961c496d2a14138865b41a26" prot="public" static="no">
        <type>value_type &amp;</type>
        <definition>using memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::reference =  value_type&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="31" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmemory_1_1sparse__array_1_1iterator_1a26c266fd66a4d63ee2a33e18c3f376b6" prot="public" static="no">
        <type>const value_type &amp;</type>
        <definition>using memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::const_reference =  const value_type&amp;</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="32" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classmemory_1_1sparse__array_1_1iterator_1aace5381abbe4468db3c20b499585f870" prot="public" static="no">
        <type>std::random_access_iterator_tag</type>
        <definition>using memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::iterator_category =  std::random_access_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="33" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classmemory_1_1sparse__array_1_1iterator_1a0c1d7ca0bc78fda04395da4dc3336927" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class sparse_array&lt; T, Key, chunks_size &gt;</definition>
        <argsstring></argsstring>
        <name>sparse_array&lt; T, Key, chunks_size &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="480" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmemory_1_1sparse__array_1_1iterator_1ae5e0095ccf5f27fd03b5bf0cf2fd389a" prot="private" static="no" mutable="no">
        <type>pointer</type>
        <definition>pointer memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="84" column="9" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmemory_1_1sparse__array_1_1iterator_1a6dd684349ac89eb4023922bc41e63e06" prot="private" static="no" mutable="no">
        <type>index_type *</type>
        <definition>index_type* memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::dense_index</definition>
        <argsstring></argsstring>
        <name>dense_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="85" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmemory_1_1sparse__array_1_1iterator_1aaa03c283099567e33c29430170244883" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::iterator</definition>
        <argsstring>(T *value, Key *index)</argsstring>
        <name>iterator</name>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>Key *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="24" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="24" bodyend="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmemory_1_1sparse__array_1_1iterator_1ad70894bd985e50ef149a5d0c3666ab83" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::iterator</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1_1iterator_1a62230abb2d365179618da9d937ef8616" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::~iterator</definition>
        <argsstring>()=default</argsstring>
        <name>~iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1_1iterator_1a711f19630343af27f733f5b3ce358f4c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::iterator</definition>
        <argsstring>(const iterator &amp;) noexcept=default</argsstring>
        <name>iterator</name>
        <param>
          <type>const iterator &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1_1iterator_1a1df4f9f9ef13590adad306f3438e225e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::iterator</definition>
        <argsstring>(iterator &amp;&amp;) noexcept=default</argsstring>
        <name>iterator</name>
        <param>
          <type>iterator &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1_1iterator_1aa9ef23657990f3279aca6a028592d453" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator=</definition>
        <argsstring>(const iterator &amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const iterator &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="39" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1_1iterator_1a8d0247efa32fb3c39b5506b95187421c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator=</definition>
        <argsstring>(iterator &amp;&amp;) noexcept=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>iterator &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="40" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1_1iterator_1a62037b029988303d2152133eed6bed8a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator++</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="44" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="44" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1_1iterator_1ad0ad2f1e901bdb2cf786985acde28f93" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator++</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="52" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1_1iterator_1a09432f8050d7a84acbfb25d9e7b0168d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator--</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="59" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="59" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1_1iterator_1a1f3a09fd16e5b6d3ebf89bca97f31668" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator--</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="67" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="67" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1_1iterator_1a8c265f66575698e142b7cbac94c858ca" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator==</definition>
        <argsstring>(const iterator &amp;other) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="74" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1_1iterator_1a341528849f450010749244be3010d6f0" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator!=</definition>
        <argsstring>(const iterator &amp;other) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="75" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1_1iterator_1a4654f84c77ba2957d886ef7f72299b46" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator-&gt;</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="77" column="9" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1_1iterator_1a01928f74e140969230ccd444c6c81e0b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator*</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="79" column="18" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classmemory_1_1sparse__array_1_1iterator_1a8690de9539bf2a7fd321afe1cd814612" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>index_type &amp;</type>
        <definition>index_type&amp; memory::sparse_array&lt; T, Key, chunks_size &gt;::iterator::index_of</definition>
        <argsstring>() const noexcept</argsstring>
        <name>index_of</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="81" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" line="22" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/memory/sparse_array.hpp" bodystart="21" bodyend="86"/>
    <listofallmembers>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1ac266aa4e3c881a15f701b146d1b1ccd2" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>const_pointer</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1a26c266fd66a4d63ee2a33e18c3f376b6" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>const_reference</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1a6dd684349ac89eb4023922bc41e63e06" prot="private" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>dense_index</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1ab0ca00b3e1be45d78008ad16c7ab1b73" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>difference_type</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1a8690de9539bf2a7fd321afe1cd814612" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>index_of</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1aaa03c283099567e33c29430170244883" prot="private" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>iterator</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1ad70894bd985e50ef149a5d0c3666ab83" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>iterator</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1a711f19630343af27f733f5b3ce358f4c" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>iterator</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1a1df4f9f9ef13590adad306f3438e225e" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>iterator</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1aace5381abbe4468db3c20b499585f870" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>iterator_category</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1a341528849f450010749244be3010d6f0" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>operator!=</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1a01928f74e140969230ccd444c6c81e0b" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>operator*</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1a62037b029988303d2152133eed6bed8a" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>operator++</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1ad0ad2f1e901bdb2cf786985acde28f93" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>operator++</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1a09432f8050d7a84acbfb25d9e7b0168d" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>operator--</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1a1f3a09fd16e5b6d3ebf89bca97f31668" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>operator--</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1a4654f84c77ba2957d886ef7f72299b46" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>operator-&gt;</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1aa9ef23657990f3279aca6a028592d453" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>operator=</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1a8d0247efa32fb3c39b5506b95187421c" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>operator=</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1a8c265f66575698e142b7cbac94c858ca" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>operator==</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1adbb786555e6503f11027ac78b03c3b1b" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>pointer</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1a45e75177961c496d2a14138865b41a26" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>reference</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1a0c1d7ca0bc78fda04395da4dc3336927" prot="private" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>sparse_array&lt; T, Key, chunks_size &gt;</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1ae5e0095ccf5f27fd03b5bf0cf2fd389a" prot="private" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>value</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1a31e319b714d79e68def45ff9579ed3f7" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>value_type</name></member>
      <member refid="classmemory_1_1sparse__array_1_1iterator_1a62230abb2d365179618da9d937ef8616" prot="public" virt="non-virtual"><scope>memory::sparse_array::iterator</scope><name>~iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
