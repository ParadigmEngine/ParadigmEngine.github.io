<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpsl_1_1sparse__array_1_1iterator" kind="class" language="C++" prot="public">
    <compoundname>psl::sparse_array::iterator</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classpsl_1_1sparse__array_1_1iterator_1abdc88b57a21f41d4a760b6c9468d1915" prot="public" static="no">
        <type>index_type</type>
        <definition>using psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::difference_type =  index_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="26" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1sparse__array_1_1iterator_1abfbf5f57542fb9f9cce47ebed185ef5b" prot="public" static="no">
        <type>T</type>
        <definition>using psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="27" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1sparse__array_1_1iterator_1ad13046f095e49c40321da201aa5ee35b" prot="public" static="no">
        <type>value_type *</type>
        <definition>using psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::pointer =  value_type*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="28" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1sparse__array_1_1iterator_1a527446f6e96dd7302e91e9cfba07f6e4" prot="public" static="no">
        <type>value_type *const</type>
        <definition>using psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::const_pointer =  value_type* const</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="29" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1sparse__array_1_1iterator_1a9df61e14d2758cd48b965d94e3c0ad38" prot="public" static="no">
        <type>value_type &amp;</type>
        <definition>using psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::reference =  value_type&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="30" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1sparse__array_1_1iterator_1a4dd3e864277dd14900d58d1a0785c776" prot="public" static="no">
        <type>const value_type &amp;</type>
        <definition>using psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::const_reference =  const value_type&amp;</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="31" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1sparse__array_1_1iterator_1a828c5e826ae271e75ee903f9580830a6" prot="public" static="no">
        <type>std::random_access_iterator_tag</type>
        <definition>using psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::iterator_category =  std::random_access_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="32" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classpsl_1_1sparse__array_1_1iterator_1a0c1d7ca0bc78fda04395da4dc3336927" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class sparse_array&lt; T, Key, chunks_size &gt;</definition>
        <argsstring></argsstring>
        <name>sparse_array&lt; T, Key, chunks_size &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="506" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpsl_1_1sparse__array_1_1iterator_1aa03b774e75d86dd2130217026e423ebd" prot="private" static="no" mutable="no">
        <type>pointer</type>
        <definition>pointer psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="83" column="9" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1sparse__array_1_1iterator_1aaa1b2535a4fd7775c869905991331172" prot="private" static="no" mutable="no">
        <type>index_type *</type>
        <definition>index_type* psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::dense_index</definition>
        <argsstring></argsstring>
        <name>dense_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="84" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classpsl_1_1sparse__array_1_1iterator_1a1d36346a9122a8a85409e95c06287040" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::iterator</definition>
        <argsstring>(T *value, Key *index)</argsstring>
        <name>iterator</name>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>Key *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="23" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="23" bodyend="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpsl_1_1sparse__array_1_1iterator_1a895f5d2d312626e437d0bd28d9776513" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::iterator</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1_1iterator_1a3cbf7de83798d2f76d58183072fd7f5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::~iterator</definition>
        <argsstring>()=default</argsstring>
        <name>~iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1_1iterator_1a3219e36a417cdfc4de3504af0f6cc712" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::iterator</definition>
        <argsstring>(const iterator &amp;) noexcept=default</argsstring>
        <name>iterator</name>
        <param>
          <type>const iterator &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1_1iterator_1a53698a96570c7f4c91fd392c5da8ea36" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::iterator</definition>
        <argsstring>(iterator &amp;&amp;) noexcept=default</argsstring>
        <name>iterator</name>
        <param>
          <type>iterator &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1_1iterator_1ada18f26a3fdcf265d1dd2a0d9753877a" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator=</definition>
        <argsstring>(const iterator &amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const iterator &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="38" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1_1iterator_1a38b9e64ec023bbe54b3af7d5e1c14862" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator=</definition>
        <argsstring>(iterator &amp;&amp;) noexcept=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>iterator &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="39" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1_1iterator_1ad6e029a5939f9daa8b0ff3bad76056cb" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator++</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="43" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="43" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1_1iterator_1a2cfe3747510565f34d0ecf373d5e53f6" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator++</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="51" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="51" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1_1iterator_1a0ac3625e97468994e15e01ab7d1a8813" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator--</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="58" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="58" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1_1iterator_1a2afd8bfe9b8b2a4b3638d40399ece2a2" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator--</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="66" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1_1iterator_1a28d4d08393d8f33416ca943289c495e6" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator==</definition>
        <argsstring>(const iterator &amp;other) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="73" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1_1iterator_1ac8381ce24be9419b1830530c13321c2b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator!=</definition>
        <argsstring>(const iterator &amp;other) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="74" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1_1iterator_1a4f1905d747f1c54f76160e836b2a9c5e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator-&gt;</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="76" column="9" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1_1iterator_1a9b9cd6c35d710ad4b81207adefba3533" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::operator*</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="78" column="18" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1sparse__array_1_1iterator_1a21476ccd9d5a0bdb81aa519a7fdcb5a6" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>index_type &amp;</type>
        <definition>index_type&amp; psl::sparse_array&lt; T, Key, chunks_size &gt;::iterator::index_of</definition>
        <argsstring>() const noexcept</argsstring>
        <name>index_of</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="80" column="12" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" line="21" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/sparse_array.hpp" bodystart="20" bodyend="85"/>
    <listofallmembers>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a527446f6e96dd7302e91e9cfba07f6e4" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>const_pointer</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a4dd3e864277dd14900d58d1a0785c776" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>const_reference</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1aaa1b2535a4fd7775c869905991331172" prot="private" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>dense_index</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1abdc88b57a21f41d4a760b6c9468d1915" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>difference_type</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a21476ccd9d5a0bdb81aa519a7fdcb5a6" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>index_of</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a1d36346a9122a8a85409e95c06287040" prot="private" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>iterator</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a895f5d2d312626e437d0bd28d9776513" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>iterator</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a3219e36a417cdfc4de3504af0f6cc712" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>iterator</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a53698a96570c7f4c91fd392c5da8ea36" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>iterator</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a828c5e826ae271e75ee903f9580830a6" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>iterator_category</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1ac8381ce24be9419b1830530c13321c2b" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>operator!=</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a9b9cd6c35d710ad4b81207adefba3533" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>operator*</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1ad6e029a5939f9daa8b0ff3bad76056cb" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>operator++</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a2cfe3747510565f34d0ecf373d5e53f6" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>operator++</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a0ac3625e97468994e15e01ab7d1a8813" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>operator--</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a2afd8bfe9b8b2a4b3638d40399ece2a2" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>operator--</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a4f1905d747f1c54f76160e836b2a9c5e" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>operator-&gt;</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1ada18f26a3fdcf265d1dd2a0d9753877a" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>operator=</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a38b9e64ec023bbe54b3af7d5e1c14862" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>operator=</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a28d4d08393d8f33416ca943289c495e6" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>operator==</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1ad13046f095e49c40321da201aa5ee35b" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>pointer</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a9df61e14d2758cd48b965d94e3c0ad38" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>reference</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a0c1d7ca0bc78fda04395da4dc3336927" prot="private" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>sparse_array&lt; T, Key, chunks_size &gt;</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1aa03b774e75d86dd2130217026e423ebd" prot="private" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>value</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1abfbf5f57542fb9f9cce47ebed185ef5b" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>value_type</name></member>
      <member refid="classpsl_1_1sparse__array_1_1iterator_1a3cbf7de83798d2f76d58183072fd7f5b" prot="public" virt="non-virtual"><scope>psl::sparse_array::iterator</scope><name>~iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
