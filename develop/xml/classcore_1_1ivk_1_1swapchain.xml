<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classcore_1_1ivk_1_1swapchain" kind="class" language="C++" prot="public">
    <compoundname>core::ivk::swapchain</compoundname>
    <includes refid="vk_2swapchain_8hpp" local="no">swapchain.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classcore_1_1ivk_1_1swapchain_1a6201fe98e6992b252cec36ddaba9ec40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class core::os::surface</definition>
        <argsstring></argsstring>
        <name>core::os::surface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="33" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1a26f27b57da17edea0145ddcbff8ea3d2" prot="private" static="no" mutable="no">
        <type><ref refid="classcore_1_1os_1_1surface" kindref="compound">core::os::surface</ref> *</type>
        <definition>core::os::surface* core::ivk::swapchain::m_OSSurface</definition>
        <argsstring></argsstring>
        <name>m_OSSurface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="116" column="19" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1afb09ce39ffc73395cf60b60aac6884c7" prot="private" static="no" mutable="no">
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1ivk_1_1context" kindref="compound">core::ivk::context</ref> &gt;</type>
        <definition>core::resource::handle&lt;core::ivk::context&gt; core::ivk::swapchain::m_Context</definition>
        <argsstring></argsstring>
        <name>m_Context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="117" column="24" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1a899fa4f7e7c897e9dd8ad2d38e29a716" prot="private" static="no" mutable="no">
        <type>vk::SurfaceKHR</type>
        <definition>vk::SurfaceKHR core::ivk::swapchain::m_Surface</definition>
        <argsstring></argsstring>
        <name>m_Surface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="119" column="16" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1a8a9ef89b80f13d6d612f4c144f04c213" prot="private" static="no" mutable="no">
        <type>vk::SurfaceCapabilitiesKHR</type>
        <definition>vk::SurfaceCapabilitiesKHR core::ivk::swapchain::m_SurfaceCapabilities</definition>
        <argsstring></argsstring>
        <name>m_SurfaceCapabilities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="120" column="28" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1ac402285db46b73753be7924f54413deb" prot="private" static="no" mutable="no">
        <type>vk::SurfaceFormatKHR</type>
        <definition>vk::SurfaceFormatKHR core::ivk::swapchain::m_SurfaceFormat</definition>
        <argsstring></argsstring>
        <name>m_SurfaceFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="121" column="22" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1a96cbfd896b1dba119999c147d842f47f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; vk::SurfaceFormatKHR &gt;</type>
        <definition>std::vector&lt;vk::SurfaceFormatKHR&gt; core::ivk::swapchain::m_SurfaceSupportFormats</definition>
        <argsstring></argsstring>
        <name>m_SurfaceSupportFormats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="122" column="13" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1a2a4e9d90a9579e00cce6dfb17add93f8" prot="private" static="no" mutable="no">
        <type>vk::Bool32</type>
        <definition>vk::Bool32 core::ivk::swapchain::m_SupportKHR</definition>
        <argsstring></argsstring>
        <name>m_SupportKHR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="123" column="12" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1a6b714b6c08e74dbb220c8972bf2895ab" prot="private" static="no" mutable="no">
        <type>vk::SwapchainKHR</type>
        <definition>vk::SwapchainKHR core::ivk::swapchain::m_Swapchain</definition>
        <argsstring></argsstring>
        <name>m_Swapchain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="125" column="18" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1a65a5dc3755e1db3cbf5d8bc8fda73ede" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t core::ivk::swapchain::m_SwapchainImageCount</definition>
        <argsstring></argsstring>
        <name>m_SwapchainImageCount</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="126" column="10" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1a02d43a3d45ceaef54b778795d4ed0ecc" prot="private" static="no" mutable="no">
        <type>std::vector&lt; vk::Image &gt;</type>
        <definition>std::vector&lt;vk::Image&gt; core::ivk::swapchain::m_SwapchainImages</definition>
        <argsstring></argsstring>
        <name>m_SwapchainImages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="127" column="13" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1af8339016021c1a690fd09153183ae3be" prot="private" static="no" mutable="no">
        <type>std::vector&lt; vk::ImageView &gt;</type>
        <definition>std::vector&lt;vk::ImageView&gt; core::ivk::swapchain::m_SwapchainImageViews</definition>
        <argsstring></argsstring>
        <name>m_SwapchainImageViews</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="128" column="13" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1acf1d8d156faffa66be3c12faf0651c10" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t core::ivk::swapchain::m_ImageCount</definition>
        <argsstring></argsstring>
        <name>m_ImageCount</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="129" column="10" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1ab04407d9a97c1f4b4525f8932e3130a5" prot="private" static="no" mutable="no">
        <type>vk::CommandBuffer</type>
        <definition>vk::CommandBuffer core::ivk::swapchain::m_SetupCommandBuffer</definition>
        <argsstring></argsstring>
        <name>m_SetupCommandBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="131" column="19" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1afcef4d3bc8655d14d075e5faf09f03d6" prot="private" static="no" mutable="no">
        <type>vk::RenderPass</type>
        <definition>vk::RenderPass core::ivk::swapchain::m_RenderPass</definition>
        <argsstring></argsstring>
        <name>m_RenderPass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="133" column="16" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1a0da03efaceb14b43e57df466aaa775b8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; vk::Framebuffer &gt;</type>
        <definition>std::vector&lt;vk::Framebuffer&gt; core::ivk::swapchain::m_Framebuffer</definition>
        <argsstring></argsstring>
        <name>m_Framebuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="135" column="13" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1a1f8aef722b30656d86e43d0d1d02ef81" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t core::ivk::swapchain::m_CurrentImage</definition>
        <argsstring></argsstring>
        <name>m_CurrentImage</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="137" column="10" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1ac1b5d852cfc1a9c22316f1405147728b" prot="private" static="no" mutable="no">
        <type>core::resource::cache_t &amp;</type>
        <definition>core::resource::cache_t&amp; core::ivk::swapchain::m_Cache</definition>
        <argsstring></argsstring>
        <name>m_Cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="139" column="25" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1adc6854691e6a2e5096ec2ff94329e8a7" prot="private" static="no" mutable="no">
        <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1ivk_1_1texture__t" kindref="compound">core::ivk::texture_t</ref> &gt;</type>
        <definition>core::resource::handle&lt;core::ivk::texture_t&gt; core::ivk::swapchain::m_DepthTextureHandle</definition>
        <argsstring></argsstring>
        <name>m_DepthTextureHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="140" column="24" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1ae76e7fc7991f16e6a187a2cc518c0ec8" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool core::ivk::swapchain::m_UseDepth</definition>
        <argsstring></argsstring>
        <name>m_UseDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="142" column="12" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1a69e541977c8fdc57ca97271acc41deb4" prot="private" static="no" mutable="no">
        <type>vk::ClearColorValue</type>
        <definition>vk::ClearColorValue core::ivk::swapchain::m_ClearColor</definition>
        <argsstring></argsstring>
        <name>m_ClearColor</name>
        <initializer>{std::array&lt;float, 4&gt; {0.25f, 0.4f, 0.95f, 1.0f}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="143" column="21" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1a7be0f7fdae3cebe48b7d6f34fe2b90a1" prot="private" static="no" mutable="no">
        <type>vk::ClearDepthStencilValue</type>
        <definition>vk::ClearDepthStencilValue core::ivk::swapchain::m_ClearDepth</definition>
        <argsstring></argsstring>
        <name>m_ClearDepth</name>
        <initializer>{vk::ClearDepthStencilValue(1.0f, 0U)}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="144" column="28" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1ac9ab15b6e45b5e5b7873a12a47542631" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool core::ivk::swapchain::m_Resizing</definition>
        <argsstring></argsstring>
        <name>m_Resizing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="146" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcore_1_1ivk_1_1swapchain_1a47aec3f292ea7e61e2bf2c7aefc3589f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool core::ivk::swapchain::m_ShouldResize</definition>
        <argsstring></argsstring>
        <name>m_ShouldResize</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="147" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1a7db0c21494355f33835c1ad7269e0aba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::ivk::swapchain::swapchain</definition>
        <argsstring>(core::resource::cache_t &amp;cache, const core::resource::metadata &amp;metaData, psl::meta::file *metaFile, core::resource::handle&lt; core::os::surface &gt; surface, core::resource::handle&lt; core::ivk::context &gt; context, bool use_depth=true)</argsstring>
        <name>swapchain</name>
        <param>
          <type>core::resource::cache_t &amp;</type>
          <declname>cache</declname>
        </param>
        <param>
          <type>const <ref refid="structcore_1_1resource_1_1metadata" kindref="compound">core::resource::metadata</ref> &amp;</type>
          <declname>metaData</declname>
        </param>
        <param>
          <type><ref refid="classpsl_1_1meta_1_1file" kindref="compound">psl::meta::file</ref> *</type>
          <declname>metaFile</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1os_1_1surface" kindref="compound">core::os::surface</ref> &gt;</type>
          <declname>surface</declname>
        </param>
        <param>
          <type><ref refid="classcore_1_1resource_1_1handle" kindref="compound">core::resource::handle</ref>&lt; <ref refid="classcore_1_1ivk_1_1context" kindref="compound">core::ivk::context</ref> &gt;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_depth</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1a41e10f5ebad54b209bc9c73f8a9e76ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>core::ivk::swapchain::~swapchain</definition>
        <argsstring>()</argsstring>
        <name>~swapchain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1ade61b6d3ba58649d4483e6adbe6d4172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool swapchain::next</definition>
        <argsstring>(vk::Semaphore presentComplete, uint32_t &amp;out_image_index)</argsstring>
        <name>next</name>
        <param>
          <type>vk::Semaphore</type>
          <declname>presentComplete</declname>
        </param>
        <param>
          <type>uint32_t &amp;</type>
          <declname>out_image_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true in case it managed to get the next image in the swapchain from the driver. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">presentComplete</parametername>
</parameternamelist>
<parameterdescription>
<para>the semaphore to flag once ready. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">out_image_index</parametername>
</parameternamelist>
<parameterdescription>
<para>the image index of the next image in the swapchain.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
when invoking this method it will request the next image in the swapchain, and return. the semaphore will be flaged once the resource is ready on the GPU. (and so should be used as a sync point before using the image in the swapchain. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="50" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="510" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1adeeb2e4c049c1d899522d35acf5f0e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vk::Result</type>
        <definition>vk::Result swapchain::present</definition>
        <argsstring>(vk::Semaphore wait)</argsstring>
        <name>present</name>
        <param>
          <type>vk::Semaphore</type>
          <declname>wait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>success in case presenting went well. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">wait</parametername>
</parameternamelist>
<parameterdescription>
<para>the semaphore to wait on when presenting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="54" column="12" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="541" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1a96aca58695fe522bba6178a23c98bdcb" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t swapchain::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <briefdescription>
<para>returns the amount of images in the swapchain </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="57" column="10" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="603" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1a72629a1ec605133f65f16ac6a8293208" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>vk::RenderPass</type>
        <definition>vk::RenderPass swapchain::renderpass</definition>
        <argsstring>() const noexcept</argsstring>
        <name>renderpass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the renderpass associated with the swapchain. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="59" column="16" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="604" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1a42c50d5c0dc7d06c58bce058fa814df6" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t swapchain::width</definition>
        <argsstring>() const noexcept</argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the width of the swapchain image </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="62" column="10" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="606" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1abf6b9ebef765cd559c40ec4a4ba212d9" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t swapchain::height</definition>
        <argsstring>() const noexcept</argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the height of the swapchainimage. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="64" column="10" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="607" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1aa6be9f4bfba1ea437333250ce0ee09df" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; vk::Framebuffer &gt; &amp;</type>
        <definition>const std::vector&lt; vk::Framebuffer &gt; &amp; swapchain::framebuffers</definition>
        <argsstring>() const noexcept</argsstring>
        <name>framebuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the vulkan framebuffers for the swapchain (one for each buffer). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="67" column="19" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="609" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1a50cc3b8932f5428a4f1db0b1ebd3f521" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; vk::Image &gt; &amp;</type>
        <definition>const std::vector&lt; vk::Image &gt; &amp; swapchain::images</definition>
        <argsstring>() const noexcept</argsstring>
        <name>images</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the images for the swapchain (one for each buffer). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="69" column="19" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="610" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1ae018f11e33320556b15c4ee7ccf48007" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const std::vector&lt; vk::ImageView &gt; &amp;</type>
        <definition>const std::vector&lt; vk::ImageView &gt; &amp; swapchain::views</definition>
        <argsstring>() const noexcept</argsstring>
        <name>views</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the image views for the swapchain (one for each buffer). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="71" column="19" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="611" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1a612f715485009b4656f95d1fac0e8643" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const vk::ClearColorValue</type>
        <definition>const vk::ClearColorValue core::ivk::swapchain::clear_color</definition>
        <argsstring>() const noexcept</argsstring>
        <name>clear_color</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the clear color value assigned to the swapchain. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="73" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1aa70aba3dee880982089bfa55b14073a8" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const vk::ClearDepthStencilValue</type>
        <definition>const vk::ClearDepthStencilValue swapchain::clear_depth</definition>
        <argsstring>() const noexcept</argsstring>
        <name>clear_depth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the clear depth color of the swapchain </para>
</simplesect>
<simplesect kind="warning"><para>will return default value in case there is no depth texture. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="76" column="34" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="613" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1a271898802ad040eb02b30ecc24406cd9" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool swapchain::has_depth</definition>
        <argsstring>() const noexcept</argsstring>
        <name>has_depth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>if the swapchain uses a depth texture or not. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="79" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="614" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1af0d00dfa60d2cec89693633cc8a28ae2" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void core::ivk::swapchain::clear_color</definition>
        <argsstring>(vk::ClearColorValue color) noexcept</argsstring>
        <name>clear_color</name>
        <param>
          <type>vk::ClearColorValue</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>sets the clear color </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">color</parametername>
</parameternamelist>
<parameterdescription>
<para>the new clear color value to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="82" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1af490a715688d063358b78059300e79d4" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool swapchain::is_ready</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_ready</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>false in case the window might be resizing. </para>
</simplesect>
<simplesect kind="warning"><para>calls to getting the next swapchain image and presenting will fail in that scenario. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="86" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="600" bodyend="600"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1ade270c511c7d5b9401b5ea8ff8eb13a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swapchain::init_surface</definition>
        <argsstring>()</argsstring>
        <name>init_surface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="89" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="190" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1ae3e5ecb2df563443e2f67c175b79ea03" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swapchain::deinit_surface</definition>
        <argsstring>()</argsstring>
        <name>deinit_surface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="90" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="242" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1a7fa6a6f5b1a130cf1ed97190b2a1a9be" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swapchain::init_swapchain</definition>
        <argsstring>(std::optional&lt; vk::SwapchainKHR &gt; previous=std::nullopt)</argsstring>
        <name>init_swapchain</name>
        <param>
          <type>std::optional&lt; vk::SwapchainKHR &gt;</type>
          <declname>previous</declname>
          <defval>std::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="92" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="244" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1a09816c9596f8d6ccf3902468d3668b9a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swapchain::deinit_swapchain</definition>
        <argsstring>()</argsstring>
        <name>deinit_swapchain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="93" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="288" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1aa04b834790b027e0146d43df10e85467" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swapchain::init_images</definition>
        <argsstring>()</argsstring>
        <name>init_images</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="95" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="290" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1a70b1491a557c205d8a4bccd1d41996e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swapchain::deinit_images</definition>
        <argsstring>()</argsstring>
        <name>deinit_images</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="96" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="319" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1a91f5a6453e7a288e057c9abd014bfb4a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swapchain::init_command_buffer</definition>
        <argsstring>()</argsstring>
        <name>init_command_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="98" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="325" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1ae8622653fb7f171e9592f52d6817d44e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swapchain::deinit_command_buffer</definition>
        <argsstring>()</argsstring>
        <name>deinit_command_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="99" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="360" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1a125025e0bd7ca8265b26e07a2d81e1dd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swapchain::init_depthstencil</definition>
        <argsstring>()</argsstring>
        <name>init_depthstencil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="101" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="366" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1a3be383ac10157bd32a2d5f38c5324b73" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swapchain::deinit_depthstencil</definition>
        <argsstring>()</argsstring>
        <name>deinit_depthstencil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="102" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="391" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1ab87190dfc443e9f7c65f3f575bdf9579" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swapchain::init_renderpass</definition>
        <argsstring>()</argsstring>
        <name>init_renderpass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="104" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="395" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1a77c3124bd47a8dc3887d6ec7b7033629" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swapchain::deinit_renderpass</definition>
        <argsstring>()</argsstring>
        <name>deinit_renderpass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="105" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="476" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1a041b59d9fed3eb14b5f21db82af71666" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swapchain::init_framebuffer</definition>
        <argsstring>()</argsstring>
        <name>init_framebuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="107" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="478" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1aea3e7b59099e726ef6833ae45f857a4e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swapchain::deinit_framebuffer</definition>
        <argsstring>()</argsstring>
        <name>deinit_framebuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="108" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="504" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1aad1223927d75cf464317c1e8ceecf111" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swapchain::flush</definition>
        <argsstring>()</argsstring>
        <name>flush</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="110" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="341" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1acea355d29bc45a09add27239b207d6c9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swapchain::resize</definition>
        <argsstring>()</argsstring>
        <name>resize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="113" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="561" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="classcore_1_1ivk_1_1swapchain_1a9237e006abad7b2893f3e26cc6dbc75d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void swapchain::apply_resize</definition>
        <argsstring>()</argsstring>
        <name>apply_resize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="114" column="6" bodyfile="/home/runner/work/paradigm/paradigm/core/src/vk/swapchain.cpp" bodystart="568" bodyend="598"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>describes a framebuffer that is specially handled and created by the driver </para>
    </briefdescription>
    <detaileddescription>
<para>swpachains can be considered special <ref refid="classcore_1_1ivk_1_1framebuffer__t" kindref="compound">core::ivk::framebuffer_t</ref>&apos;s, with some special pecularities. For example, unlike framebuffer&apos;s, you have to request the next image from the driver for a swapchain, and there are many more restrictions on both format and size imposed on swapchains. </para>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" line="32" column="1" bodyfile="/home/runner/work/paradigm/paradigm/core/inc/vk/swapchain.hpp" bodystart="31" bodyend="148"/>
    <listofallmembers>
      <member refid="classcore_1_1ivk_1_1swapchain_1a9237e006abad7b2893f3e26cc6dbc75d" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>apply_resize</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a612f715485009b4656f95d1fac0e8643" prot="public" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>clear_color</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1af0d00dfa60d2cec89693633cc8a28ae2" prot="public" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>clear_color</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1aa70aba3dee880982089bfa55b14073a8" prot="public" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>clear_depth</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a6201fe98e6992b252cec36ddaba9ec40" prot="public" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>core::os::surface</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1ae8622653fb7f171e9592f52d6817d44e" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>deinit_command_buffer</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a3be383ac10157bd32a2d5f38c5324b73" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>deinit_depthstencil</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1aea3e7b59099e726ef6833ae45f857a4e" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>deinit_framebuffer</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a70b1491a557c205d8a4bccd1d41996e8" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>deinit_images</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a77c3124bd47a8dc3887d6ec7b7033629" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>deinit_renderpass</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1ae3e5ecb2df563443e2f67c175b79ea03" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>deinit_surface</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a09816c9596f8d6ccf3902468d3668b9a" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>deinit_swapchain</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1aad1223927d75cf464317c1e8ceecf111" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>flush</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1aa6be9f4bfba1ea437333250ce0ee09df" prot="public" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>framebuffers</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a271898802ad040eb02b30ecc24406cd9" prot="public" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>has_depth</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1abf6b9ebef765cd559c40ec4a4ba212d9" prot="public" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>height</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a50cc3b8932f5428a4f1db0b1ebd3f521" prot="public" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>images</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a91f5a6453e7a288e057c9abd014bfb4a" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>init_command_buffer</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a125025e0bd7ca8265b26e07a2d81e1dd" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>init_depthstencil</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a041b59d9fed3eb14b5f21db82af71666" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>init_framebuffer</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1aa04b834790b027e0146d43df10e85467" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>init_images</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1ab87190dfc443e9f7c65f3f575bdf9579" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>init_renderpass</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1ade270c511c7d5b9401b5ea8ff8eb13a4" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>init_surface</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a7fa6a6f5b1a130cf1ed97190b2a1a9be" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>init_swapchain</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1af490a715688d063358b78059300e79d4" prot="public" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>is_ready</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1ac1b5d852cfc1a9c22316f1405147728b" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_Cache</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a69e541977c8fdc57ca97271acc41deb4" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_ClearColor</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a7be0f7fdae3cebe48b7d6f34fe2b90a1" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_ClearDepth</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1afb09ce39ffc73395cf60b60aac6884c7" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_Context</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a1f8aef722b30656d86e43d0d1d02ef81" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_CurrentImage</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1adc6854691e6a2e5096ec2ff94329e8a7" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_DepthTextureHandle</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a0da03efaceb14b43e57df466aaa775b8" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_Framebuffer</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1acf1d8d156faffa66be3c12faf0651c10" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_ImageCount</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a26f27b57da17edea0145ddcbff8ea3d2" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_OSSurface</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1afcef4d3bc8655d14d075e5faf09f03d6" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_RenderPass</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1ac9ab15b6e45b5e5b7873a12a47542631" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_Resizing</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1ab04407d9a97c1f4b4525f8932e3130a5" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_SetupCommandBuffer</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a47aec3f292ea7e61e2bf2c7aefc3589f" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_ShouldResize</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a2a4e9d90a9579e00cce6dfb17add93f8" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_SupportKHR</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a899fa4f7e7c897e9dd8ad2d38e29a716" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_Surface</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a8a9ef89b80f13d6d612f4c144f04c213" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_SurfaceCapabilities</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1ac402285db46b73753be7924f54413deb" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_SurfaceFormat</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a96cbfd896b1dba119999c147d842f47f" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_SurfaceSupportFormats</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a6b714b6c08e74dbb220c8972bf2895ab" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_Swapchain</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a65a5dc3755e1db3cbf5d8bc8fda73ede" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_SwapchainImageCount</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a02d43a3d45ceaef54b778795d4ed0ecc" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_SwapchainImages</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1af8339016021c1a690fd09153183ae3be" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_SwapchainImageViews</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1ae76e7fc7991f16e6a187a2cc518c0ec8" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>m_UseDepth</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1ade61b6d3ba58649d4483e6adbe6d4172" prot="public" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>next</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1adeeb2e4c049c1d899522d35acf5f0e39" prot="public" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>present</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a72629a1ec605133f65f16ac6a8293208" prot="public" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>renderpass</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1acea355d29bc45a09add27239b207d6c9" prot="private" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>resize</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a96aca58695fe522bba6178a23c98bdcb" prot="public" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>size</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a7db0c21494355f33835c1ad7269e0aba" prot="public" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>swapchain</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1ae018f11e33320556b15c4ee7ccf48007" prot="public" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>views</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a42c50d5c0dc7d06c58bce058fa814df6" prot="public" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>width</name></member>
      <member refid="classcore_1_1ivk_1_1swapchain_1a41e10f5ebad54b209bc9c73f8a9e76ad" prot="public" virt="non-virtual"><scope>core::ivk::swapchain</scope><name>~swapchain</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
