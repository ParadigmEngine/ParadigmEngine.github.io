<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classpsl_1_1ring__array_1_1iterator" kind="class" language="C++" prot="public">
    <compoundname>psl::ring_array::iterator</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classpsl_1_1ring__array_1_1iterator_1a5c58e371b05d104452ec0c2f76ef1a24" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using psl::ring_array&lt; T &gt;::iterator::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="15" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1ring__array_1_1iterator_1a22e3425ad32157e13805e373cef0d1af" prot="public" static="no">
        <type>T</type>
        <definition>using psl::ring_array&lt; T &gt;::iterator::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="16" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1ring__array_1_1iterator_1a963b146841d2b5a937c1ce1a4eff2a59" prot="public" static="no">
        <type>value_type *</type>
        <definition>using psl::ring_array&lt; T &gt;::iterator::pointer =  value_type*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="17" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1ring__array_1_1iterator_1aac41c7599251ce301e612ad866c77b51" prot="public" static="no">
        <type>value_type &amp;</type>
        <definition>using psl::ring_array&lt; T &gt;::iterator::reference =  value_type&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="18" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpsl_1_1ring__array_1_1iterator_1a751a9866c5be162fb54c1ddde813b87d" prot="public" static="no">
        <type>std::random_access_iterator_tag</type>
        <definition>using psl::ring_array&lt; T &gt;::iterator::iterator_category =  std::random_access_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="19" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classpsl_1_1ring__array_1_1iterator_1a9c6764b4aea5ff7002e5482e5484adc8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ring_array&lt; T &gt;</definition>
        <argsstring></argsstring>
        <name>ring_array&lt; T &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="339" column="8" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpsl_1_1ring__array_1_1iterator_1a95b0236f42c7633ea8e0e8f6ccdd734f" prot="private" static="no" mutable="no">
        <type>pointer</type>
        <definition>pointer psl::ring_array&lt; T &gt;::iterator::m_Data</definition>
        <argsstring></argsstring>
        <name>m_Data</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="108" column="9" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1ring__array_1_1iterator_1ac77b645135ff89b73415a3ba4f7b0353" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t psl::ring_array&lt; T &gt;::iterator::m_Begin</definition>
        <argsstring></argsstring>
        <name>m_Begin</name>
        <initializer>{0u}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="109" column="8" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1ring__array_1_1iterator_1a006f8be15b8fd2bf66722f9da9586125" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t psl::ring_array&lt; T &gt;::iterator::m_Capacity</definition>
        <argsstring></argsstring>
        <name>m_Capacity</name>
        <initializer>{0u}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="110" column="8" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpsl_1_1ring__array_1_1iterator_1a664d2c9665a13ba2438393c5f239c862" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t psl::ring_array&lt; T &gt;::iterator::m_Index</definition>
        <argsstring></argsstring>
        <name>m_Index</name>
        <initializer>{0u}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="111" column="8" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1ae19cff038fa8b832ef82899d5afc7f56" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::ring_array&lt; T &gt;::iterator::iterator</definition>
        <argsstring>(T *data, size_t begin=0, size_t capacity=0, size_t index=0) noexcept</argsstring>
        <name>iterator</name>
        <param>
          <type>T *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>begin</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="21" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="21" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1a23736b2cc5f163398dd140e7c4e2c032" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::ring_array&lt; T &gt;::iterator::iterator</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1a5abf11cac907b085e3bde2d0d01fe457" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::ring_array&lt; T &gt;::iterator::iterator</definition>
        <argsstring>(const iterator &amp;rhs) noexcept=default</argsstring>
        <name>iterator</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1a466544100121b449f34752f7f88ab508" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>psl::ring_array&lt; T &gt;::iterator::iterator</definition>
        <argsstring>(iterator &amp;&amp;rhs) noexcept=default</argsstring>
        <name>iterator</name>
        <param>
          <type>iterator &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1a7963c6f10edd2995aa94d638ecfe17aa" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; psl::ring_array&lt; T &gt;::iterator::operator=</definition>
        <argsstring>(const iterator &amp;rhs) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="26" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1a6ae869ae153f5d56324c8461b83e9cec" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; psl::ring_array&lt; T &gt;::iterator::operator=</definition>
        <argsstring>(iterator &amp;&amp;rhs) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>iterator &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="27" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1a1e0a0a6333564438969992d322509890" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void psl::ring_array&lt; T &gt;::iterator::swap</definition>
        <argsstring>(iterator &amp;iter)</argsstring>
        <name>swap</name>
        <param>
          <type>iterator &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="28" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1ab39bbff2fb1f0115f64dc11fa824ccc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool psl::ring_array&lt; T &gt;::iterator::operator==</definition>
        <argsstring>(const iterator &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="33" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1ad76ed04984406f7546f48ea71092f30f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool psl::ring_array&lt; T &gt;::iterator::operator!=</definition>
        <argsstring>(const iterator &amp;rhs) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="34" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1ab9f194909fc32ccb06fb7571b4a62387" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool psl::ring_array&lt; T &gt;::iterator::operator&lt;</definition>
        <argsstring>(const iterator &amp;rhs) const noexcept</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="38" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1a8a97f0532e343bfad9d6d7af11a61ed5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool psl::ring_array&lt; T &gt;::iterator::operator&lt;=</definition>
        <argsstring>(const iterator &amp;rhs) const noexcept</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="42" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1aba37dcf4d41f48fac8fcf8613b260421" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool psl::ring_array&lt; T &gt;::iterator::operator&gt;</definition>
        <argsstring>(const iterator &amp;rhs) const noexcept</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="46" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1a710d03bc13b83b8910d6bdcda295df5f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool psl::ring_array&lt; T &gt;::iterator::operator&gt;=</definition>
        <argsstring>(const iterator &amp;rhs) const noexcept</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="50" column="6" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1aae06daa27716c374022485e5094ed97d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference psl::ring_array&lt; T &gt;::iterator::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="55" column="11" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1a17523ec20f03442fdb647f641e9c20b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer psl::ring_array&lt; T &gt;::iterator::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="56" column="9" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1a08935928df7f26d4f6fb90f9a0bd2fea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference psl::ring_array&lt; T &gt;::iterator::operator[]</definition>
        <argsstring>(difference_type n)</argsstring>
        <name>operator[]</name>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="57" column="11" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1afddab7d937e9372953fec93680032230" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; psl::ring_array&lt; T &gt;::iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="59" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1a1762b754814f159837bccff43cf89875" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator psl::ring_array&lt; T &gt;::iterator::operator++</definition>
        <argsstring>(int) const</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="64" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="64" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1a9c262af4bf3b5aed439ac2ab42a1d409" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; psl::ring_array&lt; T &gt;::iterator::operator+=</definition>
        <argsstring>(difference_type n)</argsstring>
        <name>operator+=</name>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="70" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1a13127cc1ea8a36792c06738d5b9c429a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator psl::ring_array&lt; T &gt;::iterator::operator+</definition>
        <argsstring>(difference_type n) const</argsstring>
        <name>operator+</name>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="75" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="75" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1a459d51f99fc8b2187f8a7afc644793f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; psl::ring_array&lt; T &gt;::iterator::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="81" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="81" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1abe61257f7e0798c8ef9586a46e2bab2c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator psl::ring_array&lt; T &gt;::iterator::operator--</definition>
        <argsstring>(int) const</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="86" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="86" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1afcbe1cbc0c3961b806d56f6af8f0e465" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; psl::ring_array&lt; T &gt;::iterator::operator-=</definition>
        <argsstring>(difference_type n)</argsstring>
        <name>operator-=</name>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="92" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1a233258684d2eb5872d986d5e5476ba2d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator psl::ring_array&lt; T &gt;::iterator::operator-</definition>
        <argsstring>(difference_type n) const</argsstring>
        <name>operator-</name>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="98" column="10" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="98" bodyend="103"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classpsl_1_1ring__array_1_1iterator_1a2547a53274fffb7a68471409a73167a9" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t psl::ring_array&lt; T &gt;::iterator::offset_of</definition>
        <argsstring>(size_t index) const noexcept</argsstring>
        <name>offset_of</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="106" column="15" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="106" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" line="11" column="1" bodyfile="/home/runner/work/paradigm/paradigm/psl/inc/psl/collections/ring_array.hpp" bodystart="10" bodyend="112"/>
    <listofallmembers>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a5c58e371b05d104452ec0c2f76ef1a24" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>difference_type</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1ae19cff038fa8b832ef82899d5afc7f56" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>iterator</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a23736b2cc5f163398dd140e7c4e2c032" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>iterator</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a5abf11cac907b085e3bde2d0d01fe457" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>iterator</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a466544100121b449f34752f7f88ab508" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>iterator</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a751a9866c5be162fb54c1ddde813b87d" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>iterator_category</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1ac77b645135ff89b73415a3ba4f7b0353" prot="private" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>m_Begin</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a006f8be15b8fd2bf66722f9da9586125" prot="private" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>m_Capacity</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a95b0236f42c7633ea8e0e8f6ccdd734f" prot="private" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>m_Data</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a664d2c9665a13ba2438393c5f239c862" prot="private" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>m_Index</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a2547a53274fffb7a68471409a73167a9" prot="private" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>offset_of</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1ad76ed04984406f7546f48ea71092f30f" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator!=</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1aae06daa27716c374022485e5094ed97d" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator*</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a13127cc1ea8a36792c06738d5b9c429a" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator+</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1afddab7d937e9372953fec93680032230" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator++</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a1762b754814f159837bccff43cf89875" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator++</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a9c262af4bf3b5aed439ac2ab42a1d409" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator+=</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a233258684d2eb5872d986d5e5476ba2d" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator-</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a459d51f99fc8b2187f8a7afc644793f9" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator--</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1abe61257f7e0798c8ef9586a46e2bab2c" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator--</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1afcbe1cbc0c3961b806d56f6af8f0e465" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator-=</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a17523ec20f03442fdb647f641e9c20b4" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator-&gt;</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1ab9f194909fc32ccb06fb7571b4a62387" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator&lt;</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a8a97f0532e343bfad9d6d7af11a61ed5" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator&lt;=</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a7963c6f10edd2995aa94d638ecfe17aa" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator=</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a6ae869ae153f5d56324c8461b83e9cec" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator=</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1ab39bbff2fb1f0115f64dc11fa824ccc0" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator==</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1aba37dcf4d41f48fac8fcf8613b260421" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator&gt;</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a710d03bc13b83b8910d6bdcda295df5f" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator&gt;=</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a08935928df7f26d4f6fb90f9a0bd2fea" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>operator[]</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a963b146841d2b5a937c1ce1a4eff2a59" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>pointer</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1aac41c7599251ce301e612ad866c77b51" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>reference</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a9c6764b4aea5ff7002e5482e5484adc8" prot="private" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>ring_array&lt; T &gt;</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a1e0a0a6333564438969992d322509890" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>swap</name></member>
      <member refid="classpsl_1_1ring__array_1_1iterator_1a22e3425ad32157e13805e373cef0d1af" prot="public" virt="non-virtual"><scope>psl::ring_array::iterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
