<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="gles_2shader_8hpp" kind="file" language="C++">
    <compoundname>shader.hpp</compoundname>
    <includes refid="fwd_2gles_2shader_8hpp" local="yes">fwd/gles/shader.hpp</includes>
    <includes refid="fwd_2resource_2resource_8hpp" local="yes">fwd/resource/resource.hpp</includes>
    <includes refid="gles_2types_8hpp" local="yes">gles/types.hpp</includes>
    <includes refid="ustring_8hpp" local="yes">psl/ustring.hpp</includes>
    <includes local="no">limits</includes>
    <includedby refid="gles_2compute_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/gles/compute.cpp</includedby>
    <includedby refid="gles_2geometry_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/gles/geometry.cpp</includedby>
    <includedby refid="gles_2material_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/gles/material.cpp</includedby>
    <includedby refid="program_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/gles/program.cpp</includedby>
    <includedby refid="gles_2shader_8cpp" local="yes">/home/runner/work/paradigm/paradigm/core/src/gles/shader.cpp</includedby>
    <incdepgraph>
      <node id="12">
        <label>limits</label>
      </node>
      <node id="3">
        <label>defines.hpp</label>
        <link refid="defines_8hpp_source"/>
      </node>
      <node id="2">
        <label>fwd/gles/shader.hpp</label>
        <link refid="fwd_2gles_2shader_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>psl/platform_def.hpp</label>
        <link refid="platform__def_8hpp_source"/>
      </node>
      <node id="5">
        <label>gles/types.hpp</label>
        <link refid="gles_2types_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>fstream</label>
      </node>
      <node id="4">
        <label>fwd/resource/resource.hpp</label>
        <link refid="fwd_2resource_2resource_8hpp_source"/>
      </node>
      <node id="6">
        <label>KHR/khrplatform.h</label>
      </node>
      <node id="1">
        <label>/home/runner/work/paradigm/paradigm/core/inc/gles/shader.hpp</label>
        <link refid="gles_2shader_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>cstring</label>
      </node>
      <node id="7">
        <label>psl/ustring.hpp</label>
        <link refid="ustring_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>/home/runner/work/paradigm/paradigm/core/src/gles/shader.cpp</label>
        <link refid="gles_2shader_8cpp_source"/>
      </node>
      <node id="3">
        <label>/home/runner/work/paradigm/paradigm/core/src/gles/geometry.cpp</label>
        <link refid="gles_2geometry_8cpp_source"/>
      </node>
      <node id="2">
        <label>/home/runner/work/paradigm/paradigm/core/src/gles/compute.cpp</label>
        <link refid="gles_2compute_8cpp_source"/>
      </node>
      <node id="4">
        <label>/home/runner/work/paradigm/paradigm/core/src/gles/material.cpp</label>
        <link refid="gles_2material_8cpp_source"/>
      </node>
      <node id="1">
        <label>/home/runner/work/paradigm/paradigm/core/inc/gles/shader.hpp</label>
        <link refid="gles_2shader_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/runner/work/paradigm/paradigm/core/src/gles/program.cpp</label>
        <link refid="program_8cpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classcore_1_1igles_1_1shader" prot="public">core::igles::shader</innerclass>
    <innernamespace refid="namespacecore">core</innernamespace>
    <innernamespace refid="namespacecore_1_1igles">core::igles</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fwd/gles/shader.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fwd/resource/resource.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gles/types.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;psl/ustring.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">core::igles</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">shader</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader(core::resource::cache_t&amp;<sp/>cache,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcore_1_1resource_1_1metadata" kindref="compound">core::resource::metadata</ref>&amp;<sp/>metaData,<sp/><ref refid="classcore_1_1meta_1_1shader" kindref="compound">core::meta::shader</ref>*<sp/>metaFile);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~shader();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shader&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader(shader&amp;&amp;)<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shader&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader&amp;<sp/>operator=(shader&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLuint<sp/>id()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecore" kindref="compound">core</ref>::meta::shader*<sp/>meta()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Meta;<sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLuint<sp/>m_Shader<sp/>{std::numeric_limits&lt;GLuint&gt;::max()};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcore_1_1meta_1_1shader" kindref="compound">core::meta::shader</ref>*<sp/>m_Meta;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>core::igles</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/paradigm/paradigm/core/inc/gles/shader.hpp"/>
  </compounddef>
</doxygen>
